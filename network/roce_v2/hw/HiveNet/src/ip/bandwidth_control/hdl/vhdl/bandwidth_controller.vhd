-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bandwidth_controller is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inputPacket_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    inputPacket_TVALID : IN STD_LOGIC;
    inputPacket_TREADY : OUT STD_LOGIC;
    inputPacket_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    inputPacket_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    inputPacket_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    inputPacket_TDEST : IN STD_LOGIC_VECTOR (12 downto 0);
    inputPacketSize_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    inputPacketSize_TVALID : IN STD_LOGIC;
    inputPacketSize_TREADY : OUT STD_LOGIC;
    outputPacket_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    outputPacket_TVALID : OUT STD_LOGIC;
    outputPacket_TREADY : IN STD_LOGIC;
    outputPacket_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0);
    outputPacket_TSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    outputPacket_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    outputPacket_TDEST : OUT STD_LOGIC_VECTOR (12 downto 0);
    outputPacketSize_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    outputPacketSize_TVALID : OUT STD_LOGIC;
    outputPacketSize_TREADY : IN STD_LOGIC;
    ecn_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    ecn_ce0 : OUT STD_LOGIC;
    ecn_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    state_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    state_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of bandwidth_controller is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "bandwidth_controller_bandwidth_controller,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.665857,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3975,HLS_SYN_LUT=1080,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0_1 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_0_2 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_0_3 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal prevSize : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal prevData_last_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal cycles_to_wait : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal prevData_data_V : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal prevData_keep_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal prevData_strb_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal prevData_dest_V : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    signal inputPacket_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal state_load_load_fu_288_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_vld_fu_412_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal outputPacket_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal state_load_reg_530 : STD_LOGIC_VECTOR (1 downto 0);
    signal state_load_reg_530_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_vld_reg_595 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_vld_reg_595_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ecnData_V_reg_645 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal state_load_reg_530_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_vld_reg_595_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ecnData_V_reg_645_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_vld1_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_vld1_reg_540_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_vld1_reg_540_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal outputPacketSize_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln43_reg_641 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_641_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op57_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op95_write_state3 : BOOLEAN;
    signal ap_predicate_op96_write_state3 : BOOLEAN;
    signal ap_predicate_op98_write_state3 : BOOLEAN;
    signal ap_predicate_op99_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_predicate_op125_write_state4 : BOOLEAN;
    signal ap_predicate_op126_write_state4 : BOOLEAN;
    signal ap_predicate_op128_write_state4 : BOOLEAN;
    signal ap_predicate_op129_write_state4 : BOOLEAN;
    signal regslice_both_outputPacket_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_outputPacketSize_U_apdone_blk : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_last_V_2_load_fu_292_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_reg_535 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_reg_535_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_264_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_reg_544 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_data_V_reg_544_pp0_iter1_reg : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_keep_V_reg_549 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_keep_V_reg_549_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_strb_V_reg_554 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_strb_V_reg_554_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_280_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_559 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_559_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_reg_564 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_dest_V_reg_564_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_data_V_2_reg_569 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_data_V_2_reg_569_pp0_iter1_reg : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_keep_V_2_reg_574 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_keep_V_2_reg_574_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_strb_V_2_reg_579 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_strb_V_2_reg_579_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_dest_V_2_reg_584 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_dest_V_2_reg_584_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_reg_599 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_599_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_1_fu_420_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_data_V_1_reg_606 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_data_V_1_reg_606_pp0_iter1_reg : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_keep_V_1_fu_424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_keep_V_1_reg_611 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_keep_V_1_reg_611_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_strb_V_1_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_strb_V_1_reg_616 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_strb_V_1_reg_616_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_last_V_1_fu_432_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_reg_621 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_reg_621_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_1_fu_436_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_dest_V_1_reg_626 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_dest_V_1_reg_626_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal prevSize_load_reg_636 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln43_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_prevSize_flag_1_phi_fu_185_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_prevSize_flag_1_reg_182 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_prevSize_flag_2_phi_fu_197_p20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_prevSize_flag_2_reg_193 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_prevSize_flag_2_reg_193 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln66_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_prevSize_new_2_phi_fu_233_p20 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_prevSize_new_2_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln587_fu_470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_state_load : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln35_fu_502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_fu_394_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_cycles_to_wait_load : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nbread_fu_102_p6_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal inputPacketSize_read_nbread_fu_116_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln35_fu_497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_inputPacket_V_data_V_U_apdone_blk : STD_LOGIC;
    signal inputPacket_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal inputPacket_TVALID_int_regslice : STD_LOGIC;
    signal inputPacket_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_inputPacket_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_inputPacket_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal inputPacket_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_inputPacket_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_inputPacket_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_inputPacket_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal inputPacket_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_inputPacket_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_inputPacket_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_inputPacket_V_last_V_U_apdone_blk : STD_LOGIC;
    signal inputPacket_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_inputPacket_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_inputPacket_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_inputPacket_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal inputPacket_TDEST_int_regslice : STD_LOGIC_VECTOR (12 downto 0);
    signal regslice_both_inputPacket_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_inputPacket_V_dest_V_U_ack_in : STD_LOGIC;
    signal regslice_both_inputPacketSize_U_apdone_blk : STD_LOGIC;
    signal inputPacketSize_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal inputPacketSize_TVALID_int_regslice : STD_LOGIC;
    signal inputPacketSize_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_inputPacketSize_U_ack_in : STD_LOGIC;
    signal outputPacket_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal outputPacket_TVALID_int_regslice : STD_LOGIC;
    signal outputPacket_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_outputPacket_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_outputPacket_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal outputPacket_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_outputPacket_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_outputPacket_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_outputPacket_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal outputPacket_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_outputPacket_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_outputPacket_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_outputPacket_V_last_V_U_apdone_blk : STD_LOGIC;
    signal outputPacket_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_outputPacket_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_outputPacket_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_outputPacket_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal outputPacket_TDEST_int_regslice : STD_LOGIC_VECTOR (12 downto 0);
    signal regslice_both_outputPacket_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_outputPacket_V_dest_V_U_vld_out : STD_LOGIC;
    signal outputPacketSize_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal outputPacketSize_TVALID_int_regslice : STD_LOGIC;
    signal outputPacketSize_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_outputPacketSize_U_vld_out : STD_LOGIC;
    signal ap_condition_766 : BOOLEAN;
    signal ap_condition_771 : BOOLEAN;
    signal ap_condition_775 : BOOLEAN;
    signal ap_condition_779 : BOOLEAN;
    signal ap_condition_782 : BOOLEAN;
    signal ap_condition_787 : BOOLEAN;
    signal ap_condition_791 : BOOLEAN;
    signal ap_condition_794 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component bandwidth_controller_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_inputPacket_V_data_V_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => inputPacket_TDATA,
        vld_in => inputPacket_TVALID,
        ack_in => regslice_both_inputPacket_V_data_V_U_ack_in,
        data_out => inputPacket_TDATA_int_regslice,
        vld_out => inputPacket_TVALID_int_regslice,
        ack_out => inputPacket_TREADY_int_regslice,
        apdone_blk => regslice_both_inputPacket_V_data_V_U_apdone_blk);

    regslice_both_inputPacket_V_keep_V_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => inputPacket_TKEEP,
        vld_in => inputPacket_TVALID,
        ack_in => regslice_both_inputPacket_V_keep_V_U_ack_in,
        data_out => inputPacket_TKEEP_int_regslice,
        vld_out => regslice_both_inputPacket_V_keep_V_U_vld_out,
        ack_out => inputPacket_TREADY_int_regslice,
        apdone_blk => regslice_both_inputPacket_V_keep_V_U_apdone_blk);

    regslice_both_inputPacket_V_strb_V_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => inputPacket_TSTRB,
        vld_in => inputPacket_TVALID,
        ack_in => regslice_both_inputPacket_V_strb_V_U_ack_in,
        data_out => inputPacket_TSTRB_int_regslice,
        vld_out => regslice_both_inputPacket_V_strb_V_U_vld_out,
        ack_out => inputPacket_TREADY_int_regslice,
        apdone_blk => regslice_both_inputPacket_V_strb_V_U_apdone_blk);

    regslice_both_inputPacket_V_last_V_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => inputPacket_TLAST,
        vld_in => inputPacket_TVALID,
        ack_in => regslice_both_inputPacket_V_last_V_U_ack_in,
        data_out => inputPacket_TLAST_int_regslice,
        vld_out => regslice_both_inputPacket_V_last_V_U_vld_out,
        ack_out => inputPacket_TREADY_int_regslice,
        apdone_blk => regslice_both_inputPacket_V_last_V_U_apdone_blk);

    regslice_both_inputPacket_V_dest_V_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 13)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => inputPacket_TDEST,
        vld_in => inputPacket_TVALID,
        ack_in => regslice_both_inputPacket_V_dest_V_U_ack_in,
        data_out => inputPacket_TDEST_int_regslice,
        vld_out => regslice_both_inputPacket_V_dest_V_U_vld_out,
        ack_out => inputPacket_TREADY_int_regslice,
        apdone_blk => regslice_both_inputPacket_V_dest_V_U_apdone_blk);

    regslice_both_inputPacketSize_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => inputPacketSize_TDATA,
        vld_in => inputPacketSize_TVALID,
        ack_in => regslice_both_inputPacketSize_U_ack_in,
        data_out => inputPacketSize_TDATA_int_regslice,
        vld_out => inputPacketSize_TVALID_int_regslice,
        ack_out => inputPacketSize_TREADY_int_regslice,
        apdone_blk => regslice_both_inputPacketSize_U_apdone_blk);

    regslice_both_outputPacket_V_data_V_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => outputPacket_TDATA_int_regslice,
        vld_in => outputPacket_TVALID_int_regslice,
        ack_in => outputPacket_TREADY_int_regslice,
        data_out => outputPacket_TDATA,
        vld_out => regslice_both_outputPacket_V_data_V_U_vld_out,
        ack_out => outputPacket_TREADY,
        apdone_blk => regslice_both_outputPacket_V_data_V_U_apdone_blk);

    regslice_both_outputPacket_V_keep_V_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => outputPacket_TKEEP_int_regslice,
        vld_in => outputPacket_TVALID_int_regslice,
        ack_in => regslice_both_outputPacket_V_keep_V_U_ack_in_dummy,
        data_out => outputPacket_TKEEP,
        vld_out => regslice_both_outputPacket_V_keep_V_U_vld_out,
        ack_out => outputPacket_TREADY,
        apdone_blk => regslice_both_outputPacket_V_keep_V_U_apdone_blk);

    regslice_both_outputPacket_V_strb_V_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => outputPacket_TSTRB_int_regslice,
        vld_in => outputPacket_TVALID_int_regslice,
        ack_in => regslice_both_outputPacket_V_strb_V_U_ack_in_dummy,
        data_out => outputPacket_TSTRB,
        vld_out => regslice_both_outputPacket_V_strb_V_U_vld_out,
        ack_out => outputPacket_TREADY,
        apdone_blk => regslice_both_outputPacket_V_strb_V_U_apdone_blk);

    regslice_both_outputPacket_V_last_V_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => outputPacket_TLAST_int_regslice,
        vld_in => outputPacket_TVALID_int_regslice,
        ack_in => regslice_both_outputPacket_V_last_V_U_ack_in_dummy,
        data_out => outputPacket_TLAST,
        vld_out => regslice_both_outputPacket_V_last_V_U_vld_out,
        ack_out => outputPacket_TREADY,
        apdone_blk => regslice_both_outputPacket_V_last_V_U_apdone_blk);

    regslice_both_outputPacket_V_dest_V_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 13)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => outputPacket_TDEST_int_regslice,
        vld_in => outputPacket_TVALID_int_regslice,
        ack_in => regslice_both_outputPacket_V_dest_V_U_ack_in_dummy,
        data_out => outputPacket_TDEST,
        vld_out => regslice_both_outputPacket_V_dest_V_U_vld_out,
        ack_out => outputPacket_TREADY,
        apdone_blk => regslice_both_outputPacket_V_dest_V_U_apdone_blk);

    regslice_both_outputPacketSize_U : component bandwidth_controller_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => outputPacketSize_TDATA_int_regslice,
        vld_in => outputPacketSize_TVALID_int_regslice,
        ack_in => outputPacketSize_TREADY_int_regslice,
        data_out => outputPacketSize_TDATA,
        vld_out => regslice_both_outputPacketSize_U_vld_out,
        ack_out => outputPacketSize_TREADY,
        apdone_blk => regslice_both_outputPacketSize_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_prevSize_flag_2_reg_193_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((state_load_load_fu_288_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (icmp_ln66_fu_388_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((state_load_load_fu_288_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (icmp_ln66_fu_388_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((p_vld_fu_412_p1 = ap_const_lv1_0) and (ap_sig_allocacmp_state_load = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((state_load_load_fu_288_p1 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_280_p1 = ap_const_lv1_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((state_load_load_fu_288_p1 = ap_const_lv2_2) and (grp_fu_264_p1 = ap_const_lv1_0)) or ((state_load_load_fu_288_p1 = ap_const_lv2_2) and (grp_fu_280_p1 = ap_const_lv1_0)))))) then 
                ap_phi_reg_pp0_iter1_prevSize_flag_2_reg_193 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter1_prevSize_flag_2_reg_193 <= ap_phi_reg_pp0_iter0_prevSize_flag_2_reg_193;
            end if; 
        end if;
    end process;

    cycles_to_wait_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_const_boolean_1 = ap_condition_775)) then 
                    cycles_to_wait <= add_ln67_fu_394_p2;
                elsif ((ap_const_boolean_1 = ap_condition_771)) then 
                    cycles_to_wait <= add_ln35_fu_502_p2;
                end if;
            end if; 
        end if;
    end process;

    prevData_data_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((inputPacketSize_read_nbread_fu_116_p2_0 = ap_const_lv1_1) and (ap_sig_allocacmp_state_load = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                prevData_data_V <= tmp_data_V_1_fu_420_p1;
            elsif ((((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((state_load_load_fu_288_p1 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                prevData_data_V <= inputPacket_TDATA_int_regslice;
            end if; 
        end if;
    end process;

    prevData_dest_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((inputPacketSize_read_nbread_fu_116_p2_0 = ap_const_lv1_1) and (ap_sig_allocacmp_state_load = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                prevData_dest_V <= tmp_dest_V_1_fu_436_p1;
            elsif ((((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((state_load_load_fu_288_p1 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                prevData_dest_V <= inputPacket_TDEST_int_regslice;
            end if; 
        end if;
    end process;

    prevData_keep_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((inputPacketSize_read_nbread_fu_116_p2_0 = ap_const_lv1_1) and (ap_sig_allocacmp_state_load = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                prevData_keep_V <= tmp_keep_V_1_fu_424_p1;
            elsif ((((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((state_load_load_fu_288_p1 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                prevData_keep_V <= inputPacket_TKEEP_int_regslice;
            end if; 
        end if;
    end process;

    prevData_last_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((inputPacketSize_read_nbread_fu_116_p2_0 = ap_const_lv1_1) and (ap_sig_allocacmp_state_load = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                prevData_last_V <= tmp_last_V_1_fu_432_p1;
            elsif ((((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((state_load_load_fu_288_p1 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                prevData_last_V <= inputPacket_TLAST_int_regslice;
            end if; 
        end if;
    end process;

    prevData_strb_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((inputPacketSize_read_nbread_fu_116_p2_0 = ap_const_lv1_1) and (ap_sig_allocacmp_state_load = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                prevData_strb_V <= tmp_strb_V_1_fu_428_p1;
            elsif ((((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((state_load_load_fu_288_p1 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_264_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                prevData_strb_V <= inputPacket_TSTRB_int_regslice;
            end if; 
        end if;
    end process;

    state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_const_boolean_1 = ap_condition_794)) then 
                    state <= ap_const_lv2_3;
                elsif ((ap_const_boolean_1 = ap_condition_791)) then 
                    state <= ap_const_lv2_0_3;
                elsif ((ap_const_boolean_1 = ap_condition_787)) then 
                    state <= ap_const_lv2_0_2;
                elsif ((ap_const_boolean_1 = ap_condition_771)) then 
                    state <= ap_const_lv2_1;
                elsif ((ap_const_boolean_1 = ap_condition_782)) then 
                    state <= ap_const_lv2_0_1;
                elsif ((ap_const_boolean_1 = ap_condition_779)) then 
                    state <= ap_const_lv2_2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ecnData_V_reg_645 <= ecn_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ecnData_V_reg_645_pp0_iter2_reg <= ecnData_V_reg_645;
                icmp_ln43_reg_641_pp0_iter2_reg <= icmp_ln43_reg_641;
                p_vld1_reg_540_pp0_iter2_reg <= p_vld1_reg_540_pp0_iter1_reg;
                p_vld_reg_595_pp0_iter2_reg <= p_vld_reg_595_pp0_iter1_reg;
                state_load_reg_530_pp0_iter2_reg <= state_load_reg_530_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state_load_reg_530 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln43_reg_641 <= icmp_ln43_fu_479_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state_load_load_fu_288_p1 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_vld1_reg_540 <= grp_nbread_fu_102_p6_0;
                tmp_data_V_reg_544 <= inputPacket_TDATA_int_regslice;
                tmp_dest_V_reg_564 <= inputPacket_TDEST_int_regslice;
                tmp_keep_V_reg_549 <= inputPacket_TKEEP_int_regslice;
                tmp_last_V_reg_559 <= inputPacket_TLAST_int_regslice;
                tmp_strb_V_reg_554 <= inputPacket_TSTRB_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_vld1_reg_540_pp0_iter1_reg <= p_vld1_reg_540;
                p_vld_reg_595_pp0_iter1_reg <= p_vld_reg_595;
                prevSize_load_reg_636 <= prevSize;
                state_load_reg_530 <= ap_sig_allocacmp_state_load;
                state_load_reg_530_pp0_iter1_reg <= state_load_reg_530;
                tmp_data_V_1_reg_606_pp0_iter1_reg <= tmp_data_V_1_reg_606;
                tmp_data_V_2_reg_569_pp0_iter1_reg <= tmp_data_V_2_reg_569;
                tmp_data_V_reg_544_pp0_iter1_reg <= tmp_data_V_reg_544;
                tmp_dest_V_1_reg_626_pp0_iter1_reg <= tmp_dest_V_1_reg_626;
                tmp_dest_V_2_reg_584_pp0_iter1_reg <= tmp_dest_V_2_reg_584;
                tmp_dest_V_reg_564_pp0_iter1_reg <= tmp_dest_V_reg_564;
                tmp_keep_V_1_reg_611_pp0_iter1_reg <= tmp_keep_V_1_reg_611;
                tmp_keep_V_2_reg_574_pp0_iter1_reg <= tmp_keep_V_2_reg_574;
                tmp_keep_V_reg_549_pp0_iter1_reg <= tmp_keep_V_reg_549;
                tmp_last_V_1_reg_621_pp0_iter1_reg <= tmp_last_V_1_reg_621;
                tmp_last_V_2_reg_535 <= prevData_last_V;
                tmp_last_V_2_reg_535_pp0_iter1_reg <= tmp_last_V_2_reg_535;
                tmp_last_V_reg_559_pp0_iter1_reg <= tmp_last_V_reg_559;
                tmp_reg_599_pp0_iter1_reg <= tmp_reg_599;
                tmp_strb_V_1_reg_616_pp0_iter1_reg <= tmp_strb_V_1_reg_616;
                tmp_strb_V_2_reg_579_pp0_iter1_reg <= tmp_strb_V_2_reg_579;
                tmp_strb_V_reg_554_pp0_iter1_reg <= tmp_strb_V_reg_554;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sig_allocacmp_state_load = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_vld_reg_595 <= inputPacketSize_read_nbread_fu_116_p2_0;
                tmp_reg_599 <= inputPacketSize_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_prevSize_flag_2_phi_fu_197_p20 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                prevSize <= ap_phi_mux_prevSize_new_2_phi_fu_233_p20;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((inputPacketSize_read_nbread_fu_116_p2_0 = ap_const_lv1_1) and (ap_sig_allocacmp_state_load = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_V_1_reg_606 <= inputPacket_TDATA_int_regslice;
                tmp_dest_V_1_reg_626 <= inputPacket_TDEST_int_regslice;
                tmp_keep_V_1_reg_611 <= inputPacket_TKEEP_int_regslice;
                tmp_last_V_1_reg_621 <= inputPacket_TLAST_int_regslice;
                tmp_strb_V_1_reg_616 <= inputPacket_TSTRB_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_V_2_reg_569 <= prevData_data_V;
                tmp_dest_V_2_reg_584 <= prevData_dest_V;
                tmp_keep_V_2_reg_574 <= prevData_keep_V;
                tmp_strb_V_2_reg_579 <= prevData_strb_V;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln35_fu_502_p2 <= std_logic_vector(unsigned(shl_ln35_fu_497_p2) + unsigned(ap_const_lv32_4B));
    add_ln67_fu_394_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_cycles_to_wait_load) + unsigned(ap_const_lv32_FFFFFFFF));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, ap_enable_reg_pp0_iter3, state_load_reg_530_pp0_iter2_reg, ap_predicate_op57_read_state1, ap_predicate_op95_write_state3, ap_predicate_op96_write_state3, ap_predicate_op98_write_state3, ap_predicate_op99_write_state3, ap_predicate_op125_write_state4, ap_predicate_op126_write_state4, ap_predicate_op128_write_state4, ap_predicate_op129_write_state4, regslice_both_outputPacket_V_data_V_U_apdone_blk, regslice_both_outputPacketSize_U_apdone_blk, inputPacket_TVALID_int_regslice, outputPacket_TREADY_int_regslice, outputPacketSize_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((regslice_both_outputPacketSize_U_apdone_blk = ap_const_logic_1) or (regslice_both_outputPacket_V_data_V_U_apdone_blk = ap_const_logic_1) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op128_write_state4 = ap_const_boolean_1)) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op126_write_state4 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op129_write_state4 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op125_write_state4 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter2_reg = ap_const_lv2_3) and (outputPacket_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op98_write_state3 = ap_const_boolean_1)) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op96_write_state3 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op99_write_state3 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op95_write_state3 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3) and (outputPacket_TREADY_int_regslice = ap_const_logic_0)))) or ((inputPacket_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_predicate_op57_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, ap_enable_reg_pp0_iter3, state_load_reg_530_pp0_iter2_reg, ap_predicate_op57_read_state1, ap_predicate_op95_write_state3, ap_predicate_op96_write_state3, ap_predicate_op98_write_state3, ap_predicate_op99_write_state3, ap_block_state3_io, ap_predicate_op125_write_state4, ap_predicate_op126_write_state4, ap_predicate_op128_write_state4, ap_predicate_op129_write_state4, regslice_both_outputPacket_V_data_V_U_apdone_blk, regslice_both_outputPacketSize_U_apdone_blk, ap_block_state4_io, inputPacket_TVALID_int_regslice, outputPacket_TREADY_int_regslice, outputPacketSize_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or (regslice_both_outputPacketSize_U_apdone_blk = ap_const_logic_1) or (regslice_both_outputPacket_V_data_V_U_apdone_blk = ap_const_logic_1) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op128_write_state4 = ap_const_boolean_1)) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op126_write_state4 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op129_write_state4 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op125_write_state4 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter2_reg = ap_const_lv2_3) and (outputPacket_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op98_write_state3 = ap_const_boolean_1)) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op96_write_state3 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op99_write_state3 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op95_write_state3 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3) and (outputPacket_TREADY_int_regslice = ap_const_logic_0)))) or ((inputPacket_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_predicate_op57_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, ap_enable_reg_pp0_iter3, state_load_reg_530_pp0_iter2_reg, ap_predicate_op57_read_state1, ap_predicate_op95_write_state3, ap_predicate_op96_write_state3, ap_predicate_op98_write_state3, ap_predicate_op99_write_state3, ap_block_state3_io, ap_predicate_op125_write_state4, ap_predicate_op126_write_state4, ap_predicate_op128_write_state4, ap_predicate_op129_write_state4, regslice_both_outputPacket_V_data_V_U_apdone_blk, regslice_both_outputPacketSize_U_apdone_blk, ap_block_state4_io, inputPacket_TVALID_int_regslice, outputPacket_TREADY_int_regslice, outputPacketSize_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or (regslice_both_outputPacketSize_U_apdone_blk = ap_const_logic_1) or (regslice_both_outputPacket_V_data_V_U_apdone_blk = ap_const_logic_1) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op128_write_state4 = ap_const_boolean_1)) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op126_write_state4 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op129_write_state4 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op125_write_state4 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter2_reg = ap_const_lv2_3) and (outputPacket_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op98_write_state3 = ap_const_boolean_1)) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op96_write_state3 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op99_write_state3 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op95_write_state3 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3) and (outputPacket_TREADY_int_regslice = ap_const_logic_0)))) or ((inputPacket_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_predicate_op57_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op57_read_state1, inputPacket_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((inputPacket_TVALID_int_regslice = ap_const_logic_0) and (ap_predicate_op57_read_state1 = ap_const_boolean_1));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(state_load_reg_530_pp0_iter1_reg, ap_predicate_op95_write_state3, ap_predicate_op96_write_state3, ap_predicate_op98_write_state3, ap_predicate_op99_write_state3, outputPacket_TREADY_int_regslice, outputPacketSize_TREADY_int_regslice)
    begin
                ap_block_state3_io <= (((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op98_write_state3 = ap_const_boolean_1)) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op96_write_state3 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op99_write_state3 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op95_write_state3 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3) and (outputPacket_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(state_load_reg_530_pp0_iter1_reg, ap_predicate_op95_write_state3, ap_predicate_op96_write_state3, ap_predicate_op98_write_state3, ap_predicate_op99_write_state3, outputPacket_TREADY_int_regslice, outputPacketSize_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op98_write_state3 = ap_const_boolean_1)) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op96_write_state3 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op99_write_state3 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op95_write_state3 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3) and (outputPacket_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state4_io_assign_proc : process(state_load_reg_530_pp0_iter2_reg, ap_predicate_op125_write_state4, ap_predicate_op126_write_state4, ap_predicate_op128_write_state4, ap_predicate_op129_write_state4, outputPacket_TREADY_int_regslice, outputPacketSize_TREADY_int_regslice)
    begin
                ap_block_state4_io <= (((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op128_write_state4 = ap_const_boolean_1)) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op126_write_state4 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op129_write_state4 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op125_write_state4 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter2_reg = ap_const_lv2_3) and (outputPacket_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(state_load_reg_530_pp0_iter2_reg, ap_predicate_op125_write_state4, ap_predicate_op126_write_state4, ap_predicate_op128_write_state4, ap_predicate_op129_write_state4, regslice_both_outputPacket_V_data_V_U_apdone_blk, regslice_both_outputPacketSize_U_apdone_blk, outputPacket_TREADY_int_regslice, outputPacketSize_TREADY_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((regslice_both_outputPacketSize_U_apdone_blk = ap_const_logic_1) or (regslice_both_outputPacket_V_data_V_U_apdone_blk = ap_const_logic_1) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op128_write_state4 = ap_const_boolean_1)) or ((outputPacketSize_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op126_write_state4 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op129_write_state4 = ap_const_boolean_1)) or ((outputPacket_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op125_write_state4 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter2_reg = ap_const_lv2_3) and (outputPacket_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_condition_766_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, state_load_reg_530, p_vld_reg_595, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_766 <= ((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_771_assign_proc : process(ecn_q0, state_load_reg_530, p_vld_reg_595, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_771 <= ((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ecn_q0 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_775_assign_proc : process(state_load_load_fu_288_p1, icmp_ln66_fu_388_p2)
    begin
                ap_condition_775 <= ((state_load_load_fu_288_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_const_logic_1) and (icmp_ln66_fu_388_p2 = ap_const_lv1_0));
    end process;


    ap_condition_779_assign_proc : process(ecn_q0, state_load_reg_530, p_vld_reg_595, tmp_last_V_1_reg_621, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_779 <= ((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ecn_q0 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_last_V_1_reg_621 = ap_const_lv1_0));
    end process;


    ap_condition_782_assign_proc : process(ecn_q0, state_load_reg_530, p_vld_reg_595, tmp_last_V_1_reg_621, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_782 <= ((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ecn_q0 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_last_V_1_reg_621 = ap_const_lv1_1));
    end process;


    ap_condition_787_assign_proc : process(state_load_load_fu_288_p1, grp_fu_264_p1, grp_fu_280_p1)
    begin
                ap_condition_787 <= ((state_load_load_fu_288_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_const_logic_1) and (grp_fu_280_p1 = ap_const_lv1_1) and (grp_fu_264_p1 = ap_const_lv1_1));
    end process;


    ap_condition_791_assign_proc : process(state_load_load_fu_288_p1, tmp_last_V_2_load_fu_292_p1)
    begin
                ap_condition_791 <= ((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_const_logic_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_1));
    end process;


    ap_condition_794_assign_proc : process(state_load_load_fu_288_p1, icmp_ln66_fu_388_p2)
    begin
                ap_condition_794 <= ((state_load_load_fu_288_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_const_logic_1) and (icmp_ln66_fu_388_p2 = ap_const_lv1_1));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_prevSize_flag_1_phi_fu_185_p4_assign_proc : process(state_load_reg_530, icmp_ln43_fu_479_p2, ap_phi_reg_pp0_iter1_prevSize_flag_1_reg_182)
    begin
        if ((state_load_reg_530 = ap_const_lv2_3)) then
            if ((icmp_ln43_fu_479_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_prevSize_flag_1_phi_fu_185_p4 <= ap_const_lv1_0;
            elsif ((icmp_ln43_fu_479_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_prevSize_flag_1_phi_fu_185_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_prevSize_flag_1_phi_fu_185_p4 <= ap_phi_reg_pp0_iter1_prevSize_flag_1_reg_182;
            end if;
        else 
            ap_phi_mux_prevSize_flag_1_phi_fu_185_p4 <= ap_phi_reg_pp0_iter1_prevSize_flag_1_reg_182;
        end if; 
    end process;


    ap_phi_mux_prevSize_flag_2_phi_fu_197_p20_assign_proc : process(ecn_q0, state_load_reg_530, p_vld_reg_595, tmp_last_V_2_reg_535, tmp_last_V_1_reg_621, ap_phi_mux_prevSize_flag_1_phi_fu_185_p4, ap_phi_reg_pp0_iter1_prevSize_flag_2_reg_193)
    begin
        if ((((state_load_reg_530 = ap_const_lv2_3) and (tmp_last_V_2_reg_535 = ap_const_lv1_0)) or ((state_load_reg_530 = ap_const_lv2_3) and (tmp_last_V_2_reg_535 = ap_const_lv1_1)))) then 
            ap_phi_mux_prevSize_flag_2_phi_fu_197_p20 <= ap_phi_mux_prevSize_flag_1_phi_fu_185_p4;
        elsif ((((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ecn_q0 = ap_const_lv1_0) and (tmp_last_V_1_reg_621 = ap_const_lv1_1)) or ((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ecn_q0 = ap_const_lv1_0) and (tmp_last_V_1_reg_621 = ap_const_lv1_0)) or ((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ecn_q0 = ap_const_lv1_1)))) then 
            ap_phi_mux_prevSize_flag_2_phi_fu_197_p20 <= ap_const_lv1_1;
        else 
            ap_phi_mux_prevSize_flag_2_phi_fu_197_p20 <= ap_phi_reg_pp0_iter1_prevSize_flag_2_reg_193;
        end if; 
    end process;


    ap_phi_mux_prevSize_new_2_phi_fu_233_p20_assign_proc : process(ecn_q0, state_load_reg_530, p_vld_reg_595, tmp_last_V_2_reg_535, tmp_reg_599, tmp_last_V_1_reg_621, ap_phi_reg_pp0_iter1_prevSize_new_2_reg_229)
    begin
        if ((((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ecn_q0 = ap_const_lv1_0) and (tmp_last_V_1_reg_621 = ap_const_lv1_1)) or ((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ecn_q0 = ap_const_lv1_0) and (tmp_last_V_1_reg_621 = ap_const_lv1_0)) or ((state_load_reg_530 = ap_const_lv2_3) and (tmp_last_V_2_reg_535 = ap_const_lv1_0)) or ((state_load_reg_530 = ap_const_lv2_3) and (tmp_last_V_2_reg_535 = ap_const_lv1_1)))) then 
            ap_phi_mux_prevSize_new_2_phi_fu_233_p20 <= ap_const_lv32_0;
        elsif (((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ecn_q0 = ap_const_lv1_1))) then 
            ap_phi_mux_prevSize_new_2_phi_fu_233_p20 <= tmp_reg_599;
        else 
            ap_phi_mux_prevSize_new_2_phi_fu_233_p20 <= ap_phi_reg_pp0_iter1_prevSize_new_2_reg_229;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_prevSize_flag_2_reg_193 <= "X";
    ap_phi_reg_pp0_iter1_prevSize_flag_1_reg_182 <= "X";
    ap_phi_reg_pp0_iter1_prevSize_new_2_reg_229 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op125_write_state4_assign_proc : process(state_load_reg_530_pp0_iter2_reg, p_vld1_reg_540_pp0_iter2_reg)
    begin
                ap_predicate_op125_write_state4 <= ((state_load_reg_530_pp0_iter2_reg = ap_const_lv2_2) and (p_vld1_reg_540_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op126_write_state4_assign_proc : process(state_load_reg_530_pp0_iter2_reg, icmp_ln43_reg_641_pp0_iter2_reg)
    begin
                ap_predicate_op126_write_state4 <= ((state_load_reg_530_pp0_iter2_reg = ap_const_lv2_3) and (icmp_ln43_reg_641_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op128_write_state4_assign_proc : process(state_load_reg_530_pp0_iter2_reg, p_vld_reg_595_pp0_iter2_reg, ecnData_V_reg_645_pp0_iter2_reg)
    begin
                ap_predicate_op128_write_state4 <= ((ecnData_V_reg_645_pp0_iter2_reg = ap_const_lv1_0) and (p_vld_reg_595_pp0_iter2_reg = ap_const_lv1_1) and (state_load_reg_530_pp0_iter2_reg = ap_const_lv2_0));
    end process;


    ap_predicate_op129_write_state4_assign_proc : process(state_load_reg_530_pp0_iter2_reg, p_vld_reg_595_pp0_iter2_reg, ecnData_V_reg_645_pp0_iter2_reg)
    begin
                ap_predicate_op129_write_state4 <= ((ecnData_V_reg_645_pp0_iter2_reg = ap_const_lv1_0) and (p_vld_reg_595_pp0_iter2_reg = ap_const_lv1_1) and (state_load_reg_530_pp0_iter2_reg = ap_const_lv2_0));
    end process;


    ap_predicate_op57_read_state1_assign_proc : process(ap_sig_allocacmp_state_load, inputPacketSize_read_nbread_fu_116_p2_0)
    begin
                ap_predicate_op57_read_state1 <= ((inputPacketSize_read_nbread_fu_116_p2_0 = ap_const_lv1_1) and (ap_sig_allocacmp_state_load = ap_const_lv2_0));
    end process;


    ap_predicate_op95_write_state3_assign_proc : process(state_load_reg_530_pp0_iter1_reg, p_vld1_reg_540_pp0_iter1_reg)
    begin
                ap_predicate_op95_write_state3 <= ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_2) and (p_vld1_reg_540_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op96_write_state3_assign_proc : process(state_load_reg_530_pp0_iter1_reg, icmp_ln43_reg_641)
    begin
                ap_predicate_op96_write_state3 <= ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3) and (icmp_ln43_reg_641 = ap_const_lv1_1));
    end process;


    ap_predicate_op98_write_state3_assign_proc : process(state_load_reg_530_pp0_iter1_reg, p_vld_reg_595_pp0_iter1_reg, ecnData_V_reg_645)
    begin
                ap_predicate_op98_write_state3 <= ((ecnData_V_reg_645 = ap_const_lv1_0) and (p_vld_reg_595_pp0_iter1_reg = ap_const_lv1_1) and (state_load_reg_530_pp0_iter1_reg = ap_const_lv2_0));
    end process;


    ap_predicate_op99_write_state3_assign_proc : process(state_load_reg_530_pp0_iter1_reg, p_vld_reg_595_pp0_iter1_reg, ecnData_V_reg_645)
    begin
                ap_predicate_op99_write_state3 <= ((ecnData_V_reg_645 = ap_const_lv1_0) and (p_vld_reg_595_pp0_iter1_reg = ap_const_lv1_1) and (state_load_reg_530_pp0_iter1_reg = ap_const_lv2_0));
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_cycles_to_wait_load_assign_proc : process(ecn_q0, cycles_to_wait, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, state_load_reg_530, p_vld_reg_595, ap_enable_reg_pp0_iter1, add_ln35_fu_502_p2)
    begin
        if (((p_vld_reg_595 = ap_const_lv1_1) and (state_load_reg_530 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ecn_q0 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_cycles_to_wait_load <= add_ln35_fu_502_p2;
        else 
            ap_sig_allocacmp_cycles_to_wait_load <= cycles_to_wait;
        end if; 
    end process;


    ap_sig_allocacmp_state_load_assign_proc : process(ecn_q0, state, tmp_last_V_1_reg_621, ap_condition_766)
    begin
        if ((ap_const_boolean_1 = ap_condition_766)) then
            if ((ecn_q0 = ap_const_lv1_1)) then 
                ap_sig_allocacmp_state_load <= ap_const_lv2_1;
            elsif (((ecn_q0 = ap_const_lv1_0) and (tmp_last_V_1_reg_621 = ap_const_lv1_1))) then 
                ap_sig_allocacmp_state_load <= ap_const_lv2_0_1;
            elsif (((ecn_q0 = ap_const_lv1_0) and (tmp_last_V_1_reg_621 = ap_const_lv1_0))) then 
                ap_sig_allocacmp_state_load <= ap_const_lv2_2;
            else 
                ap_sig_allocacmp_state_load <= state;
            end if;
        else 
            ap_sig_allocacmp_state_load <= state;
        end if; 
    end process;

    ecn_address0 <= zext_ln587_fu_470_p1(13 - 1 downto 0);

    ecn_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ecn_ce0 <= ap_const_logic_1;
        else 
            ecn_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_264_p1 <= grp_nbread_fu_102_p6_0;
    grp_fu_280_p1 <= inputPacket_TLAST_int_regslice;
    grp_nbread_fu_102_p6_0 <= (0=>(inputPacket_TVALID_int_regslice), others=>'-');
    icmp_ln43_fu_479_p2 <= "1" when (signed(prevSize) > signed(ap_const_lv32_0)) else "0";
    icmp_ln66_fu_388_p2 <= "1" when (ap_sig_allocacmp_cycles_to_wait_load = ap_const_lv32_0) else "0";
    inputPacketSize_TREADY <= regslice_both_inputPacketSize_U_ack_in;

    inputPacketSize_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_sig_allocacmp_state_load, inputPacketSize_TVALID_int_regslice)
    begin
        if (((ap_sig_allocacmp_state_load = ap_const_lv2_0) and (inputPacketSize_TVALID_int_regslice = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inputPacketSize_TREADY_int_regslice <= ap_const_logic_1;
        else 
            inputPacketSize_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    inputPacketSize_read_nbread_fu_116_p2_0 <= (0=>(inputPacketSize_TVALID_int_regslice), others=>'-');

    inputPacket_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_sig_allocacmp_state_load, inputPacketSize_read_nbread_fu_116_p2_0, inputPacket_TVALID_int_regslice)
    begin
        if (((inputPacketSize_read_nbread_fu_116_p2_0 = ap_const_lv1_1) and (ap_sig_allocacmp_state_load = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inputPacket_TDATA_blk_n <= inputPacket_TVALID_int_regslice;
        else 
            inputPacket_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inputPacket_TREADY <= regslice_both_inputPacket_V_data_V_U_ack_in;

    inputPacket_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, state_load_load_fu_288_p1, ap_predicate_op57_read_state1, ap_block_pp0_stage0_11001, tmp_last_V_2_load_fu_292_p1, inputPacket_TVALID_int_regslice)
    begin
        if ((((inputPacket_TVALID_int_regslice = ap_const_logic_1) and (((inputPacket_TVALID_int_regslice = ap_const_logic_1) and (((inputPacket_TVALID_int_regslice = ap_const_logic_1) and (((inputPacket_TVALID_int_regslice = ap_const_logic_1) and (((inputPacket_TVALID_int_regslice = ap_const_logic_1) and (((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((state_load_load_fu_288_p1 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (inputPacket_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) or ((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) or ((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) or ((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) or ((state_load_load_fu_288_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (tmp_last_V_2_load_fu_292_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op57_read_state1 = ap_const_boolean_1)))) then 
            inputPacket_TREADY_int_regslice <= ap_const_logic_1;
        else 
            inputPacket_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    outputPacketSize_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, p_vld_reg_595_pp0_iter1_reg, ecnData_V_reg_645, ap_enable_reg_pp0_iter3, state_load_reg_530_pp0_iter2_reg, p_vld_reg_595_pp0_iter2_reg, ecnData_V_reg_645_pp0_iter2_reg, icmp_ln43_reg_641, icmp_ln43_reg_641_pp0_iter2_reg, outputPacketSize_TREADY_int_regslice)
    begin
        if ((((ecnData_V_reg_645_pp0_iter2_reg = ap_const_lv1_0) and (p_vld_reg_595_pp0_iter2_reg = ap_const_lv1_1) and (state_load_reg_530_pp0_iter2_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ecnData_V_reg_645 = ap_const_lv1_0) and (p_vld_reg_595_pp0_iter1_reg = ap_const_lv1_1) and (state_load_reg_530_pp0_iter1_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((state_load_reg_530_pp0_iter2_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln43_reg_641_pp0_iter2_reg = ap_const_lv1_1)) or ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln43_reg_641 = ap_const_lv1_1)))) then 
            outputPacketSize_TDATA_blk_n <= outputPacketSize_TREADY_int_regslice;
        else 
            outputPacketSize_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outputPacketSize_TDATA_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op96_write_state3, ap_predicate_op98_write_state3, tmp_reg_599_pp0_iter1_reg, prevSize_load_reg_636, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op98_write_state3 = ap_const_boolean_1)) then 
                outputPacketSize_TDATA_int_regslice <= tmp_reg_599_pp0_iter1_reg;
            elsif ((ap_predicate_op96_write_state3 = ap_const_boolean_1)) then 
                outputPacketSize_TDATA_int_regslice <= prevSize_load_reg_636;
            else 
                outputPacketSize_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outputPacketSize_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    outputPacketSize_TVALID <= regslice_both_outputPacketSize_U_vld_out;

    outputPacketSize_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op96_write_state3, ap_predicate_op98_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op98_write_state3 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op96_write_state3 = ap_const_boolean_1)))) then 
            outputPacketSize_TVALID_int_regslice <= ap_const_logic_1;
        else 
            outputPacketSize_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    outputPacket_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, p_vld_reg_595_pp0_iter1_reg, ecnData_V_reg_645, ap_enable_reg_pp0_iter3, state_load_reg_530_pp0_iter2_reg, p_vld_reg_595_pp0_iter2_reg, ecnData_V_reg_645_pp0_iter2_reg, p_vld1_reg_540_pp0_iter1_reg, p_vld1_reg_540_pp0_iter2_reg, outputPacket_TREADY_int_regslice)
    begin
        if ((((ecnData_V_reg_645_pp0_iter2_reg = ap_const_lv1_0) and (p_vld_reg_595_pp0_iter2_reg = ap_const_lv1_1) and (state_load_reg_530_pp0_iter2_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ecnData_V_reg_645 = ap_const_lv1_0) and (p_vld_reg_595_pp0_iter1_reg = ap_const_lv1_1) and (state_load_reg_530_pp0_iter1_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((state_load_reg_530_pp0_iter2_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (p_vld1_reg_540_pp0_iter2_reg = ap_const_lv1_1)) or ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (p_vld1_reg_540_pp0_iter1_reg = ap_const_lv1_1)) or ((state_load_reg_530_pp0_iter2_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            outputPacket_TDATA_blk_n <= outputPacket_TREADY_int_regslice;
        else 
            outputPacket_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outputPacket_TDATA_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, ap_predicate_op95_write_state3, ap_predicate_op99_write_state3, tmp_data_V_reg_544_pp0_iter1_reg, tmp_data_V_2_reg_569_pp0_iter1_reg, tmp_data_V_1_reg_606_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op99_write_state3 = ap_const_boolean_1)) then 
                outputPacket_TDATA_int_regslice <= tmp_data_V_1_reg_606_pp0_iter1_reg;
            elsif ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3)) then 
                outputPacket_TDATA_int_regslice <= tmp_data_V_2_reg_569_pp0_iter1_reg;
            elsif ((ap_predicate_op95_write_state3 = ap_const_boolean_1)) then 
                outputPacket_TDATA_int_regslice <= tmp_data_V_reg_544_pp0_iter1_reg;
            else 
                outputPacket_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outputPacket_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    outputPacket_TDEST_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, ap_predicate_op95_write_state3, ap_predicate_op99_write_state3, tmp_dest_V_reg_564_pp0_iter1_reg, tmp_dest_V_2_reg_584_pp0_iter1_reg, tmp_dest_V_1_reg_626_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op99_write_state3 = ap_const_boolean_1)) then 
                outputPacket_TDEST_int_regslice <= tmp_dest_V_1_reg_626_pp0_iter1_reg;
            elsif ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3)) then 
                outputPacket_TDEST_int_regslice <= tmp_dest_V_2_reg_584_pp0_iter1_reg;
            elsif ((ap_predicate_op95_write_state3 = ap_const_boolean_1)) then 
                outputPacket_TDEST_int_regslice <= tmp_dest_V_reg_564_pp0_iter1_reg;
            else 
                outputPacket_TDEST_int_regslice <= "XXXXXXXXXXXXX";
            end if;
        else 
            outputPacket_TDEST_int_regslice <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    outputPacket_TKEEP_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, ap_predicate_op95_write_state3, ap_predicate_op99_write_state3, tmp_keep_V_reg_549_pp0_iter1_reg, tmp_keep_V_2_reg_574_pp0_iter1_reg, tmp_keep_V_1_reg_611_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op99_write_state3 = ap_const_boolean_1)) then 
                outputPacket_TKEEP_int_regslice <= tmp_keep_V_1_reg_611_pp0_iter1_reg;
            elsif ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3)) then 
                outputPacket_TKEEP_int_regslice <= tmp_keep_V_2_reg_574_pp0_iter1_reg;
            elsif ((ap_predicate_op95_write_state3 = ap_const_boolean_1)) then 
                outputPacket_TKEEP_int_regslice <= tmp_keep_V_reg_549_pp0_iter1_reg;
            else 
                outputPacket_TKEEP_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outputPacket_TKEEP_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    outputPacket_TLAST_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, ap_predicate_op95_write_state3, ap_predicate_op99_write_state3, tmp_last_V_2_reg_535_pp0_iter1_reg, tmp_last_V_reg_559_pp0_iter1_reg, tmp_last_V_1_reg_621_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op99_write_state3 = ap_const_boolean_1)) then 
                outputPacket_TLAST_int_regslice <= tmp_last_V_1_reg_621_pp0_iter1_reg;
            elsif ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3)) then 
                outputPacket_TLAST_int_regslice <= tmp_last_V_2_reg_535_pp0_iter1_reg;
            elsif ((ap_predicate_op95_write_state3 = ap_const_boolean_1)) then 
                outputPacket_TLAST_int_regslice <= tmp_last_V_reg_559_pp0_iter1_reg;
            else 
                outputPacket_TLAST_int_regslice <= "X";
            end if;
        else 
            outputPacket_TLAST_int_regslice <= "X";
        end if; 
    end process;


    outputPacket_TSTRB_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, ap_predicate_op95_write_state3, ap_predicate_op99_write_state3, tmp_strb_V_reg_554_pp0_iter1_reg, tmp_strb_V_2_reg_579_pp0_iter1_reg, tmp_strb_V_1_reg_616_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op99_write_state3 = ap_const_boolean_1)) then 
                outputPacket_TSTRB_int_regslice <= tmp_strb_V_1_reg_616_pp0_iter1_reg;
            elsif ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3)) then 
                outputPacket_TSTRB_int_regslice <= tmp_strb_V_2_reg_579_pp0_iter1_reg;
            elsif ((ap_predicate_op95_write_state3 = ap_const_boolean_1)) then 
                outputPacket_TSTRB_int_regslice <= tmp_strb_V_reg_554_pp0_iter1_reg;
            else 
                outputPacket_TSTRB_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outputPacket_TSTRB_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    outputPacket_TVALID <= regslice_both_outputPacket_V_data_V_U_vld_out;

    outputPacket_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, state_load_reg_530_pp0_iter1_reg, ap_predicate_op95_write_state3, ap_predicate_op99_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op99_write_state3 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op95_write_state3 = ap_const_boolean_1)) or ((state_load_reg_530_pp0_iter1_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            outputPacket_TVALID_int_regslice <= ap_const_logic_1;
        else 
            outputPacket_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    p_vld_fu_412_p1 <= inputPacketSize_read_nbread_fu_116_p2_0;
    shl_ln35_fu_497_p2 <= std_logic_vector(shift_left(unsigned(tmp_reg_599),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    state_load_load_fu_288_p1 <= ap_sig_allocacmp_state_load;
    state_out <= std_logic_vector(IEEE.numeric_std.resize(unsigned(state_load_reg_530_pp0_iter2_reg),32));

    state_out_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            state_out_ap_vld <= ap_const_logic_1;
        else 
            state_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_data_V_1_fu_420_p1 <= inputPacket_TDATA_int_regslice;
    tmp_dest_V_1_fu_436_p1 <= inputPacket_TDEST_int_regslice;
    tmp_keep_V_1_fu_424_p1 <= inputPacket_TKEEP_int_regslice;
    tmp_last_V_1_fu_432_p1 <= inputPacket_TLAST_int_regslice;
    tmp_last_V_2_load_fu_292_p1 <= prevData_last_V;
    tmp_strb_V_1_fu_428_p1 <= inputPacket_TSTRB_int_regslice;
    zext_ln587_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inputPacket_TDEST_int_regslice),64));
end behav;
