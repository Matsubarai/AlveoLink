-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tx_rdma_hdr_put_hdr is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ecn_for_ack_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    ecn_for_ack_empty_n : IN STD_LOGIC;
    ecn_for_ack_read : OUT STD_LOGIC;
    tx_to_hdr_gen_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
    tx_to_hdr_gen_empty_n : IN STD_LOGIC;
    tx_to_hdr_gen_read : OUT STD_LOGIC;
    axis_frame_ctx_to_hdr_gen_dout : IN STD_LOGIC_VECTOR (280 downto 0);
    axis_frame_ctx_to_hdr_gen_empty_n : IN STD_LOGIC;
    axis_frame_ctx_to_hdr_gen_read : OUT STD_LOGIC;
    payload_remainder_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    payload_remainder_full_n : IN STD_LOGIC;
    payload_remainder_write : OUT STD_LOGIC;
    tx_to_crc_and_remainder_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
    tx_to_crc_and_remainder_full_n : IN STD_LOGIC;
    tx_to_crc_and_remainder_write : OUT STD_LOGIC;
    packet_len : OUT STD_LOGIC_VECTOR (31 downto 0);
    packet_len_ap_vld : OUT STD_LOGIC;
    rdma_udp_port_dst : IN STD_LOGIC_VECTOR (15 downto 0);
    my_ip : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of tx_rdma_hdr_put_hdr is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_iter1_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_F9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111001";
    constant ap_const_lv32_118 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv26_3FFFC : STD_LOGIC_VECTOR (25 downto 0) := "00000000111111111111111100";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_89 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001001";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_91 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010001";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_99 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011001";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100001";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_A9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101001";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_B1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110001";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_B9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111001";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_C1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000001";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_C9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001001";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_D1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010001";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_D9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011001";
    constant ap_const_lv32_E1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100001";
    constant ap_const_lv32_E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101000";
    constant ap_const_lv32_E9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101001";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_F1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110001";
    constant ap_const_lv32_F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111000";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv8_A : STD_LOGIC_VECTOR (7 downto 0) := "00001010";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv512_lc_2 : STD_LOGIC_VECTOR (511 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_1C : STD_LOGIC_VECTOR (7 downto 0) := "00011100";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv16_245 : STD_LOGIC_VECTOR (15 downto 0) := "0000001001000101";
    constant ap_const_lv9_1F3 : STD_LOGIC_VECTOR (8 downto 0) := "111110011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_1C : STD_LOGIC_VECTOR (8 downto 0) := "000011100";
    constant ap_const_lv48_11400040 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000010001010000000000000001000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter1_fsm_state0 : STD_LOGIC;
    signal tmp_i_i_nbreadreq_fu_332_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_i_nbreadreq_fu_340_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op42_read_state1 : BOOLEAN;
    signal ap_predicate_op46_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_i_i_reg_2667 : STD_LOGIC_VECTOR (0 downto 0);
    signal ls_firstWord_1_load_reg_2671 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_i_reg_2675 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op203_write_state2 : BOOLEAN;
    signal ap_predicate_op209_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_CS_iter1_fsm_state2 : STD_LOGIC;
    signal ls_firstWord_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal id : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    signal ecn_for_ack_blk_n : STD_LOGIC;
    signal tx_to_hdr_gen_blk_n : STD_LOGIC;
    signal axis_frame_ctx_to_hdr_gen_blk_n : STD_LOGIC;
    signal payload_remainder_blk_n : STD_LOGIC;
    signal tx_to_crc_and_remainder_blk_n : STD_LOGIC;
    signal tmp_data_V_1_fu_431_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal payload_rem_V_1_fu_502_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal payload_rem_V_1_reg_2684 : STD_LOGIC_VECTOR (1 downto 0);
    signal ip_len_V_fu_2548_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ip_len_V_reg_2689 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_17_fu_2616_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_reg_2699 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_phi_mux_ls_firstWord_3_flag_0_i_i_phi_fu_384_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_ls_firstWord_3_flag_0_i_i_reg_381 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ls_firstWord_3_flag_1_i_i_phi_fu_395_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_ls_firstWord_3_flag_1_i_i_reg_392 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln454_fu_2638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ls_firstWord_3_new_1_i_i_phi_fu_408_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_fu_435_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_ls_firstWord_3_new_1_i_i_reg_405 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_din_data_V_reg_418 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter1_din_data_V_reg_418 : STD_LOGIC_VECTOR (511 downto 0);
    signal add_ln691_4_fu_2572_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln208_fu_2651_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal packet_len_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_Result_i_i_fu_492_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_i_i_fu_542_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_i_i_fu_552_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_i_i_fu_562_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal frame_ctx_explicit_ack_1_fu_464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_fu_518_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_52_fu_522_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_i_i_fu_532_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln_fu_508_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_i_i_fu_572_p13 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_opcode_V_fu_454_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_i_i_fu_736_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_20_i_i_fu_746_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_21_i_i_fu_756_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_22_i_i_fu_766_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_15_i_i_fu_696_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_16_i_i_fu_706_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_17_i_i_fu_716_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_18_i_i_fu_726_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_11_i_i_fu_656_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_12_i_i_fu_666_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_13_i_i_fu_676_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_14_i_i_fu_686_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_i_i_fu_616_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_i_i_fu_626_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_i_i_fu_636_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_10_i_i_fu_646_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_600_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_3_i_i_fu_776_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal icmp_ln41_1_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_2_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_1_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_812_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_immdt_V_fu_482_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln155_fu_862_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln215_fu_876_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln414_fu_894_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln414_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln414_1_fu_898_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln414_fu_902_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln414_fu_908_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln414_2_fu_924_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln414_1_fu_916_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln414_1_fu_932_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_fu_884_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln414_fu_938_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln414_fu_950_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_3_fu_956_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln414_1_fu_942_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln414_2_fu_946_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln414_1_fu_974_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln414_fu_980_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal and_ln414_fu_986_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal din_data_V_16_fu_854_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal xor_ln414_2_fu_992_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln414_3_fu_966_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal and_ln414_1_fu_998_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal and_ln414_2_fu_1004_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_3_fu_1016_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln414_2_fu_1038_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln414_1_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln414_3_fu_1042_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln414_3_fu_1046_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln414_4_fu_1052_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln414_6_fu_1068_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln414_5_fu_1060_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln414_4_fu_1076_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_1_fu_1028_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln414_3_fu_1082_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln414_2_fu_1094_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_5_fu_1100_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln414_4_fu_1086_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln414_5_fu_1090_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln414_3_fu_1118_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln414_1_fu_1124_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal and_ln414_3_fu_1130_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal xor_ln414_5_fu_1136_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln414_7_fu_1110_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal and_ln414_4_fu_1142_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal and_ln414_5_fu_1148_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln53_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_1_fu_1166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln870_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln870_1_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_1154_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln53_2_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_3_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_4_fu_1204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_1_fu_1216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_2_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_1010_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal din_data_V_7_fu_1184_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_31_i_i_fu_1236_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_fu_1246_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_33_i_i_fu_1258_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal din_data_V_17_fu_1228_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_6_fu_1268_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_36_i_i_fu_1292_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_fu_1302_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_1_fu_1314_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_1280_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_9_fu_1318_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln_fu_1342_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln691_fu_1350_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_payload_len_V_fu_444_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_i_i1_i_i_fu_1360_p257 : STD_LOGIC_VECTOR (7 downto 0);
    signal retval_0_i_i1_i_i_fu_1360_p258 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln691_1_fu_1878_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_fu_1882_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_2_fu_1888_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal udp_len_V_fu_1354_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal udp_len_V_3_fu_1892_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_41_i_i_fu_1898_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_11_fu_1908_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_2_fu_1920_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_10_fu_1330_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_12_fu_1924_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_13_fu_1936_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_14_fu_1948_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln41_fu_612_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln11_fu_1972_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln11_fu_1978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln11_fu_1984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_15_fu_1960_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal or_ln11_fu_1990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_16_fu_1996_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal retval_0_i_i_i_i_fu_2016_p257 : STD_LOGIC_VECTOR (7 downto 0);
    signal retval_0_i_i_i_i_fu_2016_p258 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln691_3_fu_2534_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_2_fu_2538_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_4_fu_2544_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal frame_ctx_remote_ip_1_fu_472_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_4_fu_2594_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_51_i_i_fu_2584_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_3_fu_2564_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_49_i_i_fu_2554_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal din_data_V_18_fu_2008_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_6_i_i_fu_2598_p8 : STD_LOGIC_VECTOR (143 downto 0);
    signal dout_fu_2655_p3 : STD_LOGIC_VECTOR (576 downto 0);
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_condition_64 : BOOLEAN;
    signal ap_condition_114 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component tx_rdma_hdr_mux_2568_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        din65_WIDTH : INTEGER;
        din66_WIDTH : INTEGER;
        din67_WIDTH : INTEGER;
        din68_WIDTH : INTEGER;
        din69_WIDTH : INTEGER;
        din70_WIDTH : INTEGER;
        din71_WIDTH : INTEGER;
        din72_WIDTH : INTEGER;
        din73_WIDTH : INTEGER;
        din74_WIDTH : INTEGER;
        din75_WIDTH : INTEGER;
        din76_WIDTH : INTEGER;
        din77_WIDTH : INTEGER;
        din78_WIDTH : INTEGER;
        din79_WIDTH : INTEGER;
        din80_WIDTH : INTEGER;
        din81_WIDTH : INTEGER;
        din82_WIDTH : INTEGER;
        din83_WIDTH : INTEGER;
        din84_WIDTH : INTEGER;
        din85_WIDTH : INTEGER;
        din86_WIDTH : INTEGER;
        din87_WIDTH : INTEGER;
        din88_WIDTH : INTEGER;
        din89_WIDTH : INTEGER;
        din90_WIDTH : INTEGER;
        din91_WIDTH : INTEGER;
        din92_WIDTH : INTEGER;
        din93_WIDTH : INTEGER;
        din94_WIDTH : INTEGER;
        din95_WIDTH : INTEGER;
        din96_WIDTH : INTEGER;
        din97_WIDTH : INTEGER;
        din98_WIDTH : INTEGER;
        din99_WIDTH : INTEGER;
        din100_WIDTH : INTEGER;
        din101_WIDTH : INTEGER;
        din102_WIDTH : INTEGER;
        din103_WIDTH : INTEGER;
        din104_WIDTH : INTEGER;
        din105_WIDTH : INTEGER;
        din106_WIDTH : INTEGER;
        din107_WIDTH : INTEGER;
        din108_WIDTH : INTEGER;
        din109_WIDTH : INTEGER;
        din110_WIDTH : INTEGER;
        din111_WIDTH : INTEGER;
        din112_WIDTH : INTEGER;
        din113_WIDTH : INTEGER;
        din114_WIDTH : INTEGER;
        din115_WIDTH : INTEGER;
        din116_WIDTH : INTEGER;
        din117_WIDTH : INTEGER;
        din118_WIDTH : INTEGER;
        din119_WIDTH : INTEGER;
        din120_WIDTH : INTEGER;
        din121_WIDTH : INTEGER;
        din122_WIDTH : INTEGER;
        din123_WIDTH : INTEGER;
        din124_WIDTH : INTEGER;
        din125_WIDTH : INTEGER;
        din126_WIDTH : INTEGER;
        din127_WIDTH : INTEGER;
        din128_WIDTH : INTEGER;
        din129_WIDTH : INTEGER;
        din130_WIDTH : INTEGER;
        din131_WIDTH : INTEGER;
        din132_WIDTH : INTEGER;
        din133_WIDTH : INTEGER;
        din134_WIDTH : INTEGER;
        din135_WIDTH : INTEGER;
        din136_WIDTH : INTEGER;
        din137_WIDTH : INTEGER;
        din138_WIDTH : INTEGER;
        din139_WIDTH : INTEGER;
        din140_WIDTH : INTEGER;
        din141_WIDTH : INTEGER;
        din142_WIDTH : INTEGER;
        din143_WIDTH : INTEGER;
        din144_WIDTH : INTEGER;
        din145_WIDTH : INTEGER;
        din146_WIDTH : INTEGER;
        din147_WIDTH : INTEGER;
        din148_WIDTH : INTEGER;
        din149_WIDTH : INTEGER;
        din150_WIDTH : INTEGER;
        din151_WIDTH : INTEGER;
        din152_WIDTH : INTEGER;
        din153_WIDTH : INTEGER;
        din154_WIDTH : INTEGER;
        din155_WIDTH : INTEGER;
        din156_WIDTH : INTEGER;
        din157_WIDTH : INTEGER;
        din158_WIDTH : INTEGER;
        din159_WIDTH : INTEGER;
        din160_WIDTH : INTEGER;
        din161_WIDTH : INTEGER;
        din162_WIDTH : INTEGER;
        din163_WIDTH : INTEGER;
        din164_WIDTH : INTEGER;
        din165_WIDTH : INTEGER;
        din166_WIDTH : INTEGER;
        din167_WIDTH : INTEGER;
        din168_WIDTH : INTEGER;
        din169_WIDTH : INTEGER;
        din170_WIDTH : INTEGER;
        din171_WIDTH : INTEGER;
        din172_WIDTH : INTEGER;
        din173_WIDTH : INTEGER;
        din174_WIDTH : INTEGER;
        din175_WIDTH : INTEGER;
        din176_WIDTH : INTEGER;
        din177_WIDTH : INTEGER;
        din178_WIDTH : INTEGER;
        din179_WIDTH : INTEGER;
        din180_WIDTH : INTEGER;
        din181_WIDTH : INTEGER;
        din182_WIDTH : INTEGER;
        din183_WIDTH : INTEGER;
        din184_WIDTH : INTEGER;
        din185_WIDTH : INTEGER;
        din186_WIDTH : INTEGER;
        din187_WIDTH : INTEGER;
        din188_WIDTH : INTEGER;
        din189_WIDTH : INTEGER;
        din190_WIDTH : INTEGER;
        din191_WIDTH : INTEGER;
        din192_WIDTH : INTEGER;
        din193_WIDTH : INTEGER;
        din194_WIDTH : INTEGER;
        din195_WIDTH : INTEGER;
        din196_WIDTH : INTEGER;
        din197_WIDTH : INTEGER;
        din198_WIDTH : INTEGER;
        din199_WIDTH : INTEGER;
        din200_WIDTH : INTEGER;
        din201_WIDTH : INTEGER;
        din202_WIDTH : INTEGER;
        din203_WIDTH : INTEGER;
        din204_WIDTH : INTEGER;
        din205_WIDTH : INTEGER;
        din206_WIDTH : INTEGER;
        din207_WIDTH : INTEGER;
        din208_WIDTH : INTEGER;
        din209_WIDTH : INTEGER;
        din210_WIDTH : INTEGER;
        din211_WIDTH : INTEGER;
        din212_WIDTH : INTEGER;
        din213_WIDTH : INTEGER;
        din214_WIDTH : INTEGER;
        din215_WIDTH : INTEGER;
        din216_WIDTH : INTEGER;
        din217_WIDTH : INTEGER;
        din218_WIDTH : INTEGER;
        din219_WIDTH : INTEGER;
        din220_WIDTH : INTEGER;
        din221_WIDTH : INTEGER;
        din222_WIDTH : INTEGER;
        din223_WIDTH : INTEGER;
        din224_WIDTH : INTEGER;
        din225_WIDTH : INTEGER;
        din226_WIDTH : INTEGER;
        din227_WIDTH : INTEGER;
        din228_WIDTH : INTEGER;
        din229_WIDTH : INTEGER;
        din230_WIDTH : INTEGER;
        din231_WIDTH : INTEGER;
        din232_WIDTH : INTEGER;
        din233_WIDTH : INTEGER;
        din234_WIDTH : INTEGER;
        din235_WIDTH : INTEGER;
        din236_WIDTH : INTEGER;
        din237_WIDTH : INTEGER;
        din238_WIDTH : INTEGER;
        din239_WIDTH : INTEGER;
        din240_WIDTH : INTEGER;
        din241_WIDTH : INTEGER;
        din242_WIDTH : INTEGER;
        din243_WIDTH : INTEGER;
        din244_WIDTH : INTEGER;
        din245_WIDTH : INTEGER;
        din246_WIDTH : INTEGER;
        din247_WIDTH : INTEGER;
        din248_WIDTH : INTEGER;
        din249_WIDTH : INTEGER;
        din250_WIDTH : INTEGER;
        din251_WIDTH : INTEGER;
        din252_WIDTH : INTEGER;
        din253_WIDTH : INTEGER;
        din254_WIDTH : INTEGER;
        din255_WIDTH : INTEGER;
        din256_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        din10 : IN STD_LOGIC_VECTOR (7 downto 0);
        din11 : IN STD_LOGIC_VECTOR (7 downto 0);
        din12 : IN STD_LOGIC_VECTOR (7 downto 0);
        din13 : IN STD_LOGIC_VECTOR (7 downto 0);
        din14 : IN STD_LOGIC_VECTOR (7 downto 0);
        din15 : IN STD_LOGIC_VECTOR (7 downto 0);
        din16 : IN STD_LOGIC_VECTOR (7 downto 0);
        din17 : IN STD_LOGIC_VECTOR (7 downto 0);
        din18 : IN STD_LOGIC_VECTOR (7 downto 0);
        din19 : IN STD_LOGIC_VECTOR (7 downto 0);
        din20 : IN STD_LOGIC_VECTOR (7 downto 0);
        din21 : IN STD_LOGIC_VECTOR (7 downto 0);
        din22 : IN STD_LOGIC_VECTOR (7 downto 0);
        din23 : IN STD_LOGIC_VECTOR (7 downto 0);
        din24 : IN STD_LOGIC_VECTOR (7 downto 0);
        din25 : IN STD_LOGIC_VECTOR (7 downto 0);
        din26 : IN STD_LOGIC_VECTOR (7 downto 0);
        din27 : IN STD_LOGIC_VECTOR (7 downto 0);
        din28 : IN STD_LOGIC_VECTOR (7 downto 0);
        din29 : IN STD_LOGIC_VECTOR (7 downto 0);
        din30 : IN STD_LOGIC_VECTOR (7 downto 0);
        din31 : IN STD_LOGIC_VECTOR (7 downto 0);
        din32 : IN STD_LOGIC_VECTOR (7 downto 0);
        din33 : IN STD_LOGIC_VECTOR (7 downto 0);
        din34 : IN STD_LOGIC_VECTOR (7 downto 0);
        din35 : IN STD_LOGIC_VECTOR (7 downto 0);
        din36 : IN STD_LOGIC_VECTOR (7 downto 0);
        din37 : IN STD_LOGIC_VECTOR (7 downto 0);
        din38 : IN STD_LOGIC_VECTOR (7 downto 0);
        din39 : IN STD_LOGIC_VECTOR (7 downto 0);
        din40 : IN STD_LOGIC_VECTOR (7 downto 0);
        din41 : IN STD_LOGIC_VECTOR (7 downto 0);
        din42 : IN STD_LOGIC_VECTOR (7 downto 0);
        din43 : IN STD_LOGIC_VECTOR (7 downto 0);
        din44 : IN STD_LOGIC_VECTOR (7 downto 0);
        din45 : IN STD_LOGIC_VECTOR (7 downto 0);
        din46 : IN STD_LOGIC_VECTOR (7 downto 0);
        din47 : IN STD_LOGIC_VECTOR (7 downto 0);
        din48 : IN STD_LOGIC_VECTOR (7 downto 0);
        din49 : IN STD_LOGIC_VECTOR (7 downto 0);
        din50 : IN STD_LOGIC_VECTOR (7 downto 0);
        din51 : IN STD_LOGIC_VECTOR (7 downto 0);
        din52 : IN STD_LOGIC_VECTOR (7 downto 0);
        din53 : IN STD_LOGIC_VECTOR (7 downto 0);
        din54 : IN STD_LOGIC_VECTOR (7 downto 0);
        din55 : IN STD_LOGIC_VECTOR (7 downto 0);
        din56 : IN STD_LOGIC_VECTOR (7 downto 0);
        din57 : IN STD_LOGIC_VECTOR (7 downto 0);
        din58 : IN STD_LOGIC_VECTOR (7 downto 0);
        din59 : IN STD_LOGIC_VECTOR (7 downto 0);
        din60 : IN STD_LOGIC_VECTOR (7 downto 0);
        din61 : IN STD_LOGIC_VECTOR (7 downto 0);
        din62 : IN STD_LOGIC_VECTOR (7 downto 0);
        din63 : IN STD_LOGIC_VECTOR (7 downto 0);
        din64 : IN STD_LOGIC_VECTOR (7 downto 0);
        din65 : IN STD_LOGIC_VECTOR (7 downto 0);
        din66 : IN STD_LOGIC_VECTOR (7 downto 0);
        din67 : IN STD_LOGIC_VECTOR (7 downto 0);
        din68 : IN STD_LOGIC_VECTOR (7 downto 0);
        din69 : IN STD_LOGIC_VECTOR (7 downto 0);
        din70 : IN STD_LOGIC_VECTOR (7 downto 0);
        din71 : IN STD_LOGIC_VECTOR (7 downto 0);
        din72 : IN STD_LOGIC_VECTOR (7 downto 0);
        din73 : IN STD_LOGIC_VECTOR (7 downto 0);
        din74 : IN STD_LOGIC_VECTOR (7 downto 0);
        din75 : IN STD_LOGIC_VECTOR (7 downto 0);
        din76 : IN STD_LOGIC_VECTOR (7 downto 0);
        din77 : IN STD_LOGIC_VECTOR (7 downto 0);
        din78 : IN STD_LOGIC_VECTOR (7 downto 0);
        din79 : IN STD_LOGIC_VECTOR (7 downto 0);
        din80 : IN STD_LOGIC_VECTOR (7 downto 0);
        din81 : IN STD_LOGIC_VECTOR (7 downto 0);
        din82 : IN STD_LOGIC_VECTOR (7 downto 0);
        din83 : IN STD_LOGIC_VECTOR (7 downto 0);
        din84 : IN STD_LOGIC_VECTOR (7 downto 0);
        din85 : IN STD_LOGIC_VECTOR (7 downto 0);
        din86 : IN STD_LOGIC_VECTOR (7 downto 0);
        din87 : IN STD_LOGIC_VECTOR (7 downto 0);
        din88 : IN STD_LOGIC_VECTOR (7 downto 0);
        din89 : IN STD_LOGIC_VECTOR (7 downto 0);
        din90 : IN STD_LOGIC_VECTOR (7 downto 0);
        din91 : IN STD_LOGIC_VECTOR (7 downto 0);
        din92 : IN STD_LOGIC_VECTOR (7 downto 0);
        din93 : IN STD_LOGIC_VECTOR (7 downto 0);
        din94 : IN STD_LOGIC_VECTOR (7 downto 0);
        din95 : IN STD_LOGIC_VECTOR (7 downto 0);
        din96 : IN STD_LOGIC_VECTOR (7 downto 0);
        din97 : IN STD_LOGIC_VECTOR (7 downto 0);
        din98 : IN STD_LOGIC_VECTOR (7 downto 0);
        din99 : IN STD_LOGIC_VECTOR (7 downto 0);
        din100 : IN STD_LOGIC_VECTOR (7 downto 0);
        din101 : IN STD_LOGIC_VECTOR (7 downto 0);
        din102 : IN STD_LOGIC_VECTOR (7 downto 0);
        din103 : IN STD_LOGIC_VECTOR (7 downto 0);
        din104 : IN STD_LOGIC_VECTOR (7 downto 0);
        din105 : IN STD_LOGIC_VECTOR (7 downto 0);
        din106 : IN STD_LOGIC_VECTOR (7 downto 0);
        din107 : IN STD_LOGIC_VECTOR (7 downto 0);
        din108 : IN STD_LOGIC_VECTOR (7 downto 0);
        din109 : IN STD_LOGIC_VECTOR (7 downto 0);
        din110 : IN STD_LOGIC_VECTOR (7 downto 0);
        din111 : IN STD_LOGIC_VECTOR (7 downto 0);
        din112 : IN STD_LOGIC_VECTOR (7 downto 0);
        din113 : IN STD_LOGIC_VECTOR (7 downto 0);
        din114 : IN STD_LOGIC_VECTOR (7 downto 0);
        din115 : IN STD_LOGIC_VECTOR (7 downto 0);
        din116 : IN STD_LOGIC_VECTOR (7 downto 0);
        din117 : IN STD_LOGIC_VECTOR (7 downto 0);
        din118 : IN STD_LOGIC_VECTOR (7 downto 0);
        din119 : IN STD_LOGIC_VECTOR (7 downto 0);
        din120 : IN STD_LOGIC_VECTOR (7 downto 0);
        din121 : IN STD_LOGIC_VECTOR (7 downto 0);
        din122 : IN STD_LOGIC_VECTOR (7 downto 0);
        din123 : IN STD_LOGIC_VECTOR (7 downto 0);
        din124 : IN STD_LOGIC_VECTOR (7 downto 0);
        din125 : IN STD_LOGIC_VECTOR (7 downto 0);
        din126 : IN STD_LOGIC_VECTOR (7 downto 0);
        din127 : IN STD_LOGIC_VECTOR (7 downto 0);
        din128 : IN STD_LOGIC_VECTOR (7 downto 0);
        din129 : IN STD_LOGIC_VECTOR (7 downto 0);
        din130 : IN STD_LOGIC_VECTOR (7 downto 0);
        din131 : IN STD_LOGIC_VECTOR (7 downto 0);
        din132 : IN STD_LOGIC_VECTOR (7 downto 0);
        din133 : IN STD_LOGIC_VECTOR (7 downto 0);
        din134 : IN STD_LOGIC_VECTOR (7 downto 0);
        din135 : IN STD_LOGIC_VECTOR (7 downto 0);
        din136 : IN STD_LOGIC_VECTOR (7 downto 0);
        din137 : IN STD_LOGIC_VECTOR (7 downto 0);
        din138 : IN STD_LOGIC_VECTOR (7 downto 0);
        din139 : IN STD_LOGIC_VECTOR (7 downto 0);
        din140 : IN STD_LOGIC_VECTOR (7 downto 0);
        din141 : IN STD_LOGIC_VECTOR (7 downto 0);
        din142 : IN STD_LOGIC_VECTOR (7 downto 0);
        din143 : IN STD_LOGIC_VECTOR (7 downto 0);
        din144 : IN STD_LOGIC_VECTOR (7 downto 0);
        din145 : IN STD_LOGIC_VECTOR (7 downto 0);
        din146 : IN STD_LOGIC_VECTOR (7 downto 0);
        din147 : IN STD_LOGIC_VECTOR (7 downto 0);
        din148 : IN STD_LOGIC_VECTOR (7 downto 0);
        din149 : IN STD_LOGIC_VECTOR (7 downto 0);
        din150 : IN STD_LOGIC_VECTOR (7 downto 0);
        din151 : IN STD_LOGIC_VECTOR (7 downto 0);
        din152 : IN STD_LOGIC_VECTOR (7 downto 0);
        din153 : IN STD_LOGIC_VECTOR (7 downto 0);
        din154 : IN STD_LOGIC_VECTOR (7 downto 0);
        din155 : IN STD_LOGIC_VECTOR (7 downto 0);
        din156 : IN STD_LOGIC_VECTOR (7 downto 0);
        din157 : IN STD_LOGIC_VECTOR (7 downto 0);
        din158 : IN STD_LOGIC_VECTOR (7 downto 0);
        din159 : IN STD_LOGIC_VECTOR (7 downto 0);
        din160 : IN STD_LOGIC_VECTOR (7 downto 0);
        din161 : IN STD_LOGIC_VECTOR (7 downto 0);
        din162 : IN STD_LOGIC_VECTOR (7 downto 0);
        din163 : IN STD_LOGIC_VECTOR (7 downto 0);
        din164 : IN STD_LOGIC_VECTOR (7 downto 0);
        din165 : IN STD_LOGIC_VECTOR (7 downto 0);
        din166 : IN STD_LOGIC_VECTOR (7 downto 0);
        din167 : IN STD_LOGIC_VECTOR (7 downto 0);
        din168 : IN STD_LOGIC_VECTOR (7 downto 0);
        din169 : IN STD_LOGIC_VECTOR (7 downto 0);
        din170 : IN STD_LOGIC_VECTOR (7 downto 0);
        din171 : IN STD_LOGIC_VECTOR (7 downto 0);
        din172 : IN STD_LOGIC_VECTOR (7 downto 0);
        din173 : IN STD_LOGIC_VECTOR (7 downto 0);
        din174 : IN STD_LOGIC_VECTOR (7 downto 0);
        din175 : IN STD_LOGIC_VECTOR (7 downto 0);
        din176 : IN STD_LOGIC_VECTOR (7 downto 0);
        din177 : IN STD_LOGIC_VECTOR (7 downto 0);
        din178 : IN STD_LOGIC_VECTOR (7 downto 0);
        din179 : IN STD_LOGIC_VECTOR (7 downto 0);
        din180 : IN STD_LOGIC_VECTOR (7 downto 0);
        din181 : IN STD_LOGIC_VECTOR (7 downto 0);
        din182 : IN STD_LOGIC_VECTOR (7 downto 0);
        din183 : IN STD_LOGIC_VECTOR (7 downto 0);
        din184 : IN STD_LOGIC_VECTOR (7 downto 0);
        din185 : IN STD_LOGIC_VECTOR (7 downto 0);
        din186 : IN STD_LOGIC_VECTOR (7 downto 0);
        din187 : IN STD_LOGIC_VECTOR (7 downto 0);
        din188 : IN STD_LOGIC_VECTOR (7 downto 0);
        din189 : IN STD_LOGIC_VECTOR (7 downto 0);
        din190 : IN STD_LOGIC_VECTOR (7 downto 0);
        din191 : IN STD_LOGIC_VECTOR (7 downto 0);
        din192 : IN STD_LOGIC_VECTOR (7 downto 0);
        din193 : IN STD_LOGIC_VECTOR (7 downto 0);
        din194 : IN STD_LOGIC_VECTOR (7 downto 0);
        din195 : IN STD_LOGIC_VECTOR (7 downto 0);
        din196 : IN STD_LOGIC_VECTOR (7 downto 0);
        din197 : IN STD_LOGIC_VECTOR (7 downto 0);
        din198 : IN STD_LOGIC_VECTOR (7 downto 0);
        din199 : IN STD_LOGIC_VECTOR (7 downto 0);
        din200 : IN STD_LOGIC_VECTOR (7 downto 0);
        din201 : IN STD_LOGIC_VECTOR (7 downto 0);
        din202 : IN STD_LOGIC_VECTOR (7 downto 0);
        din203 : IN STD_LOGIC_VECTOR (7 downto 0);
        din204 : IN STD_LOGIC_VECTOR (7 downto 0);
        din205 : IN STD_LOGIC_VECTOR (7 downto 0);
        din206 : IN STD_LOGIC_VECTOR (7 downto 0);
        din207 : IN STD_LOGIC_VECTOR (7 downto 0);
        din208 : IN STD_LOGIC_VECTOR (7 downto 0);
        din209 : IN STD_LOGIC_VECTOR (7 downto 0);
        din210 : IN STD_LOGIC_VECTOR (7 downto 0);
        din211 : IN STD_LOGIC_VECTOR (7 downto 0);
        din212 : IN STD_LOGIC_VECTOR (7 downto 0);
        din213 : IN STD_LOGIC_VECTOR (7 downto 0);
        din214 : IN STD_LOGIC_VECTOR (7 downto 0);
        din215 : IN STD_LOGIC_VECTOR (7 downto 0);
        din216 : IN STD_LOGIC_VECTOR (7 downto 0);
        din217 : IN STD_LOGIC_VECTOR (7 downto 0);
        din218 : IN STD_LOGIC_VECTOR (7 downto 0);
        din219 : IN STD_LOGIC_VECTOR (7 downto 0);
        din220 : IN STD_LOGIC_VECTOR (7 downto 0);
        din221 : IN STD_LOGIC_VECTOR (7 downto 0);
        din222 : IN STD_LOGIC_VECTOR (7 downto 0);
        din223 : IN STD_LOGIC_VECTOR (7 downto 0);
        din224 : IN STD_LOGIC_VECTOR (7 downto 0);
        din225 : IN STD_LOGIC_VECTOR (7 downto 0);
        din226 : IN STD_LOGIC_VECTOR (7 downto 0);
        din227 : IN STD_LOGIC_VECTOR (7 downto 0);
        din228 : IN STD_LOGIC_VECTOR (7 downto 0);
        din229 : IN STD_LOGIC_VECTOR (7 downto 0);
        din230 : IN STD_LOGIC_VECTOR (7 downto 0);
        din231 : IN STD_LOGIC_VECTOR (7 downto 0);
        din232 : IN STD_LOGIC_VECTOR (7 downto 0);
        din233 : IN STD_LOGIC_VECTOR (7 downto 0);
        din234 : IN STD_LOGIC_VECTOR (7 downto 0);
        din235 : IN STD_LOGIC_VECTOR (7 downto 0);
        din236 : IN STD_LOGIC_VECTOR (7 downto 0);
        din237 : IN STD_LOGIC_VECTOR (7 downto 0);
        din238 : IN STD_LOGIC_VECTOR (7 downto 0);
        din239 : IN STD_LOGIC_VECTOR (7 downto 0);
        din240 : IN STD_LOGIC_VECTOR (7 downto 0);
        din241 : IN STD_LOGIC_VECTOR (7 downto 0);
        din242 : IN STD_LOGIC_VECTOR (7 downto 0);
        din243 : IN STD_LOGIC_VECTOR (7 downto 0);
        din244 : IN STD_LOGIC_VECTOR (7 downto 0);
        din245 : IN STD_LOGIC_VECTOR (7 downto 0);
        din246 : IN STD_LOGIC_VECTOR (7 downto 0);
        din247 : IN STD_LOGIC_VECTOR (7 downto 0);
        din248 : IN STD_LOGIC_VECTOR (7 downto 0);
        din249 : IN STD_LOGIC_VECTOR (7 downto 0);
        din250 : IN STD_LOGIC_VECTOR (7 downto 0);
        din251 : IN STD_LOGIC_VECTOR (7 downto 0);
        din252 : IN STD_LOGIC_VECTOR (7 downto 0);
        din253 : IN STD_LOGIC_VECTOR (7 downto 0);
        din254 : IN STD_LOGIC_VECTOR (7 downto 0);
        din255 : IN STD_LOGIC_VECTOR (7 downto 0);
        din256 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    mux_2568_8_1_1_U15 : component tx_rdma_hdr_mux_2568_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 8,
        din101_WIDTH => 8,
        din102_WIDTH => 8,
        din103_WIDTH => 8,
        din104_WIDTH => 8,
        din105_WIDTH => 8,
        din106_WIDTH => 8,
        din107_WIDTH => 8,
        din108_WIDTH => 8,
        din109_WIDTH => 8,
        din110_WIDTH => 8,
        din111_WIDTH => 8,
        din112_WIDTH => 8,
        din113_WIDTH => 8,
        din114_WIDTH => 8,
        din115_WIDTH => 8,
        din116_WIDTH => 8,
        din117_WIDTH => 8,
        din118_WIDTH => 8,
        din119_WIDTH => 8,
        din120_WIDTH => 8,
        din121_WIDTH => 8,
        din122_WIDTH => 8,
        din123_WIDTH => 8,
        din124_WIDTH => 8,
        din125_WIDTH => 8,
        din126_WIDTH => 8,
        din127_WIDTH => 8,
        din128_WIDTH => 8,
        din129_WIDTH => 8,
        din130_WIDTH => 8,
        din131_WIDTH => 8,
        din132_WIDTH => 8,
        din133_WIDTH => 8,
        din134_WIDTH => 8,
        din135_WIDTH => 8,
        din136_WIDTH => 8,
        din137_WIDTH => 8,
        din138_WIDTH => 8,
        din139_WIDTH => 8,
        din140_WIDTH => 8,
        din141_WIDTH => 8,
        din142_WIDTH => 8,
        din143_WIDTH => 8,
        din144_WIDTH => 8,
        din145_WIDTH => 8,
        din146_WIDTH => 8,
        din147_WIDTH => 8,
        din148_WIDTH => 8,
        din149_WIDTH => 8,
        din150_WIDTH => 8,
        din151_WIDTH => 8,
        din152_WIDTH => 8,
        din153_WIDTH => 8,
        din154_WIDTH => 8,
        din155_WIDTH => 8,
        din156_WIDTH => 8,
        din157_WIDTH => 8,
        din158_WIDTH => 8,
        din159_WIDTH => 8,
        din160_WIDTH => 8,
        din161_WIDTH => 8,
        din162_WIDTH => 8,
        din163_WIDTH => 8,
        din164_WIDTH => 8,
        din165_WIDTH => 8,
        din166_WIDTH => 8,
        din167_WIDTH => 8,
        din168_WIDTH => 8,
        din169_WIDTH => 8,
        din170_WIDTH => 8,
        din171_WIDTH => 8,
        din172_WIDTH => 8,
        din173_WIDTH => 8,
        din174_WIDTH => 8,
        din175_WIDTH => 8,
        din176_WIDTH => 8,
        din177_WIDTH => 8,
        din178_WIDTH => 8,
        din179_WIDTH => 8,
        din180_WIDTH => 8,
        din181_WIDTH => 8,
        din182_WIDTH => 8,
        din183_WIDTH => 8,
        din184_WIDTH => 8,
        din185_WIDTH => 8,
        din186_WIDTH => 8,
        din187_WIDTH => 8,
        din188_WIDTH => 8,
        din189_WIDTH => 8,
        din190_WIDTH => 8,
        din191_WIDTH => 8,
        din192_WIDTH => 8,
        din193_WIDTH => 8,
        din194_WIDTH => 8,
        din195_WIDTH => 8,
        din196_WIDTH => 8,
        din197_WIDTH => 8,
        din198_WIDTH => 8,
        din199_WIDTH => 8,
        din200_WIDTH => 8,
        din201_WIDTH => 8,
        din202_WIDTH => 8,
        din203_WIDTH => 8,
        din204_WIDTH => 8,
        din205_WIDTH => 8,
        din206_WIDTH => 8,
        din207_WIDTH => 8,
        din208_WIDTH => 8,
        din209_WIDTH => 8,
        din210_WIDTH => 8,
        din211_WIDTH => 8,
        din212_WIDTH => 8,
        din213_WIDTH => 8,
        din214_WIDTH => 8,
        din215_WIDTH => 8,
        din216_WIDTH => 8,
        din217_WIDTH => 8,
        din218_WIDTH => 8,
        din219_WIDTH => 8,
        din220_WIDTH => 8,
        din221_WIDTH => 8,
        din222_WIDTH => 8,
        din223_WIDTH => 8,
        din224_WIDTH => 8,
        din225_WIDTH => 8,
        din226_WIDTH => 8,
        din227_WIDTH => 8,
        din228_WIDTH => 8,
        din229_WIDTH => 8,
        din230_WIDTH => 8,
        din231_WIDTH => 8,
        din232_WIDTH => 8,
        din233_WIDTH => 8,
        din234_WIDTH => 8,
        din235_WIDTH => 8,
        din236_WIDTH => 8,
        din237_WIDTH => 8,
        din238_WIDTH => 8,
        din239_WIDTH => 8,
        din240_WIDTH => 8,
        din241_WIDTH => 8,
        din242_WIDTH => 8,
        din243_WIDTH => 8,
        din244_WIDTH => 8,
        din245_WIDTH => 8,
        din246_WIDTH => 8,
        din247_WIDTH => 8,
        din248_WIDTH => 8,
        din249_WIDTH => 8,
        din250_WIDTH => 8,
        din251_WIDTH => 8,
        din252_WIDTH => 8,
        din253_WIDTH => 8,
        din254_WIDTH => 8,
        din255_WIDTH => 8,
        din256_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_C,
        din1 => ap_const_lv8_C,
        din2 => ap_const_lv8_C,
        din3 => ap_const_lv8_10,
        din4 => ap_const_lv8_C,
        din5 => ap_const_lv8_10,
        din6 => ap_const_lv8_1C,
        din7 => ap_const_lv8_C,
        din8 => ap_const_lv8_C,
        din9 => ap_const_lv8_10,
        din10 => ap_const_lv8_1C,
        din11 => ap_const_lv8_20,
        din12 => ap_const_lv8_1C,
        din13 => ap_const_lv8_10,
        din14 => ap_const_lv8_C,
        din15 => ap_const_lv8_10,
        din16 => ap_const_lv8_10,
        din17 => ap_const_lv8_10,
        din18 => ap_const_lv8_10,
        din19 => ap_const_lv8_0,
        din20 => ap_const_lv8_0,
        din21 => ap_const_lv8_0,
        din22 => ap_const_lv8_10,
        din23 => ap_const_lv8_10,
        din24 => ap_const_lv8_0,
        din25 => ap_const_lv8_0,
        din26 => ap_const_lv8_0,
        din27 => ap_const_lv8_0,
        din28 => ap_const_lv8_0,
        din29 => ap_const_lv8_0,
        din30 => ap_const_lv8_0,
        din31 => ap_const_lv8_0,
        din32 => ap_const_lv8_0,
        din33 => ap_const_lv8_0,
        din34 => ap_const_lv8_0,
        din35 => ap_const_lv8_0,
        din36 => ap_const_lv8_0,
        din37 => ap_const_lv8_0,
        din38 => ap_const_lv8_0,
        din39 => ap_const_lv8_0,
        din40 => ap_const_lv8_0,
        din41 => ap_const_lv8_0,
        din42 => ap_const_lv8_0,
        din43 => ap_const_lv8_0,
        din44 => ap_const_lv8_0,
        din45 => ap_const_lv8_0,
        din46 => ap_const_lv8_0,
        din47 => ap_const_lv8_0,
        din48 => ap_const_lv8_0,
        din49 => ap_const_lv8_0,
        din50 => ap_const_lv8_0,
        din51 => ap_const_lv8_0,
        din52 => ap_const_lv8_0,
        din53 => ap_const_lv8_0,
        din54 => ap_const_lv8_0,
        din55 => ap_const_lv8_0,
        din56 => ap_const_lv8_0,
        din57 => ap_const_lv8_0,
        din58 => ap_const_lv8_0,
        din59 => ap_const_lv8_0,
        din60 => ap_const_lv8_0,
        din61 => ap_const_lv8_0,
        din62 => ap_const_lv8_0,
        din63 => ap_const_lv8_0,
        din64 => ap_const_lv8_0,
        din65 => ap_const_lv8_0,
        din66 => ap_const_lv8_0,
        din67 => ap_const_lv8_0,
        din68 => ap_const_lv8_0,
        din69 => ap_const_lv8_0,
        din70 => ap_const_lv8_0,
        din71 => ap_const_lv8_0,
        din72 => ap_const_lv8_0,
        din73 => ap_const_lv8_0,
        din74 => ap_const_lv8_0,
        din75 => ap_const_lv8_0,
        din76 => ap_const_lv8_0,
        din77 => ap_const_lv8_0,
        din78 => ap_const_lv8_0,
        din79 => ap_const_lv8_0,
        din80 => ap_const_lv8_0,
        din81 => ap_const_lv8_0,
        din82 => ap_const_lv8_0,
        din83 => ap_const_lv8_0,
        din84 => ap_const_lv8_0,
        din85 => ap_const_lv8_0,
        din86 => ap_const_lv8_0,
        din87 => ap_const_lv8_0,
        din88 => ap_const_lv8_0,
        din89 => ap_const_lv8_0,
        din90 => ap_const_lv8_0,
        din91 => ap_const_lv8_0,
        din92 => ap_const_lv8_0,
        din93 => ap_const_lv8_0,
        din94 => ap_const_lv8_0,
        din95 => ap_const_lv8_0,
        din96 => ap_const_lv8_0,
        din97 => ap_const_lv8_0,
        din98 => ap_const_lv8_0,
        din99 => ap_const_lv8_0,
        din100 => ap_const_lv8_0,
        din101 => ap_const_lv8_0,
        din102 => ap_const_lv8_0,
        din103 => ap_const_lv8_0,
        din104 => ap_const_lv8_0,
        din105 => ap_const_lv8_0,
        din106 => ap_const_lv8_0,
        din107 => ap_const_lv8_0,
        din108 => ap_const_lv8_0,
        din109 => ap_const_lv8_0,
        din110 => ap_const_lv8_0,
        din111 => ap_const_lv8_0,
        din112 => ap_const_lv8_0,
        din113 => ap_const_lv8_0,
        din114 => ap_const_lv8_0,
        din115 => ap_const_lv8_0,
        din116 => ap_const_lv8_0,
        din117 => ap_const_lv8_0,
        din118 => ap_const_lv8_0,
        din119 => ap_const_lv8_0,
        din120 => ap_const_lv8_0,
        din121 => ap_const_lv8_0,
        din122 => ap_const_lv8_0,
        din123 => ap_const_lv8_0,
        din124 => ap_const_lv8_0,
        din125 => ap_const_lv8_0,
        din126 => ap_const_lv8_0,
        din127 => ap_const_lv8_0,
        din128 => ap_const_lv8_0,
        din129 => ap_const_lv8_0,
        din130 => ap_const_lv8_0,
        din131 => ap_const_lv8_0,
        din132 => ap_const_lv8_0,
        din133 => ap_const_lv8_0,
        din134 => ap_const_lv8_0,
        din135 => ap_const_lv8_0,
        din136 => ap_const_lv8_0,
        din137 => ap_const_lv8_0,
        din138 => ap_const_lv8_0,
        din139 => ap_const_lv8_0,
        din140 => ap_const_lv8_0,
        din141 => ap_const_lv8_0,
        din142 => ap_const_lv8_0,
        din143 => ap_const_lv8_0,
        din144 => ap_const_lv8_0,
        din145 => ap_const_lv8_0,
        din146 => ap_const_lv8_0,
        din147 => ap_const_lv8_0,
        din148 => ap_const_lv8_0,
        din149 => ap_const_lv8_0,
        din150 => ap_const_lv8_0,
        din151 => ap_const_lv8_0,
        din152 => ap_const_lv8_0,
        din153 => ap_const_lv8_0,
        din154 => ap_const_lv8_0,
        din155 => ap_const_lv8_0,
        din156 => ap_const_lv8_0,
        din157 => ap_const_lv8_0,
        din158 => ap_const_lv8_0,
        din159 => ap_const_lv8_0,
        din160 => ap_const_lv8_0,
        din161 => ap_const_lv8_0,
        din162 => ap_const_lv8_0,
        din163 => ap_const_lv8_0,
        din164 => ap_const_lv8_0,
        din165 => ap_const_lv8_0,
        din166 => ap_const_lv8_0,
        din167 => ap_const_lv8_0,
        din168 => ap_const_lv8_0,
        din169 => ap_const_lv8_0,
        din170 => ap_const_lv8_0,
        din171 => ap_const_lv8_0,
        din172 => ap_const_lv8_0,
        din173 => ap_const_lv8_0,
        din174 => ap_const_lv8_0,
        din175 => ap_const_lv8_0,
        din176 => ap_const_lv8_0,
        din177 => ap_const_lv8_0,
        din178 => ap_const_lv8_0,
        din179 => ap_const_lv8_0,
        din180 => ap_const_lv8_0,
        din181 => ap_const_lv8_0,
        din182 => ap_const_lv8_0,
        din183 => ap_const_lv8_0,
        din184 => ap_const_lv8_0,
        din185 => ap_const_lv8_0,
        din186 => ap_const_lv8_0,
        din187 => ap_const_lv8_0,
        din188 => ap_const_lv8_0,
        din189 => ap_const_lv8_0,
        din190 => ap_const_lv8_0,
        din191 => ap_const_lv8_0,
        din192 => ap_const_lv8_0,
        din193 => ap_const_lv8_0,
        din194 => ap_const_lv8_0,
        din195 => ap_const_lv8_0,
        din196 => ap_const_lv8_0,
        din197 => ap_const_lv8_0,
        din198 => ap_const_lv8_0,
        din199 => ap_const_lv8_0,
        din200 => ap_const_lv8_0,
        din201 => ap_const_lv8_0,
        din202 => ap_const_lv8_0,
        din203 => ap_const_lv8_0,
        din204 => ap_const_lv8_0,
        din205 => ap_const_lv8_0,
        din206 => ap_const_lv8_0,
        din207 => ap_const_lv8_0,
        din208 => ap_const_lv8_0,
        din209 => ap_const_lv8_0,
        din210 => ap_const_lv8_0,
        din211 => ap_const_lv8_0,
        din212 => ap_const_lv8_0,
        din213 => ap_const_lv8_0,
        din214 => ap_const_lv8_0,
        din215 => ap_const_lv8_0,
        din216 => ap_const_lv8_0,
        din217 => ap_const_lv8_0,
        din218 => ap_const_lv8_0,
        din219 => ap_const_lv8_0,
        din220 => ap_const_lv8_0,
        din221 => ap_const_lv8_0,
        din222 => ap_const_lv8_0,
        din223 => ap_const_lv8_0,
        din224 => ap_const_lv8_0,
        din225 => ap_const_lv8_0,
        din226 => ap_const_lv8_0,
        din227 => ap_const_lv8_0,
        din228 => ap_const_lv8_0,
        din229 => ap_const_lv8_0,
        din230 => ap_const_lv8_0,
        din231 => ap_const_lv8_0,
        din232 => ap_const_lv8_0,
        din233 => ap_const_lv8_0,
        din234 => ap_const_lv8_0,
        din235 => ap_const_lv8_0,
        din236 => ap_const_lv8_0,
        din237 => ap_const_lv8_0,
        din238 => ap_const_lv8_0,
        din239 => ap_const_lv8_0,
        din240 => ap_const_lv8_0,
        din241 => ap_const_lv8_0,
        din242 => ap_const_lv8_0,
        din243 => ap_const_lv8_0,
        din244 => ap_const_lv8_0,
        din245 => ap_const_lv8_0,
        din246 => ap_const_lv8_0,
        din247 => ap_const_lv8_0,
        din248 => ap_const_lv8_0,
        din249 => ap_const_lv8_0,
        din250 => ap_const_lv8_0,
        din251 => ap_const_lv8_0,
        din252 => ap_const_lv8_0,
        din253 => ap_const_lv8_0,
        din254 => ap_const_lv8_0,
        din255 => ap_const_lv8_0,
        din256 => retval_0_i_i1_i_i_fu_1360_p257,
        dout => retval_0_i_i1_i_i_fu_1360_p258);

    mux_2568_8_1_1_U16 : component tx_rdma_hdr_mux_2568_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 8,
        din101_WIDTH => 8,
        din102_WIDTH => 8,
        din103_WIDTH => 8,
        din104_WIDTH => 8,
        din105_WIDTH => 8,
        din106_WIDTH => 8,
        din107_WIDTH => 8,
        din108_WIDTH => 8,
        din109_WIDTH => 8,
        din110_WIDTH => 8,
        din111_WIDTH => 8,
        din112_WIDTH => 8,
        din113_WIDTH => 8,
        din114_WIDTH => 8,
        din115_WIDTH => 8,
        din116_WIDTH => 8,
        din117_WIDTH => 8,
        din118_WIDTH => 8,
        din119_WIDTH => 8,
        din120_WIDTH => 8,
        din121_WIDTH => 8,
        din122_WIDTH => 8,
        din123_WIDTH => 8,
        din124_WIDTH => 8,
        din125_WIDTH => 8,
        din126_WIDTH => 8,
        din127_WIDTH => 8,
        din128_WIDTH => 8,
        din129_WIDTH => 8,
        din130_WIDTH => 8,
        din131_WIDTH => 8,
        din132_WIDTH => 8,
        din133_WIDTH => 8,
        din134_WIDTH => 8,
        din135_WIDTH => 8,
        din136_WIDTH => 8,
        din137_WIDTH => 8,
        din138_WIDTH => 8,
        din139_WIDTH => 8,
        din140_WIDTH => 8,
        din141_WIDTH => 8,
        din142_WIDTH => 8,
        din143_WIDTH => 8,
        din144_WIDTH => 8,
        din145_WIDTH => 8,
        din146_WIDTH => 8,
        din147_WIDTH => 8,
        din148_WIDTH => 8,
        din149_WIDTH => 8,
        din150_WIDTH => 8,
        din151_WIDTH => 8,
        din152_WIDTH => 8,
        din153_WIDTH => 8,
        din154_WIDTH => 8,
        din155_WIDTH => 8,
        din156_WIDTH => 8,
        din157_WIDTH => 8,
        din158_WIDTH => 8,
        din159_WIDTH => 8,
        din160_WIDTH => 8,
        din161_WIDTH => 8,
        din162_WIDTH => 8,
        din163_WIDTH => 8,
        din164_WIDTH => 8,
        din165_WIDTH => 8,
        din166_WIDTH => 8,
        din167_WIDTH => 8,
        din168_WIDTH => 8,
        din169_WIDTH => 8,
        din170_WIDTH => 8,
        din171_WIDTH => 8,
        din172_WIDTH => 8,
        din173_WIDTH => 8,
        din174_WIDTH => 8,
        din175_WIDTH => 8,
        din176_WIDTH => 8,
        din177_WIDTH => 8,
        din178_WIDTH => 8,
        din179_WIDTH => 8,
        din180_WIDTH => 8,
        din181_WIDTH => 8,
        din182_WIDTH => 8,
        din183_WIDTH => 8,
        din184_WIDTH => 8,
        din185_WIDTH => 8,
        din186_WIDTH => 8,
        din187_WIDTH => 8,
        din188_WIDTH => 8,
        din189_WIDTH => 8,
        din190_WIDTH => 8,
        din191_WIDTH => 8,
        din192_WIDTH => 8,
        din193_WIDTH => 8,
        din194_WIDTH => 8,
        din195_WIDTH => 8,
        din196_WIDTH => 8,
        din197_WIDTH => 8,
        din198_WIDTH => 8,
        din199_WIDTH => 8,
        din200_WIDTH => 8,
        din201_WIDTH => 8,
        din202_WIDTH => 8,
        din203_WIDTH => 8,
        din204_WIDTH => 8,
        din205_WIDTH => 8,
        din206_WIDTH => 8,
        din207_WIDTH => 8,
        din208_WIDTH => 8,
        din209_WIDTH => 8,
        din210_WIDTH => 8,
        din211_WIDTH => 8,
        din212_WIDTH => 8,
        din213_WIDTH => 8,
        din214_WIDTH => 8,
        din215_WIDTH => 8,
        din216_WIDTH => 8,
        din217_WIDTH => 8,
        din218_WIDTH => 8,
        din219_WIDTH => 8,
        din220_WIDTH => 8,
        din221_WIDTH => 8,
        din222_WIDTH => 8,
        din223_WIDTH => 8,
        din224_WIDTH => 8,
        din225_WIDTH => 8,
        din226_WIDTH => 8,
        din227_WIDTH => 8,
        din228_WIDTH => 8,
        din229_WIDTH => 8,
        din230_WIDTH => 8,
        din231_WIDTH => 8,
        din232_WIDTH => 8,
        din233_WIDTH => 8,
        din234_WIDTH => 8,
        din235_WIDTH => 8,
        din236_WIDTH => 8,
        din237_WIDTH => 8,
        din238_WIDTH => 8,
        din239_WIDTH => 8,
        din240_WIDTH => 8,
        din241_WIDTH => 8,
        din242_WIDTH => 8,
        din243_WIDTH => 8,
        din244_WIDTH => 8,
        din245_WIDTH => 8,
        din246_WIDTH => 8,
        din247_WIDTH => 8,
        din248_WIDTH => 8,
        din249_WIDTH => 8,
        din250_WIDTH => 8,
        din251_WIDTH => 8,
        din252_WIDTH => 8,
        din253_WIDTH => 8,
        din254_WIDTH => 8,
        din255_WIDTH => 8,
        din256_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_C,
        din1 => ap_const_lv8_C,
        din2 => ap_const_lv8_C,
        din3 => ap_const_lv8_10,
        din4 => ap_const_lv8_C,
        din5 => ap_const_lv8_10,
        din6 => ap_const_lv8_1C,
        din7 => ap_const_lv8_C,
        din8 => ap_const_lv8_C,
        din9 => ap_const_lv8_10,
        din10 => ap_const_lv8_1C,
        din11 => ap_const_lv8_20,
        din12 => ap_const_lv8_1C,
        din13 => ap_const_lv8_10,
        din14 => ap_const_lv8_C,
        din15 => ap_const_lv8_10,
        din16 => ap_const_lv8_10,
        din17 => ap_const_lv8_10,
        din18 => ap_const_lv8_10,
        din19 => ap_const_lv8_0,
        din20 => ap_const_lv8_0,
        din21 => ap_const_lv8_0,
        din22 => ap_const_lv8_10,
        din23 => ap_const_lv8_10,
        din24 => ap_const_lv8_0,
        din25 => ap_const_lv8_0,
        din26 => ap_const_lv8_0,
        din27 => ap_const_lv8_0,
        din28 => ap_const_lv8_0,
        din29 => ap_const_lv8_0,
        din30 => ap_const_lv8_0,
        din31 => ap_const_lv8_0,
        din32 => ap_const_lv8_0,
        din33 => ap_const_lv8_0,
        din34 => ap_const_lv8_0,
        din35 => ap_const_lv8_0,
        din36 => ap_const_lv8_0,
        din37 => ap_const_lv8_0,
        din38 => ap_const_lv8_0,
        din39 => ap_const_lv8_0,
        din40 => ap_const_lv8_0,
        din41 => ap_const_lv8_0,
        din42 => ap_const_lv8_0,
        din43 => ap_const_lv8_0,
        din44 => ap_const_lv8_0,
        din45 => ap_const_lv8_0,
        din46 => ap_const_lv8_0,
        din47 => ap_const_lv8_0,
        din48 => ap_const_lv8_0,
        din49 => ap_const_lv8_0,
        din50 => ap_const_lv8_0,
        din51 => ap_const_lv8_0,
        din52 => ap_const_lv8_0,
        din53 => ap_const_lv8_0,
        din54 => ap_const_lv8_0,
        din55 => ap_const_lv8_0,
        din56 => ap_const_lv8_0,
        din57 => ap_const_lv8_0,
        din58 => ap_const_lv8_0,
        din59 => ap_const_lv8_0,
        din60 => ap_const_lv8_0,
        din61 => ap_const_lv8_0,
        din62 => ap_const_lv8_0,
        din63 => ap_const_lv8_0,
        din64 => ap_const_lv8_0,
        din65 => ap_const_lv8_0,
        din66 => ap_const_lv8_0,
        din67 => ap_const_lv8_0,
        din68 => ap_const_lv8_0,
        din69 => ap_const_lv8_0,
        din70 => ap_const_lv8_0,
        din71 => ap_const_lv8_0,
        din72 => ap_const_lv8_0,
        din73 => ap_const_lv8_0,
        din74 => ap_const_lv8_0,
        din75 => ap_const_lv8_0,
        din76 => ap_const_lv8_0,
        din77 => ap_const_lv8_0,
        din78 => ap_const_lv8_0,
        din79 => ap_const_lv8_0,
        din80 => ap_const_lv8_0,
        din81 => ap_const_lv8_0,
        din82 => ap_const_lv8_0,
        din83 => ap_const_lv8_0,
        din84 => ap_const_lv8_0,
        din85 => ap_const_lv8_0,
        din86 => ap_const_lv8_0,
        din87 => ap_const_lv8_0,
        din88 => ap_const_lv8_0,
        din89 => ap_const_lv8_0,
        din90 => ap_const_lv8_0,
        din91 => ap_const_lv8_0,
        din92 => ap_const_lv8_0,
        din93 => ap_const_lv8_0,
        din94 => ap_const_lv8_0,
        din95 => ap_const_lv8_0,
        din96 => ap_const_lv8_0,
        din97 => ap_const_lv8_0,
        din98 => ap_const_lv8_0,
        din99 => ap_const_lv8_0,
        din100 => ap_const_lv8_0,
        din101 => ap_const_lv8_0,
        din102 => ap_const_lv8_0,
        din103 => ap_const_lv8_0,
        din104 => ap_const_lv8_0,
        din105 => ap_const_lv8_0,
        din106 => ap_const_lv8_0,
        din107 => ap_const_lv8_0,
        din108 => ap_const_lv8_0,
        din109 => ap_const_lv8_0,
        din110 => ap_const_lv8_0,
        din111 => ap_const_lv8_0,
        din112 => ap_const_lv8_0,
        din113 => ap_const_lv8_0,
        din114 => ap_const_lv8_0,
        din115 => ap_const_lv8_0,
        din116 => ap_const_lv8_0,
        din117 => ap_const_lv8_0,
        din118 => ap_const_lv8_0,
        din119 => ap_const_lv8_0,
        din120 => ap_const_lv8_0,
        din121 => ap_const_lv8_0,
        din122 => ap_const_lv8_0,
        din123 => ap_const_lv8_0,
        din124 => ap_const_lv8_0,
        din125 => ap_const_lv8_0,
        din126 => ap_const_lv8_0,
        din127 => ap_const_lv8_0,
        din128 => ap_const_lv8_0,
        din129 => ap_const_lv8_0,
        din130 => ap_const_lv8_0,
        din131 => ap_const_lv8_0,
        din132 => ap_const_lv8_0,
        din133 => ap_const_lv8_0,
        din134 => ap_const_lv8_0,
        din135 => ap_const_lv8_0,
        din136 => ap_const_lv8_0,
        din137 => ap_const_lv8_0,
        din138 => ap_const_lv8_0,
        din139 => ap_const_lv8_0,
        din140 => ap_const_lv8_0,
        din141 => ap_const_lv8_0,
        din142 => ap_const_lv8_0,
        din143 => ap_const_lv8_0,
        din144 => ap_const_lv8_0,
        din145 => ap_const_lv8_0,
        din146 => ap_const_lv8_0,
        din147 => ap_const_lv8_0,
        din148 => ap_const_lv8_0,
        din149 => ap_const_lv8_0,
        din150 => ap_const_lv8_0,
        din151 => ap_const_lv8_0,
        din152 => ap_const_lv8_0,
        din153 => ap_const_lv8_0,
        din154 => ap_const_lv8_0,
        din155 => ap_const_lv8_0,
        din156 => ap_const_lv8_0,
        din157 => ap_const_lv8_0,
        din158 => ap_const_lv8_0,
        din159 => ap_const_lv8_0,
        din160 => ap_const_lv8_0,
        din161 => ap_const_lv8_0,
        din162 => ap_const_lv8_0,
        din163 => ap_const_lv8_0,
        din164 => ap_const_lv8_0,
        din165 => ap_const_lv8_0,
        din166 => ap_const_lv8_0,
        din167 => ap_const_lv8_0,
        din168 => ap_const_lv8_0,
        din169 => ap_const_lv8_0,
        din170 => ap_const_lv8_0,
        din171 => ap_const_lv8_0,
        din172 => ap_const_lv8_0,
        din173 => ap_const_lv8_0,
        din174 => ap_const_lv8_0,
        din175 => ap_const_lv8_0,
        din176 => ap_const_lv8_0,
        din177 => ap_const_lv8_0,
        din178 => ap_const_lv8_0,
        din179 => ap_const_lv8_0,
        din180 => ap_const_lv8_0,
        din181 => ap_const_lv8_0,
        din182 => ap_const_lv8_0,
        din183 => ap_const_lv8_0,
        din184 => ap_const_lv8_0,
        din185 => ap_const_lv8_0,
        din186 => ap_const_lv8_0,
        din187 => ap_const_lv8_0,
        din188 => ap_const_lv8_0,
        din189 => ap_const_lv8_0,
        din190 => ap_const_lv8_0,
        din191 => ap_const_lv8_0,
        din192 => ap_const_lv8_0,
        din193 => ap_const_lv8_0,
        din194 => ap_const_lv8_0,
        din195 => ap_const_lv8_0,
        din196 => ap_const_lv8_0,
        din197 => ap_const_lv8_0,
        din198 => ap_const_lv8_0,
        din199 => ap_const_lv8_0,
        din200 => ap_const_lv8_0,
        din201 => ap_const_lv8_0,
        din202 => ap_const_lv8_0,
        din203 => ap_const_lv8_0,
        din204 => ap_const_lv8_0,
        din205 => ap_const_lv8_0,
        din206 => ap_const_lv8_0,
        din207 => ap_const_lv8_0,
        din208 => ap_const_lv8_0,
        din209 => ap_const_lv8_0,
        din210 => ap_const_lv8_0,
        din211 => ap_const_lv8_0,
        din212 => ap_const_lv8_0,
        din213 => ap_const_lv8_0,
        din214 => ap_const_lv8_0,
        din215 => ap_const_lv8_0,
        din216 => ap_const_lv8_0,
        din217 => ap_const_lv8_0,
        din218 => ap_const_lv8_0,
        din219 => ap_const_lv8_0,
        din220 => ap_const_lv8_0,
        din221 => ap_const_lv8_0,
        din222 => ap_const_lv8_0,
        din223 => ap_const_lv8_0,
        din224 => ap_const_lv8_0,
        din225 => ap_const_lv8_0,
        din226 => ap_const_lv8_0,
        din227 => ap_const_lv8_0,
        din228 => ap_const_lv8_0,
        din229 => ap_const_lv8_0,
        din230 => ap_const_lv8_0,
        din231 => ap_const_lv8_0,
        din232 => ap_const_lv8_0,
        din233 => ap_const_lv8_0,
        din234 => ap_const_lv8_0,
        din235 => ap_const_lv8_0,
        din236 => ap_const_lv8_0,
        din237 => ap_const_lv8_0,
        din238 => ap_const_lv8_0,
        din239 => ap_const_lv8_0,
        din240 => ap_const_lv8_0,
        din241 => ap_const_lv8_0,
        din242 => ap_const_lv8_0,
        din243 => ap_const_lv8_0,
        din244 => ap_const_lv8_0,
        din245 => ap_const_lv8_0,
        din246 => ap_const_lv8_0,
        din247 => ap_const_lv8_0,
        din248 => ap_const_lv8_0,
        din249 => ap_const_lv8_0,
        din250 => ap_const_lv8_0,
        din251 => ap_const_lv8_0,
        din252 => ap_const_lv8_0,
        din253 => ap_const_lv8_0,
        din254 => ap_const_lv8_0,
        din255 => ap_const_lv8_0,
        din256 => retval_0_i_i_i_i_fu_2016_p257,
        dout => retval_0_i_i_i_i_fu_2016_p258);





    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or ((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    packet_len_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                packet_len_preg(0) <= '0';
                packet_len_preg(1) <= '0';
                packet_len_preg(2) <= '0';
                packet_len_preg(3) <= '0';
                packet_len_preg(4) <= '0';
                packet_len_preg(5) <= '0';
                packet_len_preg(6) <= '0';
                packet_len_preg(7) <= '0';
                packet_len_preg(8) <= '0';
                packet_len_preg(9) <= '0';
                packet_len_preg(10) <= '0';
                packet_len_preg(11) <= '0';
                packet_len_preg(12) <= '0';
                packet_len_preg(13) <= '0';
                packet_len_preg(14) <= '0';
                packet_len_preg(15) <= '0';
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or ((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))) and (tmp_1_i_i_reg_2675 = ap_const_lv1_1) and (ls_firstWord_1_load_reg_2671 = ap_const_lv1_1) and (tmp_i_i_reg_2667 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
                                        packet_len_preg(15 downto 0) <= zext_ln208_fu_2651_p1(15 downto 0);
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_din_data_V_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_114)) then
                if (((ls_firstWord_1 = ap_const_lv1_0) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_din_data_V_reg_418 <= tmp_data_V_1_fu_431_p1;
                elsif ((ap_const_boolean_1 = ap_condition_64)) then 
                    ap_phi_reg_pp0_iter1_din_data_V_reg_418 <= p_Result_17_fu_2616_p5;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_din_data_V_reg_418 <= ap_phi_reg_pp0_iter0_din_data_V_reg_418;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ls_firstWord_1 = ap_const_lv1_1) and (tmp_1_i_i_nbreadreq_fu_340_p3 = ap_const_lv1_1) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                id <= add_ln691_4_fu_2572_p2;
                ip_len_V_reg_2689 <= ip_len_V_fu_2548_p2;
                payload_rem_V_1_reg_2684 <= payload_rem_V_1_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_phi_mux_ls_firstWord_3_flag_1_i_i_phi_fu_395_p6 = ap_const_lv1_1))) then
                ls_firstWord_1 <= ap_phi_mux_ls_firstWord_3_new_1_i_i_phi_fu_408_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                ls_firstWord_1_load_reg_2671 <= ls_firstWord_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ls_firstWord_1 = ap_const_lv1_1) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                tmp_1_i_i_reg_2675 <= tmp_1_i_i_nbreadreq_fu_340_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                tmp_i_i_reg_2667 <= tmp_i_i_nbreadreq_fu_332_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (((ls_firstWord_1 = ap_const_lv1_0) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1)) or ((tmp_1_i_i_nbreadreq_fu_340_p3 = ap_const_lv1_1) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1))))) then
                tmp_reg_2699 <= tx_to_hdr_gen_dout(576 downto 512);
            end if;
        end if;
    end process;
    packet_len_preg(31 downto 16) <= "0000000000000000";

    ap_NS_iter0_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_iter0_fsm, ecn_for_ack_empty_n, tx_to_hdr_gen_empty_n, ap_predicate_op42_read_state1, axis_frame_ctx_to_hdr_gen_empty_n, ap_predicate_op46_read_state1, payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            when others =>  
                ap_NS_iter0_fsm <= "X";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm, ecn_for_ack_empty_n, tx_to_hdr_gen_empty_n, ap_predicate_op42_read_state1, axis_frame_ctx_to_hdr_gen_empty_n, ap_predicate_op46_read_state1, payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state2 => 
                if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)))) and not(((ap_done_reg = ap_const_logic_1) or ((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or ((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))) and ((ap_const_logic_0 = ap_CS_iter0_fsm_state1) or ((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and ((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0))))))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XX";
        end case;
    end process;
    add_ln11_fu_1972_p2 <= std_logic_vector(unsigned(zext_ln41_fu_612_p1) + unsigned(ap_const_lv9_1F3));
    add_ln691_2_fu_2538_p2 <= std_logic_vector(unsigned(zext_ln691_3_fu_2534_p1) + unsigned(ap_const_lv9_1C));
    add_ln691_4_fu_2572_p2 <= std_logic_vector(unsigned(id) + unsigned(ap_const_lv16_1));
    add_ln691_fu_1882_p2 <= std_logic_vector(unsigned(zext_ln691_1_fu_1878_p1) + unsigned(ap_const_lv9_8));
    and_ln414_1_fu_998_p2 <= (xor_ln414_2_fu_992_p2 and din_data_V_16_fu_854_p3);
    and_ln414_2_fu_1004_p2 <= (select_ln414_3_fu_966_p3 and and_ln414_fu_986_p2);
    and_ln414_3_fu_1130_p2 <= (shl_ln414_3_fu_1118_p2 and lshr_ln414_1_fu_1124_p2);
    and_ln414_4_fu_1142_p2 <= (xor_ln414_5_fu_1136_p2 and din_data_V_16_fu_854_p3);
    and_ln414_5_fu_1148_p2 <= (select_ln414_7_fu_1110_p3 and and_ln414_3_fu_1130_p2);
    and_ln414_fu_986_p2 <= (shl_ln414_1_fu_974_p2 and lshr_ln414_fu_980_p2);
    and_ln870_1_fu_1178_p2 <= (icmp_ln870_fu_870_p2 and and_ln870_fu_1172_p2);
    and_ln870_fu_1172_p2 <= (icmp_ln53_fu_1160_p2 and icmp_ln53_1_fu_1166_p2);
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter1_fsm_state0 <= ap_CS_iter1_fsm(0);
    ap_CS_iter1_fsm_state2 <= ap_CS_iter1_fsm(1);

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, ecn_for_ack_empty_n, tx_to_hdr_gen_empty_n, ap_predicate_op42_read_state1, axis_frame_ctx_to_hdr_gen_empty_n, ap_predicate_op46_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)));
    end process;


    ap_condition_114_assign_proc : process(ap_start, ap_done_reg, ap_CS_iter0_fsm_state1, ecn_for_ack_empty_n, tx_to_hdr_gen_empty_n, ap_predicate_op42_read_state1, axis_frame_ctx_to_hdr_gen_empty_n, ap_predicate_op46_read_state1, payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
                ap_condition_114 <= (not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1));
    end process;


    ap_condition_64_assign_proc : process(tmp_i_i_nbreadreq_fu_332_p3, tmp_1_i_i_nbreadreq_fu_340_p3, ls_firstWord_1)
    begin
                ap_condition_64 <= ((ls_firstWord_1 = ap_const_lv1_1) and (tmp_1_i_i_nbreadreq_fu_340_p3 = ap_const_lv1_1) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or ((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_iter1_fsm_state0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_ls_firstWord_3_flag_0_i_i_phi_fu_384_p4_assign_proc : process(tmp_i_i_nbreadreq_fu_332_p3, tmp_1_i_i_nbreadreq_fu_340_p3, ls_firstWord_1, ap_phi_reg_pp0_iter0_ls_firstWord_3_flag_0_i_i_reg_381)
    begin
        if ((tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1)) then
            if ((ls_firstWord_1 = ap_const_lv1_0)) then 
                ap_phi_mux_ls_firstWord_3_flag_0_i_i_phi_fu_384_p4 <= ap_const_lv1_0;
            elsif (((ls_firstWord_1 = ap_const_lv1_1) and (tmp_1_i_i_nbreadreq_fu_340_p3 = ap_const_lv1_1))) then 
                ap_phi_mux_ls_firstWord_3_flag_0_i_i_phi_fu_384_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_ls_firstWord_3_flag_0_i_i_phi_fu_384_p4 <= ap_phi_reg_pp0_iter0_ls_firstWord_3_flag_0_i_i_reg_381;
            end if;
        else 
            ap_phi_mux_ls_firstWord_3_flag_0_i_i_phi_fu_384_p4 <= ap_phi_reg_pp0_iter0_ls_firstWord_3_flag_0_i_i_reg_381;
        end if; 
    end process;


    ap_phi_mux_ls_firstWord_3_flag_1_i_i_phi_fu_395_p6_assign_proc : process(tmp_i_i_nbreadreq_fu_332_p3, tmp_1_i_i_nbreadreq_fu_340_p3, ls_firstWord_1, ap_phi_reg_pp0_iter0_ls_firstWord_3_flag_1_i_i_reg_392, or_ln454_fu_2638_p2)
    begin
        if ((((ls_firstWord_1 = ap_const_lv1_0) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1)) or ((tmp_1_i_i_nbreadreq_fu_340_p3 = ap_const_lv1_1) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1)))) then 
            ap_phi_mux_ls_firstWord_3_flag_1_i_i_phi_fu_395_p6 <= or_ln454_fu_2638_p2;
        elsif (((tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_0) or ((ls_firstWord_1 = ap_const_lv1_1) and (tmp_1_i_i_nbreadreq_fu_340_p3 = ap_const_lv1_0) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1)))) then 
            ap_phi_mux_ls_firstWord_3_flag_1_i_i_phi_fu_395_p6 <= ap_const_lv1_0;
        else 
            ap_phi_mux_ls_firstWord_3_flag_1_i_i_phi_fu_395_p6 <= ap_phi_reg_pp0_iter0_ls_firstWord_3_flag_1_i_i_reg_392;
        end if; 
    end process;


    ap_phi_mux_ls_firstWord_3_new_1_i_i_phi_fu_408_p6_assign_proc : process(tx_to_hdr_gen_dout, tmp_i_i_nbreadreq_fu_332_p3, tmp_1_i_i_nbreadreq_fu_340_p3, ls_firstWord_1, ap_phi_reg_pp0_iter0_ls_firstWord_3_new_1_i_i_reg_405)
    begin
        if ((((ls_firstWord_1 = ap_const_lv1_0) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1)) or ((tmp_1_i_i_nbreadreq_fu_340_p3 = ap_const_lv1_1) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1)))) then 
            ap_phi_mux_ls_firstWord_3_new_1_i_i_phi_fu_408_p6 <= tx_to_hdr_gen_dout(576 downto 576);
        else 
            ap_phi_mux_ls_firstWord_3_new_1_i_i_phi_fu_408_p6 <= ap_phi_reg_pp0_iter0_ls_firstWord_3_new_1_i_i_reg_405;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_din_data_V_reg_418 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_ls_firstWord_3_flag_0_i_i_reg_381 <= "X";
    ap_phi_reg_pp0_iter0_ls_firstWord_3_flag_1_i_i_reg_392 <= "X";
    ap_phi_reg_pp0_iter0_ls_firstWord_3_new_1_i_i_reg_405 <= "X";

    ap_predicate_op203_write_state2_assign_proc : process(tmp_i_i_reg_2667, ls_firstWord_1_load_reg_2671, tmp_1_i_i_reg_2675)
    begin
                ap_predicate_op203_write_state2 <= ((tmp_1_i_i_reg_2675 = ap_const_lv1_1) and (ls_firstWord_1_load_reg_2671 = ap_const_lv1_1) and (tmp_i_i_reg_2667 = ap_const_lv1_1));
    end process;


    ap_predicate_op209_write_state2_assign_proc : process(tmp_i_i_reg_2667, ls_firstWord_1_load_reg_2671, tmp_1_i_i_reg_2675)
    begin
                ap_predicate_op209_write_state2 <= (((ls_firstWord_1_load_reg_2671 = ap_const_lv1_0) and (tmp_i_i_reg_2667 = ap_const_lv1_1)) or ((tmp_1_i_i_reg_2675 = ap_const_lv1_1) and (tmp_i_i_reg_2667 = ap_const_lv1_1)));
    end process;


    ap_predicate_op42_read_state1_assign_proc : process(tmp_i_i_nbreadreq_fu_332_p3, tmp_1_i_i_nbreadreq_fu_340_p3, ls_firstWord_1)
    begin
                ap_predicate_op42_read_state1 <= (((ls_firstWord_1 = ap_const_lv1_0) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1)) or ((tmp_1_i_i_nbreadreq_fu_340_p3 = ap_const_lv1_1) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1)));
    end process;


    ap_predicate_op46_read_state1_assign_proc : process(tmp_i_i_nbreadreq_fu_332_p3, tmp_1_i_i_nbreadreq_fu_340_p3, ls_firstWord_1)
    begin
                ap_predicate_op46_read_state1 <= ((ls_firstWord_1 = ap_const_lv1_1) and (tmp_1_i_i_nbreadreq_fu_340_p3 = ap_const_lv1_1) and (tmp_i_i_nbreadreq_fu_332_p3 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_done_reg, ap_CS_iter0_fsm_state1, ecn_for_ack_empty_n, tx_to_hdr_gen_empty_n, ap_predicate_op42_read_state1, axis_frame_ctx_to_hdr_gen_empty_n, ap_predicate_op46_read_state1, payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    axis_frame_ctx_to_hdr_gen_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_iter0_fsm_state1, axis_frame_ctx_to_hdr_gen_empty_n, ap_predicate_op46_read_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_predicate_op46_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            axis_frame_ctx_to_hdr_gen_blk_n <= axis_frame_ctx_to_hdr_gen_empty_n;
        else 
            axis_frame_ctx_to_hdr_gen_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    axis_frame_ctx_to_hdr_gen_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_iter0_fsm_state1, ecn_for_ack_empty_n, tx_to_hdr_gen_empty_n, ap_predicate_op42_read_state1, axis_frame_ctx_to_hdr_gen_empty_n, ap_predicate_op46_read_state1, payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ap_predicate_op46_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            axis_frame_ctx_to_hdr_gen_read <= ap_const_logic_1;
        else 
            axis_frame_ctx_to_hdr_gen_read <= ap_const_logic_0;
        end if; 
    end process;

    din_data_V_16_fu_854_p3 <= 
        p_Result_1_fu_812_p5 when (or_ln41_1_fu_848_p2(0) = '1') else 
        p_Result_s_fu_600_p5;
    din_data_V_17_fu_1228_p3 <= 
        p_Result_2_fu_1010_p2 when (or_ln53_2_fu_1222_p2(0) = '1') else 
        din_data_V_7_fu_1184_p3;
    din_data_V_18_fu_2008_p3 <= 
        p_Result_15_fu_1960_p5 when (or_ln11_fu_1990_p2(0) = '1') else 
        p_Result_16_fu_1996_p5;
    din_data_V_7_fu_1184_p3 <= 
        p_Result_4_fu_1154_p2 when (and_ln870_1_fu_1178_p2(0) = '1') else 
        din_data_V_16_fu_854_p3;
    dout_fu_2655_p3 <= (tmp_reg_2699 & ap_phi_reg_pp0_iter1_din_data_V_reg_418);

    ecn_for_ack_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_iter0_fsm_state1, ecn_for_ack_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            ecn_for_ack_blk_n <= ecn_for_ack_empty_n;
        else 
            ecn_for_ack_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ecn_for_ack_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_iter0_fsm_state1, ecn_for_ack_empty_n, tx_to_hdr_gen_empty_n, ap_predicate_op42_read_state1, axis_frame_ctx_to_hdr_gen_empty_n, ap_predicate_op46_read_state1, payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            ecn_for_ack_read <= ap_const_logic_1;
        else 
            ecn_for_ack_read <= ap_const_logic_0;
        end if; 
    end process;

    frame_ctx_explicit_ack_1_fu_464_p3 <= axis_frame_ctx_to_hdr_gen_dout(72 downto 72);
    frame_ctx_remote_ip_1_fu_472_p4 <= axis_frame_ctx_to_hdr_gen_dout(104 downto 73);
    icmp_ln11_fu_1978_p2 <= "1" when (unsigned(add_ln11_fu_1972_p2) > unsigned(ap_const_lv9_4)) else "0";
    icmp_ln414_1_fu_1032_p2 <= "1" when (unsigned(select_ln155_fu_862_p3) > unsigned(select_ln215_fu_876_p3)) else "0";
    icmp_ln414_fu_888_p2 <= "1" when (unsigned(select_ln155_fu_862_p3) > unsigned(select_ln215_fu_876_p3)) else "0";
    icmp_ln41_1_fu_830_p2 <= "1" when (tmp_opcode_V_fu_454_p4 = ap_const_lv8_A) else "0";
    icmp_ln41_2_fu_836_p2 <= "1" when (tmp_opcode_V_fu_454_p4 = ap_const_lv8_6) else "0";
    icmp_ln41_fu_824_p2 <= "1" when (tmp_opcode_V_fu_454_p4 = ap_const_lv8_B) else "0";
    icmp_ln53_1_fu_1166_p2 <= "0" when (tmp_opcode_V_fu_454_p4 = ap_const_lv8_9) else "1";
    icmp_ln53_2_fu_1192_p2 <= "1" when (tmp_opcode_V_fu_454_p4 = ap_const_lv8_9) else "0";
    icmp_ln53_3_fu_1198_p2 <= "1" when (tmp_opcode_V_fu_454_p4 = ap_const_lv8_5) else "0";
    icmp_ln53_4_fu_1204_p2 <= "1" when (tmp_opcode_V_fu_454_p4 = ap_const_lv8_3) else "0";
    icmp_ln53_fu_1160_p2 <= "0" when (tmp_opcode_V_fu_454_p4 = ap_const_lv8_B) else "1";
    icmp_ln870_fu_870_p2 <= "1" when (tmp_opcode_V_fu_454_p4 = ap_const_lv8_11) else "0";
    ip_len_V_fu_2548_p2 <= std_logic_vector(unsigned(zext_ln691_4_fu_2544_p1) + unsigned(udp_len_V_fu_1354_p2));
    lshr_ln414_1_fu_1124_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv512_lc_2),to_integer(unsigned('0' & zext_ln414_5_fu_1090_p1(31-1 downto 0)))));
    lshr_ln414_fu_980_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv512_lc_2),to_integer(unsigned('0' & zext_ln414_2_fu_946_p1(31-1 downto 0)))));
    or_ln11_fu_1990_p2 <= (xor_ln11_fu_1984_p2 or icmp_ln11_fu_1978_p2);
    or_ln41_1_fu_848_p2 <= (or_ln41_fu_842_p2 or icmp_ln41_fu_824_p2);
    or_ln41_fu_842_p2 <= (icmp_ln41_2_fu_836_p2 or icmp_ln41_1_fu_830_p2);
    or_ln454_fu_2638_p2 <= (tmp_last_V_fu_435_p3 or ap_phi_mux_ls_firstWord_3_flag_0_i_i_phi_fu_384_p4);
    or_ln53_1_fu_1216_p2 <= (icmp_ln53_4_fu_1204_p2 or icmp_ln53_3_fu_1198_p2);
    or_ln53_2_fu_1222_p2 <= (or_ln53_fu_1210_p2 or or_ln53_1_fu_1216_p2);
    or_ln53_fu_1210_p2 <= (icmp_ln53_2_fu_1192_p2 or icmp_ln41_fu_824_p2);
    or_ln_fu_1342_p3 <= (ap_const_lv1_1 & payload_rem_V_1_fu_502_p2);
    p_Result_10_fu_1330_p5 <= (p_Result_7_fu_1280_p5(511 downto 192) & p_Result_9_fu_1318_p5 & p_Result_7_fu_1280_p5(175 downto 0));
    p_Result_10_i_i_fu_646_p4 <= axis_frame_ctx_to_hdr_gen_dout(152 downto 145);
    p_Result_11_fu_1908_p5 <= (ap_const_lv16_0(15 downto 8) & p_Result_41_i_i_fu_1898_p4);
    p_Result_11_i_i_fu_656_p4 <= axis_frame_ctx_to_hdr_gen_dout(160 downto 153);
    p_Result_12_fu_1924_p5 <= (trunc_ln674_2_fu_1920_p1 & p_Result_11_fu_1908_p5(7 downto 0));
    p_Result_12_i_i_fu_666_p4 <= axis_frame_ctx_to_hdr_gen_dout(168 downto 161);
    p_Result_13_fu_1936_p5 <= (p_Result_10_fu_1330_p5(511 downto 208) & p_Result_12_fu_1924_p5 & p_Result_10_fu_1330_p5(191 downto 0));
    p_Result_13_i_i_fu_676_p4 <= axis_frame_ctx_to_hdr_gen_dout(176 downto 169);
    p_Result_14_fu_1948_p5 <= (p_Result_13_fu_1936_p5(511 downto 224) & ap_const_lv16_0 & p_Result_13_fu_1936_p5(207 downto 0));
    p_Result_14_i_i_fu_686_p4 <= axis_frame_ctx_to_hdr_gen_dout(184 downto 177);
    p_Result_15_fu_1960_p5 <= (p_Result_14_fu_1948_p5(511 downto 16) & ap_const_lv16_245);
    p_Result_15_i_i_fu_696_p4 <= axis_frame_ctx_to_hdr_gen_dout(192 downto 185);
    p_Result_16_fu_1996_p5 <= (p_Result_15_fu_1960_p5(511 downto 10) & ap_const_lv2_3 & p_Result_15_fu_1960_p5(7 downto 0));
    p_Result_16_i_i_fu_706_p4 <= axis_frame_ctx_to_hdr_gen_dout(200 downto 193);
    p_Result_17_fu_2616_p5 <= (din_data_V_18_fu_2008_p3(511 downto 160) & tmp_6_i_i_fu_2598_p8 & din_data_V_18_fu_2008_p3(15 downto 0));
    p_Result_17_i_i_fu_716_p4 <= axis_frame_ctx_to_hdr_gen_dout(208 downto 201);
    p_Result_18_i_i_fu_726_p4 <= axis_frame_ctx_to_hdr_gen_dout(216 downto 209);
    p_Result_19_i_i_fu_736_p4 <= axis_frame_ctx_to_hdr_gen_dout(224 downto 217);
    p_Result_1_fu_812_p5 <= (p_Result_s_fu_600_p5(511 downto 448) & tmp_3_i_i_fu_776_p17 & p_Result_s_fu_600_p5(319 downto 0));
    p_Result_1_i_i_fu_532_p4 <= axis_frame_ctx_to_hdr_gen_dout(23 downto 16);
    p_Result_20_i_i_fu_746_p4 <= axis_frame_ctx_to_hdr_gen_dout(232 downto 225);
    p_Result_21_i_i_fu_756_p4 <= axis_frame_ctx_to_hdr_gen_dout(240 downto 233);
    p_Result_22_i_i_fu_766_p4 <= axis_frame_ctx_to_hdr_gen_dout(248 downto 241);
    p_Result_2_fu_1010_p2 <= (and_ln414_2_fu_1004_p2 or and_ln414_1_fu_998_p2);
    p_Result_2_i_i_fu_542_p4 <= axis_frame_ctx_to_hdr_gen_dout(31 downto 24);
    p_Result_31_i_i_fu_1236_p4 <= axis_frame_ctx_to_hdr_gen_dout(120 downto 113);
    p_Result_33_i_i_fu_1258_p4 <= axis_frame_ctx_to_hdr_gen_dout(112 downto 105);
    p_Result_36_i_i_fu_1292_p4 <= rdma_udp_port_dst(15 downto 8);
    p_Result_3_fu_1016_p5 <= (((p_Result_6_i_i_fu_616_p4 & p_Result_7_i_i_fu_626_p4) & p_Result_8_i_i_fu_636_p4) & p_Result_10_i_i_fu_646_p4);
    p_Result_3_i_i_fu_552_p4 <= axis_frame_ctx_to_hdr_gen_dout(39 downto 32);
    p_Result_41_i_i_fu_1898_p4 <= udp_len_V_3_fu_1892_p2(15 downto 8);
    p_Result_49_i_i_fu_2554_p4 <= ip_len_V_fu_2548_p2(15 downto 8);
    p_Result_4_fu_1154_p2 <= (and_ln414_5_fu_1148_p2 or and_ln414_4_fu_1142_p2);
    p_Result_4_i_i_fu_562_p4 <= axis_frame_ctx_to_hdr_gen_dout(47 downto 40);
    p_Result_51_i_i_fu_2584_p4 <= id(15 downto 8);
    p_Result_5_fu_1246_p5 <= (ap_const_lv16_0(15 downto 8) & p_Result_31_i_i_fu_1236_p4);
    p_Result_6_fu_1268_p5 <= (p_Result_33_i_i_fu_1258_p4 & p_Result_5_fu_1246_p5(7 downto 0));
    p_Result_6_i_i_fu_616_p4 <= axis_frame_ctx_to_hdr_gen_dout(128 downto 121);
    p_Result_7_fu_1280_p5 <= (din_data_V_17_fu_1228_p3(511 downto 176) & p_Result_6_fu_1268_p5 & din_data_V_17_fu_1228_p3(159 downto 0));
    p_Result_7_i_i_fu_626_p4 <= axis_frame_ctx_to_hdr_gen_dout(136 downto 129);
    p_Result_8_fu_1302_p5 <= (ap_const_lv16_0(15 downto 8) & p_Result_36_i_i_fu_1292_p4);
    p_Result_8_i_i_fu_636_p4 <= axis_frame_ctx_to_hdr_gen_dout(144 downto 137);
    p_Result_9_fu_1318_p5 <= (trunc_ln674_1_fu_1314_p1 & p_Result_8_fu_1302_p5(7 downto 0));
    p_Result_i_i_52_fu_522_p4 <= axis_frame_ctx_to_hdr_gen_dout(15 downto 8);
    p_Result_i_i_fu_492_p4 <= axis_frame_ctx_to_hdr_gen_dout(49 downto 48);
    p_Result_s_fu_600_p5 <= (tmp_data_V_1_fu_431_p1(511 downto 320) & tmp_2_i_i_fu_572_p13 & tmp_data_V_1_fu_431_p1(223 downto 0));

    packet_len_assign_proc : process(ap_done_reg, payload_remainder_full_n, tmp_i_i_reg_2667, ls_firstWord_1_load_reg_2671, tmp_1_i_i_reg_2675, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2, zext_ln208_fu_2651_p1, packet_len_preg)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or ((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))) and (tmp_1_i_i_reg_2675 = ap_const_lv1_1) and (ls_firstWord_1_load_reg_2671 = ap_const_lv1_1) and (tmp_i_i_reg_2667 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
            packet_len <= zext_ln208_fu_2651_p1;
        else 
            packet_len <= packet_len_preg;
        end if; 
    end process;


    packet_len_ap_vld_assign_proc : process(ap_done_reg, payload_remainder_full_n, tmp_i_i_reg_2667, ls_firstWord_1_load_reg_2671, tmp_1_i_i_reg_2675, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or ((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))) and (tmp_1_i_i_reg_2675 = ap_const_lv1_1) and (ls_firstWord_1_load_reg_2671 = ap_const_lv1_1) and (tmp_i_i_reg_2667 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
            packet_len_ap_vld <= ap_const_logic_1;
        else 
            packet_len_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    payload_rem_V_1_fu_502_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(p_Result_i_i_fu_492_p4));

    payload_remainder_blk_n_assign_proc : process(payload_remainder_full_n, ap_predicate_op203_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if (((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
            payload_remainder_blk_n <= payload_remainder_full_n;
        else 
            payload_remainder_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    payload_remainder_din <= payload_rem_V_1_reg_2684;

    payload_remainder_write_assign_proc : process(ap_done_reg, payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or ((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))) and (ap_predicate_op203_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
            payload_remainder_write <= ap_const_logic_1;
        else 
            payload_remainder_write <= ap_const_logic_0;
        end if; 
    end process;

    retval_0_i_i1_i_i_fu_1360_p257 <= axis_frame_ctx_to_hdr_gen_dout(71 downto 64);
    retval_0_i_i_i_i_fu_2016_p257 <= axis_frame_ctx_to_hdr_gen_dout(71 downto 64);
    select_ln155_fu_862_p3 <= 
        ap_const_lv32_1C0 when (or_ln41_1_fu_848_p2(0) = '1') else 
        ap_const_lv32_140;
    select_ln215_fu_876_p3 <= 
        ap_const_lv32_1DF when (or_ln41_1_fu_848_p2(0) = '1') else 
        ap_const_lv32_15F;
    select_ln414_1_fu_916_p3 <= 
        trunc_ln414_1_fu_898_p1 when (icmp_ln414_fu_888_p2(0) = '1') else 
        trunc_ln414_fu_894_p1;
    select_ln414_2_fu_924_p3 <= 
        xor_ln414_fu_902_p2 when (icmp_ln414_fu_888_p2(0) = '1') else 
        trunc_ln414_fu_894_p1;
    select_ln414_3_fu_966_p3 <= 
        tmp_3_fu_956_p4 when (icmp_ln414_fu_888_p2(0) = '1') else 
        shl_ln414_fu_950_p2;
    select_ln414_4_fu_1052_p3 <= 
        trunc_ln414_2_fu_1038_p1 when (icmp_ln414_1_fu_1032_p2(0) = '1') else 
        trunc_ln414_3_fu_1042_p1;
    select_ln414_5_fu_1060_p3 <= 
        trunc_ln414_3_fu_1042_p1 when (icmp_ln414_1_fu_1032_p2(0) = '1') else 
        trunc_ln414_2_fu_1038_p1;
    select_ln414_6_fu_1068_p3 <= 
        xor_ln414_3_fu_1046_p2 when (icmp_ln414_1_fu_1032_p2(0) = '1') else 
        trunc_ln414_2_fu_1038_p1;
    select_ln414_7_fu_1110_p3 <= 
        tmp_5_fu_1100_p4 when (icmp_ln414_1_fu_1032_p2(0) = '1') else 
        shl_ln414_2_fu_1094_p2;
    select_ln414_fu_908_p3 <= 
        trunc_ln414_fu_894_p1 when (icmp_ln414_fu_888_p2(0) = '1') else 
        trunc_ln414_1_fu_898_p1;
    shl_ln414_1_fu_974_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv512_lc_2),to_integer(unsigned('0' & zext_ln414_1_fu_942_p1(31-1 downto 0)))));
    shl_ln414_2_fu_1094_p2 <= std_logic_vector(shift_left(unsigned(zext_ln215_1_fu_1028_p1),to_integer(unsigned('0' & zext_ln414_3_fu_1082_p1(31-1 downto 0)))));
    shl_ln414_3_fu_1118_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv512_lc_2),to_integer(unsigned('0' & zext_ln414_4_fu_1086_p1(31-1 downto 0)))));
    shl_ln414_fu_950_p2 <= std_logic_vector(shift_left(unsigned(zext_ln215_fu_884_p1),to_integer(unsigned('0' & zext_ln414_fu_938_p1(31-1 downto 0)))));
    tmp_1_i_i_nbreadreq_fu_340_p3 <= (0=>(axis_frame_ctx_to_hdr_gen_empty_n), others=>'-');
    tmp_2_i_i_fu_572_p13 <= (((((((((((p_Result_2_i_i_fu_542_p4 & p_Result_3_i_i_fu_552_p4) & p_Result_4_i_i_fu_562_p4) & frame_ctx_explicit_ack_1_fu_464_p3) & ap_const_lv7_0) & trunc_ln674_fu_518_p1) & p_Result_i_i_52_fu_522_p4) & p_Result_1_i_i_fu_532_p4) & ap_const_lv26_3FFFC) & payload_rem_V_1_fu_502_p2) & ap_const_lv7_0) & trunc_ln_fu_508_p4);
    
    tmp_3_fu_956_p4_proc : process(shl_ln414_fu_950_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(512+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(512+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable tmp_3_fu_956_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(512 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(9 - 1 downto 0) := ap_const_lv32_1FF(9 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(9 - 1 downto 0) := ap_const_lv32_0(9 - 1 downto 0);
        v0_cpy := shl_ln414_fu_950_p2;
        if (vlo_cpy(9 - 1 downto 0) > vhi_cpy(9 - 1 downto 0)) then
            vhi_cpy(9-1 downto 0) := std_logic_vector(512-1-unsigned(ap_const_lv32_0(9-1 downto 0)));
            vlo_cpy(9-1 downto 0) := std_logic_vector(512-1-unsigned(ap_const_lv32_1FF(9-1 downto 0)));
            for tmp_3_fu_956_p4_i in 0 to 512-1 loop
                v0_cpy(tmp_3_fu_956_p4_i) := shl_ln414_fu_950_p2(512-1-tmp_3_fu_956_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(9-1 downto 0)))));

        section := (others=>'0');
        section(9-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(9-1 downto 0)) - unsigned(vlo_cpy(9-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(512-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_3_fu_956_p4 <= resvalue(512-1 downto 0);
    end process;

    tmp_3_i_i_fu_776_p17 <= (((((((((((((((p_Result_19_i_i_fu_736_p4 & p_Result_20_i_i_fu_746_p4) & p_Result_21_i_i_fu_756_p4) & p_Result_22_i_i_fu_766_p4) & p_Result_15_i_i_fu_696_p4) & p_Result_16_i_i_fu_706_p4) & p_Result_17_i_i_fu_716_p4) & p_Result_18_i_i_fu_726_p4) & p_Result_11_i_i_fu_656_p4) & p_Result_12_i_i_fu_666_p4) & p_Result_13_i_i_fu_676_p4) & p_Result_14_i_i_fu_686_p4) & p_Result_6_i_i_fu_616_p4) & p_Result_7_i_i_fu_626_p4) & p_Result_8_i_i_fu_636_p4) & p_Result_10_i_i_fu_646_p4);
    
    tmp_5_fu_1100_p4_proc : process(shl_ln414_2_fu_1094_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(512+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(512+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable tmp_5_fu_1100_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(512 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(9 - 1 downto 0) := ap_const_lv32_1FF(9 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(9 - 1 downto 0) := ap_const_lv32_0(9 - 1 downto 0);
        v0_cpy := shl_ln414_2_fu_1094_p2;
        if (vlo_cpy(9 - 1 downto 0) > vhi_cpy(9 - 1 downto 0)) then
            vhi_cpy(9-1 downto 0) := std_logic_vector(512-1-unsigned(ap_const_lv32_0(9-1 downto 0)));
            vlo_cpy(9-1 downto 0) := std_logic_vector(512-1-unsigned(ap_const_lv32_1FF(9-1 downto 0)));
            for tmp_5_fu_1100_p4_i in 0 to 512-1 loop
                v0_cpy(tmp_5_fu_1100_p4_i) := shl_ln414_2_fu_1094_p2(512-1-tmp_5_fu_1100_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(9-1 downto 0)))));

        section := (others=>'0');
        section(9-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(9-1 downto 0)) - unsigned(vlo_cpy(9-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(512-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_5_fu_1100_p4 <= resvalue(512-1 downto 0);
    end process;

    tmp_6_i_i_fu_2598_p8 <= ((((((frame_ctx_remote_ip_1_fu_472_p4 & my_ip) & ap_const_lv48_11400040) & trunc_ln674_4_fu_2594_p1) & p_Result_51_i_i_fu_2584_p4) & trunc_ln674_3_fu_2564_p1) & p_Result_49_i_i_fu_2554_p4);
    tmp_data_V_1_fu_431_p1 <= tx_to_hdr_gen_dout(512 - 1 downto 0);
    tmp_i_i_nbreadreq_fu_332_p3 <= (0=>(tx_to_hdr_gen_empty_n), others=>'-');
    tmp_immdt_V_fu_482_p4 <= axis_frame_ctx_to_hdr_gen_dout(280 downto 249);
    tmp_last_V_fu_435_p3 <= tx_to_hdr_gen_dout(576 downto 576);
    tmp_opcode_V_fu_454_p4 <= axis_frame_ctx_to_hdr_gen_dout(71 downto 64);
    tmp_payload_len_V_fu_444_p4 <= axis_frame_ctx_to_hdr_gen_dout(63 downto 48);
    trunc_ln414_1_fu_898_p1 <= select_ln215_fu_876_p3(10 - 1 downto 0);
    trunc_ln414_2_fu_1038_p1 <= select_ln155_fu_862_p3(10 - 1 downto 0);
    trunc_ln414_3_fu_1042_p1 <= select_ln215_fu_876_p3(10 - 1 downto 0);
    trunc_ln414_fu_894_p1 <= select_ln155_fu_862_p3(10 - 1 downto 0);
    trunc_ln674_1_fu_1314_p1 <= rdma_udp_port_dst(8 - 1 downto 0);
    trunc_ln674_2_fu_1920_p1 <= udp_len_V_3_fu_1892_p2(8 - 1 downto 0);
    trunc_ln674_3_fu_2564_p1 <= ip_len_V_fu_2548_p2(8 - 1 downto 0);
    trunc_ln674_4_fu_2594_p1 <= id(8 - 1 downto 0);
    trunc_ln674_fu_518_p1 <= axis_frame_ctx_to_hdr_gen_dout(8 - 1 downto 0);
    trunc_ln_fu_508_p4 <= axis_frame_ctx_to_hdr_gen_dout(68 downto 64);

    tx_to_crc_and_remainder_blk_n_assign_proc : process(tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op209_write_state2 = ap_const_boolean_1))) then 
            tx_to_crc_and_remainder_blk_n <= tx_to_crc_and_remainder_full_n;
        else 
            tx_to_crc_and_remainder_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tx_to_crc_and_remainder_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dout_fu_2655_p3),1024));

    tx_to_crc_and_remainder_write_assign_proc : process(ap_done_reg, payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or ((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op209_write_state2 = ap_const_boolean_1))) then 
            tx_to_crc_and_remainder_write <= ap_const_logic_1;
        else 
            tx_to_crc_and_remainder_write <= ap_const_logic_0;
        end if; 
    end process;


    tx_to_hdr_gen_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_iter0_fsm_state1, tx_to_hdr_gen_empty_n, ap_predicate_op42_read_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_predicate_op42_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            tx_to_hdr_gen_blk_n <= tx_to_hdr_gen_empty_n;
        else 
            tx_to_hdr_gen_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_to_hdr_gen_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_iter0_fsm_state1, ecn_for_ack_empty_n, tx_to_hdr_gen_empty_n, ap_predicate_op42_read_state1, axis_frame_ctx_to_hdr_gen_empty_n, ap_predicate_op46_read_state1, payload_remainder_full_n, ap_predicate_op203_write_state2, tx_to_crc_and_remainder_full_n, ap_predicate_op209_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ecn_for_ack_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op46_read_state1 = ap_const_boolean_1) and (axis_frame_ctx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_predicate_op42_read_state1 = ap_const_boolean_1) and (tx_to_hdr_gen_empty_n = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (((tx_to_crc_and_remainder_full_n = ap_const_logic_0) and (ap_predicate_op209_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op203_write_state2 = ap_const_boolean_1) and (payload_remainder_full_n = ap_const_logic_0)))))) and (ap_predicate_op42_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            tx_to_hdr_gen_read <= ap_const_logic_1;
        else 
            tx_to_hdr_gen_read <= ap_const_logic_0;
        end if; 
    end process;

    udp_len_V_3_fu_1892_p2 <= std_logic_vector(unsigned(zext_ln691_2_fu_1888_p1) + unsigned(udp_len_V_fu_1354_p2));
    udp_len_V_fu_1354_p2 <= std_logic_vector(unsigned(zext_ln691_fu_1350_p1) + unsigned(tmp_payload_len_V_fu_444_p4));
    xor_ln11_fu_1984_p2 <= (ecn_for_ack_dout xor ap_const_lv1_1);
    xor_ln414_1_fu_932_p2 <= (select_ln414_fu_908_p3 xor ap_const_lv10_1FF);
    xor_ln414_2_fu_992_p2 <= (ap_const_lv512_lc_2 xor and_ln414_fu_986_p2);
    xor_ln414_3_fu_1046_p2 <= (trunc_ln414_2_fu_1038_p1 xor ap_const_lv10_1FF);
    xor_ln414_4_fu_1076_p2 <= (select_ln414_4_fu_1052_p3 xor ap_const_lv10_1FF);
    xor_ln414_5_fu_1136_p2 <= (ap_const_lv512_lc_2 xor and_ln414_3_fu_1130_p2);
    xor_ln414_fu_902_p2 <= (trunc_ln414_fu_894_p1 xor ap_const_lv10_1FF);
    zext_ln208_fu_2651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ip_len_V_reg_2689),32));
    zext_ln215_1_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_3_fu_1016_p5),512));
    zext_ln215_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_immdt_V_fu_482_p4),512));
    zext_ln414_1_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_1_fu_916_p3),512));
    zext_ln414_2_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln414_1_fu_932_p2),512));
    zext_ln414_3_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_6_fu_1068_p3),512));
    zext_ln414_4_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_5_fu_1060_p3),512));
    zext_ln414_5_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln414_4_fu_1076_p2),512));
    zext_ln414_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_2_fu_924_p3),512));
    zext_ln41_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_opcode_V_fu_454_p4),9));
    zext_ln691_1_fu_1878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(retval_0_i_i1_i_i_fu_1360_p258),9));
    zext_ln691_2_fu_1888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_fu_1882_p2),16));
    zext_ln691_3_fu_2534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(retval_0_i_i_i_i_fu_2016_p258),9));
    zext_ln691_4_fu_2544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_2_fu_2538_p2),16));
    zext_ln691_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_1342_p3),16));
end behav;
