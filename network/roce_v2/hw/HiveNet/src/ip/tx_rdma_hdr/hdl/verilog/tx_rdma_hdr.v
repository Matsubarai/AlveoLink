// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="tx_rdma_hdr_tx_rdma_hdr,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.387750,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=8706,HLS_SYN_LUT=70772,HLS_VERSION=2020_2}" *)

module tx_rdma_hdr (
        axis_frame_ctx_tx_V_TDATA,
        axis_frame_ctx_rx_V_TDATA,
        tx_in_TDATA,
        tx_in_TKEEP,
        tx_in_TSTRB,
        tx_in_TLAST,
        tx_in_TDEST,
        tx_out_TDATA,
        tx_out_TKEEP,
        tx_out_TSTRB,
        tx_out_TLAST,
        tx_out_TDEST,
        rdma_udp_port_dst,
        my_ip,
        offst,
        packet_len,
        ecn_for_ack,
        ap_clk,
        ap_rst_n,
        axis_frame_ctx_tx_V_TVALID,
        axis_frame_ctx_tx_V_TREADY,
        axis_frame_ctx_rx_V_TVALID,
        axis_frame_ctx_rx_V_TREADY,
        offst_ap_vld,
        tx_in_TVALID,
        tx_in_TREADY,
        packet_len_ap_vld,
        tx_out_TVALID,
        tx_out_TREADY
);


input  [319:0] axis_frame_ctx_tx_V_TDATA;
input  [319:0] axis_frame_ctx_rx_V_TDATA;
input  [511:0] tx_in_TDATA;
input  [63:0] tx_in_TKEEP;
input  [63:0] tx_in_TSTRB;
input  [0:0] tx_in_TLAST;
input  [0:0] tx_in_TDEST;
output  [511:0] tx_out_TDATA;
output  [63:0] tx_out_TKEEP;
output  [63:0] tx_out_TSTRB;
output  [0:0] tx_out_TLAST;
output  [0:0] tx_out_TDEST;
input  [15:0] rdma_udp_port_dst;
input  [31:0] my_ip;
output  [31:0] offst;
output  [31:0] packet_len;
input  [0:0] ecn_for_ack;
input   ap_clk;
input   ap_rst_n;
input   axis_frame_ctx_tx_V_TVALID;
output   axis_frame_ctx_tx_V_TREADY;
input   axis_frame_ctx_rx_V_TVALID;
output   axis_frame_ctx_rx_V_TREADY;
output   offst_ap_vld;
input   tx_in_TVALID;
output   tx_in_TREADY;
output   packet_len_ap_vld;
output   tx_out_TVALID;
input   tx_out_TREADY;

 reg    ap_rst_n_inv;
wire    tx_rdma_hdr_entry3_U0_ap_start;
wire    tx_rdma_hdr_entry3_U0_ap_done;
wire    tx_rdma_hdr_entry3_U0_ap_continue;
wire    tx_rdma_hdr_entry3_U0_ap_idle;
wire    tx_rdma_hdr_entry3_U0_ap_ready;
wire   [0:0] tx_rdma_hdr_entry3_U0_ecn_for_ack_out_din;
wire    tx_rdma_hdr_entry3_U0_ecn_for_ack_out_write;
wire    lshiftWordByOctet_512_0_4_U0_ap_start;
wire    lshiftWordByOctet_512_0_4_U0_ap_done;
wire    lshiftWordByOctet_512_0_4_U0_ap_continue;
wire    lshiftWordByOctet_512_0_4_U0_ap_idle;
wire    lshiftWordByOctet_512_0_4_U0_ap_ready;
wire    lshiftWordByOctet_512_0_4_U0_ecn_for_ack_read;
wire   [0:0] lshiftWordByOctet_512_0_4_U0_ecn_for_ack_out_din;
wire    lshiftWordByOctet_512_0_4_U0_ecn_for_ack_out_write;
wire   [1023:0] lshiftWordByOctet_512_0_4_U0_tx_to_hdr_gen_din;
wire    lshiftWordByOctet_512_0_4_U0_tx_to_hdr_gen_write;
wire   [280:0] lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_to_hdr_gen_din;
wire    lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_to_hdr_gen_write;
wire    lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_tx_V_TREADY;
wire    lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_rx_V_TREADY;
wire   [31:0] lshiftWordByOctet_512_0_4_U0_offst;
wire    lshiftWordByOctet_512_0_4_U0_offst_ap_vld;
wire    lshiftWordByOctet_512_0_4_U0_tx_in_TREADY;
wire    ap_sync_continue;
wire    put_hdr_U0_ap_start;
wire    put_hdr_U0_ap_done;
wire    put_hdr_U0_ap_continue;
wire    put_hdr_U0_ap_idle;
wire    put_hdr_U0_ap_ready;
wire    put_hdr_U0_ecn_for_ack_read;
wire    put_hdr_U0_tx_to_hdr_gen_read;
wire    put_hdr_U0_axis_frame_ctx_to_hdr_gen_read;
wire   [1:0] put_hdr_U0_payload_remainder_din;
wire    put_hdr_U0_payload_remainder_write;
wire   [1023:0] put_hdr_U0_tx_to_crc_and_remainder_din;
wire    put_hdr_U0_tx_to_crc_and_remainder_write;
wire   [31:0] put_hdr_U0_packet_len;
wire    put_hdr_U0_packet_len_ap_vld;
wire    calc_ip_crc_and_reserve_place_for_icrc_U0_ap_start;
wire    calc_ip_crc_and_reserve_place_for_icrc_U0_ap_done;
wire    calc_ip_crc_and_reserve_place_for_icrc_U0_ap_continue;
wire    calc_ip_crc_and_reserve_place_for_icrc_U0_ap_idle;
wire    calc_ip_crc_and_reserve_place_for_icrc_U0_ap_ready;
wire    calc_ip_crc_and_reserve_place_for_icrc_U0_tx_to_crc_and_remainder_read;
wire    calc_ip_crc_and_reserve_place_for_icrc_U0_payload_remainder_read;
wire   [511:0] calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TDATA;
wire    calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TVALID;
wire   [63:0] calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TKEEP;
wire   [63:0] calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TSTRB;
wire   [0:0] calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TLAST;
wire   [0:0] calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TDEST;
wire    ecn_for_ack_c1_full_n;
wire   [0:0] ecn_for_ack_c1_dout;
wire    ecn_for_ack_c1_empty_n;
wire    ecn_for_ack_c_full_n;
wire   [0:0] ecn_for_ack_c_dout;
wire    ecn_for_ack_c_empty_n;
wire    axis_frame_ctx_to_hdr_gen_full_n;
wire   [280:0] axis_frame_ctx_to_hdr_gen_dout;
wire    axis_frame_ctx_to_hdr_gen_empty_n;
wire    tx_to_hdr_gen_full_n;
wire   [1023:0] tx_to_hdr_gen_dout;
wire    tx_to_hdr_gen_empty_n;
wire    payload_remainder_full_n;
wire   [1:0] payload_remainder_dout;
wire    payload_remainder_empty_n;
wire    tx_to_crc_and_remainder_full_n;
wire   [1023:0] tx_to_crc_and_remainder_dout;
wire    tx_to_crc_and_remainder_empty_n;

tx_rdma_hdr_tx_rdma_hdr_entry3 tx_rdma_hdr_entry3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(tx_rdma_hdr_entry3_U0_ap_start),
    .ap_done(tx_rdma_hdr_entry3_U0_ap_done),
    .ap_continue(tx_rdma_hdr_entry3_U0_ap_continue),
    .ap_idle(tx_rdma_hdr_entry3_U0_ap_idle),
    .ap_ready(tx_rdma_hdr_entry3_U0_ap_ready),
    .ecn_for_ack(ecn_for_ack),
    .ecn_for_ack_out_din(tx_rdma_hdr_entry3_U0_ecn_for_ack_out_din),
    .ecn_for_ack_out_full_n(ecn_for_ack_c1_full_n),
    .ecn_for_ack_out_write(tx_rdma_hdr_entry3_U0_ecn_for_ack_out_write)
);

tx_rdma_hdr_lshiftWordByOctet_512_0_4 lshiftWordByOctet_512_0_4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(lshiftWordByOctet_512_0_4_U0_ap_start),
    .ap_done(lshiftWordByOctet_512_0_4_U0_ap_done),
    .ap_continue(lshiftWordByOctet_512_0_4_U0_ap_continue),
    .ap_idle(lshiftWordByOctet_512_0_4_U0_ap_idle),
    .ap_ready(lshiftWordByOctet_512_0_4_U0_ap_ready),
    .ecn_for_ack_dout(ecn_for_ack_c1_dout),
    .ecn_for_ack_empty_n(ecn_for_ack_c1_empty_n),
    .ecn_for_ack_read(lshiftWordByOctet_512_0_4_U0_ecn_for_ack_read),
    .ecn_for_ack_out_din(lshiftWordByOctet_512_0_4_U0_ecn_for_ack_out_din),
    .ecn_for_ack_out_full_n(ecn_for_ack_c_full_n),
    .ecn_for_ack_out_write(lshiftWordByOctet_512_0_4_U0_ecn_for_ack_out_write),
    .tx_in_TVALID(tx_in_TVALID),
    .axis_frame_ctx_tx_V_TVALID(axis_frame_ctx_tx_V_TVALID),
    .axis_frame_ctx_rx_V_TVALID(axis_frame_ctx_rx_V_TVALID),
    .tx_to_hdr_gen_din(lshiftWordByOctet_512_0_4_U0_tx_to_hdr_gen_din),
    .tx_to_hdr_gen_full_n(tx_to_hdr_gen_full_n),
    .tx_to_hdr_gen_write(lshiftWordByOctet_512_0_4_U0_tx_to_hdr_gen_write),
    .axis_frame_ctx_to_hdr_gen_din(lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_to_hdr_gen_din),
    .axis_frame_ctx_to_hdr_gen_full_n(axis_frame_ctx_to_hdr_gen_full_n),
    .axis_frame_ctx_to_hdr_gen_write(lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_to_hdr_gen_write),
    .axis_frame_ctx_tx_V_TDATA(axis_frame_ctx_tx_V_TDATA),
    .axis_frame_ctx_tx_V_TREADY(lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_tx_V_TREADY),
    .axis_frame_ctx_rx_V_TDATA(axis_frame_ctx_rx_V_TDATA),
    .axis_frame_ctx_rx_V_TREADY(lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_rx_V_TREADY),
    .offst(lshiftWordByOctet_512_0_4_U0_offst),
    .offst_ap_vld(lshiftWordByOctet_512_0_4_U0_offst_ap_vld),
    .tx_in_TDATA(tx_in_TDATA),
    .tx_in_TREADY(lshiftWordByOctet_512_0_4_U0_tx_in_TREADY),
    .tx_in_TKEEP(tx_in_TKEEP),
    .tx_in_TSTRB(tx_in_TSTRB),
    .tx_in_TLAST(tx_in_TLAST),
    .tx_in_TDEST(tx_in_TDEST)
);

tx_rdma_hdr_put_hdr put_hdr_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(put_hdr_U0_ap_start),
    .ap_done(put_hdr_U0_ap_done),
    .ap_continue(put_hdr_U0_ap_continue),
    .ap_idle(put_hdr_U0_ap_idle),
    .ap_ready(put_hdr_U0_ap_ready),
    .ecn_for_ack_dout(ecn_for_ack_c_dout),
    .ecn_for_ack_empty_n(ecn_for_ack_c_empty_n),
    .ecn_for_ack_read(put_hdr_U0_ecn_for_ack_read),
    .tx_to_hdr_gen_dout(tx_to_hdr_gen_dout),
    .tx_to_hdr_gen_empty_n(tx_to_hdr_gen_empty_n),
    .tx_to_hdr_gen_read(put_hdr_U0_tx_to_hdr_gen_read),
    .axis_frame_ctx_to_hdr_gen_dout(axis_frame_ctx_to_hdr_gen_dout),
    .axis_frame_ctx_to_hdr_gen_empty_n(axis_frame_ctx_to_hdr_gen_empty_n),
    .axis_frame_ctx_to_hdr_gen_read(put_hdr_U0_axis_frame_ctx_to_hdr_gen_read),
    .payload_remainder_din(put_hdr_U0_payload_remainder_din),
    .payload_remainder_full_n(payload_remainder_full_n),
    .payload_remainder_write(put_hdr_U0_payload_remainder_write),
    .tx_to_crc_and_remainder_din(put_hdr_U0_tx_to_crc_and_remainder_din),
    .tx_to_crc_and_remainder_full_n(tx_to_crc_and_remainder_full_n),
    .tx_to_crc_and_remainder_write(put_hdr_U0_tx_to_crc_and_remainder_write),
    .packet_len(put_hdr_U0_packet_len),
    .packet_len_ap_vld(put_hdr_U0_packet_len_ap_vld),
    .rdma_udp_port_dst(rdma_udp_port_dst),
    .my_ip(my_ip)
);

tx_rdma_hdr_calc_ip_crc_and_reserve_place_for_icrc calc_ip_crc_and_reserve_place_for_icrc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(calc_ip_crc_and_reserve_place_for_icrc_U0_ap_start),
    .ap_done(calc_ip_crc_and_reserve_place_for_icrc_U0_ap_done),
    .ap_continue(calc_ip_crc_and_reserve_place_for_icrc_U0_ap_continue),
    .ap_idle(calc_ip_crc_and_reserve_place_for_icrc_U0_ap_idle),
    .ap_ready(calc_ip_crc_and_reserve_place_for_icrc_U0_ap_ready),
    .tx_to_crc_and_remainder_dout(tx_to_crc_and_remainder_dout),
    .tx_to_crc_and_remainder_empty_n(tx_to_crc_and_remainder_empty_n),
    .tx_to_crc_and_remainder_read(calc_ip_crc_and_reserve_place_for_icrc_U0_tx_to_crc_and_remainder_read),
    .payload_remainder_dout(payload_remainder_dout),
    .payload_remainder_empty_n(payload_remainder_empty_n),
    .payload_remainder_read(calc_ip_crc_and_reserve_place_for_icrc_U0_payload_remainder_read),
    .tx_out_TREADY(tx_out_TREADY),
    .tx_out_TDATA(calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TDATA),
    .tx_out_TVALID(calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TVALID),
    .tx_out_TKEEP(calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TKEEP),
    .tx_out_TSTRB(calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TSTRB),
    .tx_out_TLAST(calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TLAST),
    .tx_out_TDEST(calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TDEST)
);

tx_rdma_hdr_fifo_w1_d2_S ecn_for_ack_c1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tx_rdma_hdr_entry3_U0_ecn_for_ack_out_din),
    .if_full_n(ecn_for_ack_c1_full_n),
    .if_write(tx_rdma_hdr_entry3_U0_ecn_for_ack_out_write),
    .if_dout(ecn_for_ack_c1_dout),
    .if_empty_n(ecn_for_ack_c1_empty_n),
    .if_read(lshiftWordByOctet_512_0_4_U0_ecn_for_ack_read)
);

tx_rdma_hdr_fifo_w1_d2_S ecn_for_ack_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(lshiftWordByOctet_512_0_4_U0_ecn_for_ack_out_din),
    .if_full_n(ecn_for_ack_c_full_n),
    .if_write(lshiftWordByOctet_512_0_4_U0_ecn_for_ack_out_write),
    .if_dout(ecn_for_ack_c_dout),
    .if_empty_n(ecn_for_ack_c_empty_n),
    .if_read(put_hdr_U0_ecn_for_ack_read)
);

tx_rdma_hdr_fifo_w281_d2_S axis_frame_ctx_to_hdr_gen_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_to_hdr_gen_din),
    .if_full_n(axis_frame_ctx_to_hdr_gen_full_n),
    .if_write(lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_to_hdr_gen_write),
    .if_dout(axis_frame_ctx_to_hdr_gen_dout),
    .if_empty_n(axis_frame_ctx_to_hdr_gen_empty_n),
    .if_read(put_hdr_U0_axis_frame_ctx_to_hdr_gen_read)
);

tx_rdma_hdr_fifo_w1024_d2_S tx_to_hdr_gen_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(lshiftWordByOctet_512_0_4_U0_tx_to_hdr_gen_din),
    .if_full_n(tx_to_hdr_gen_full_n),
    .if_write(lshiftWordByOctet_512_0_4_U0_tx_to_hdr_gen_write),
    .if_dout(tx_to_hdr_gen_dout),
    .if_empty_n(tx_to_hdr_gen_empty_n),
    .if_read(put_hdr_U0_tx_to_hdr_gen_read)
);

tx_rdma_hdr_fifo_w2_d2_S payload_remainder_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(put_hdr_U0_payload_remainder_din),
    .if_full_n(payload_remainder_full_n),
    .if_write(put_hdr_U0_payload_remainder_write),
    .if_dout(payload_remainder_dout),
    .if_empty_n(payload_remainder_empty_n),
    .if_read(calc_ip_crc_and_reserve_place_for_icrc_U0_payload_remainder_read)
);

tx_rdma_hdr_fifo_w1024_d2_S tx_to_crc_and_remainder_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(put_hdr_U0_tx_to_crc_and_remainder_din),
    .if_full_n(tx_to_crc_and_remainder_full_n),
    .if_write(put_hdr_U0_tx_to_crc_and_remainder_write),
    .if_dout(tx_to_crc_and_remainder_dout),
    .if_empty_n(tx_to_crc_and_remainder_empty_n),
    .if_read(calc_ip_crc_and_reserve_place_for_icrc_U0_tx_to_crc_and_remainder_read)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign axis_frame_ctx_rx_V_TREADY = lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_rx_V_TREADY;

assign axis_frame_ctx_tx_V_TREADY = lshiftWordByOctet_512_0_4_U0_axis_frame_ctx_tx_V_TREADY;

assign calc_ip_crc_and_reserve_place_for_icrc_U0_ap_continue = 1'b1;

assign calc_ip_crc_and_reserve_place_for_icrc_U0_ap_start = 1'b1;

assign lshiftWordByOctet_512_0_4_U0_ap_continue = 1'b1;

assign lshiftWordByOctet_512_0_4_U0_ap_start = 1'b1;

assign offst = lshiftWordByOctet_512_0_4_U0_offst;

assign offst_ap_vld = lshiftWordByOctet_512_0_4_U0_offst_ap_vld;

assign packet_len = put_hdr_U0_packet_len;

assign packet_len_ap_vld = put_hdr_U0_packet_len_ap_vld;

assign put_hdr_U0_ap_continue = 1'b1;

assign put_hdr_U0_ap_start = 1'b1;

assign tx_in_TREADY = lshiftWordByOctet_512_0_4_U0_tx_in_TREADY;

assign tx_out_TDATA = calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TDATA;

assign tx_out_TDEST = calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TDEST;

assign tx_out_TKEEP = calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TKEEP;

assign tx_out_TLAST = calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TLAST;

assign tx_out_TSTRB = calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TSTRB;

assign tx_out_TVALID = calc_ip_crc_and_reserve_place_for_icrc_U0_tx_out_TVALID;

assign tx_rdma_hdr_entry3_U0_ap_continue = 1'b1;

assign tx_rdma_hdr_entry3_U0_ap_start = 1'b1;


// synthesis translate_off
`include "tx_rdma_hdr_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //tx_rdma_hdr

