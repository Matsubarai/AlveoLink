// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ethHeader_forICMP_ethHeader_forICMP,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.063000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1418,HLS_SYN_LUT=228,HLS_VERSION=2022_1}" *)

module ethHeader_forICMP (
        ap_clk,
        ap_rst_n,
        p_in_TDATA,
        p_in_TVALID,
        p_in_TREADY,
        p_in_TKEEP,
        p_in_TSTRB,
        p_in_TLAST,
        hivenet_out_TDATA,
        hivenet_out_TVALID,
        hivenet_out_TREADY,
        hivenet_out_TKEEP,
        hivenet_out_TSTRB,
        hivenet_out_TLAST,
        icmp_out_TDATA,
        icmp_out_TVALID,
        icmp_out_TREADY,
        icmp_out_TKEEP,
        icmp_out_TSTRB,
        icmp_out_TLAST,
        icpm_dmac
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [511:0] p_in_TDATA;
input   p_in_TVALID;
output   p_in_TREADY;
input  [63:0] p_in_TKEEP;
input  [63:0] p_in_TSTRB;
input  [0:0] p_in_TLAST;
output  [511:0] hivenet_out_TDATA;
output   hivenet_out_TVALID;
input   hivenet_out_TREADY;
output  [63:0] hivenet_out_TKEEP;
output  [63:0] hivenet_out_TSTRB;
output  [0:0] hivenet_out_TLAST;
output  [511:0] icmp_out_TDATA;
output   icmp_out_TVALID;
input   icmp_out_TREADY;
output  [63:0] icmp_out_TKEEP;
output  [63:0] icmp_out_TSTRB;
output  [0:0] icmp_out_TLAST;
input  [47:0] icpm_dmac;

 reg    ap_rst_n_inv;
reg   [0:0] isFirst_V;
reg   [0:0] isHivenet_V;
reg    hivenet_out_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] p_vld_reg_260;
reg   [0:0] p_vld_reg_260_pp0_iter1_reg;
reg   [0:0] isHivenet_V_load_reg_305;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] p_vld_reg_260_pp0_iter2_reg;
reg   [0:0] isHivenet_V_load_reg_305_pp0_iter2_reg;
reg    icmp_out_TDATA_blk_n;
reg   [511:0] temp_out_data_V_reg_150;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_predicate_op55_write_state3;
reg    ap_predicate_op56_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_predicate_op57_write_state4;
reg    ap_predicate_op59_write_state4;
wire    regslice_both_hivenet_out_V_data_V_U_apdone_blk;
wire    regslice_both_icmp_out_V_data_V_U_apdone_blk;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] p_vld_fu_164_p1;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg   [63:0] tmp_keep_V_reg_270;
reg   [63:0] tmp_keep_V_reg_270_pp0_iter1_reg;
reg   [63:0] tmp_strb_V_reg_276;
reg   [63:0] tmp_strb_V_reg_276_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_282;
reg   [0:0] tmp_last_V_reg_282_pp0_iter1_reg;
wire   [511:0] p_Result_s_fu_226_p5;
wire   [0:0] isFirst_V_load_load_fu_184_p1;
wire   [0:0] icmp_ln1065_fu_198_p2;
wire   [0:0] icmp_ln1065_1_fu_214_p2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_isFirst_V_flag_0_phi_fu_139_p6;
wire   [0:0] ap_phi_reg_pp0_iter0_isFirst_V_flag_0_reg_136;
wire   [511:0] ap_phi_reg_pp0_iter0_temp_out_data_V_reg_150;
reg   [511:0] ap_phi_reg_pp0_iter1_temp_out_data_V_reg_150;
wire   [0:0] or_ln28_fu_244_p2;
wire   [0:0] empty_nbread_fu_92_p5_0;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] tmp_fu_188_p4;
wire   [7:0] tmp_s_fu_204_p4;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_p_in_V_data_V_U_apdone_blk;
wire   [511:0] p_in_TDATA_int_regslice;
wire    p_in_TVALID_int_regslice;
reg    p_in_TREADY_int_regslice;
wire    regslice_both_p_in_V_data_V_U_ack_in;
wire    regslice_both_p_in_V_keep_V_U_apdone_blk;
wire   [63:0] p_in_TKEEP_int_regslice;
wire    regslice_both_p_in_V_keep_V_U_vld_out;
wire    regslice_both_p_in_V_keep_V_U_ack_in;
wire    regslice_both_p_in_V_strb_V_U_apdone_blk;
wire   [63:0] p_in_TSTRB_int_regslice;
wire    regslice_both_p_in_V_strb_V_U_vld_out;
wire    regslice_both_p_in_V_strb_V_U_ack_in;
wire    regslice_both_p_in_V_last_V_U_apdone_blk;
wire   [0:0] p_in_TLAST_int_regslice;
wire    regslice_both_p_in_V_last_V_U_vld_out;
wire    regslice_both_p_in_V_last_V_U_ack_in;
reg    hivenet_out_TVALID_int_regslice;
wire    hivenet_out_TREADY_int_regslice;
wire    regslice_both_hivenet_out_V_data_V_U_vld_out;
wire    regslice_both_hivenet_out_V_keep_V_U_apdone_blk;
wire    regslice_both_hivenet_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_hivenet_out_V_keep_V_U_vld_out;
wire    regslice_both_hivenet_out_V_strb_V_U_apdone_blk;
wire    regslice_both_hivenet_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_hivenet_out_V_strb_V_U_vld_out;
wire    regslice_both_hivenet_out_V_last_V_U_apdone_blk;
wire    regslice_both_hivenet_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_hivenet_out_V_last_V_U_vld_out;
reg    icmp_out_TVALID_int_regslice;
wire    icmp_out_TREADY_int_regslice;
wire    regslice_both_icmp_out_V_data_V_U_vld_out;
wire    regslice_both_icmp_out_V_keep_V_U_apdone_blk;
wire    regslice_both_icmp_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_icmp_out_V_keep_V_U_vld_out;
wire    regslice_both_icmp_out_V_strb_V_U_apdone_blk;
wire    regslice_both_icmp_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_icmp_out_V_strb_V_U_vld_out;
wire    regslice_both_icmp_out_V_last_V_U_apdone_blk;
wire    regslice_both_icmp_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_icmp_out_V_last_V_U_vld_out;
reg    ap_condition_169;
reg    ap_condition_147;
reg    ap_condition_163;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 isFirst_V = 1'd1;
#0 isHivenet_V = 1'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

ethHeader_forICMP_regslice_both #(
    .DataWidth( 512 ))
regslice_both_p_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_in_TDATA),
    .vld_in(p_in_TVALID),
    .ack_in(regslice_both_p_in_V_data_V_U_ack_in),
    .data_out(p_in_TDATA_int_regslice),
    .vld_out(p_in_TVALID_int_regslice),
    .ack_out(p_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_p_in_V_data_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 64 ))
regslice_both_p_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_in_TKEEP),
    .vld_in(p_in_TVALID),
    .ack_in(regslice_both_p_in_V_keep_V_U_ack_in),
    .data_out(p_in_TKEEP_int_regslice),
    .vld_out(regslice_both_p_in_V_keep_V_U_vld_out),
    .ack_out(p_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_p_in_V_keep_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 64 ))
regslice_both_p_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_in_TSTRB),
    .vld_in(p_in_TVALID),
    .ack_in(regslice_both_p_in_V_strb_V_U_ack_in),
    .data_out(p_in_TSTRB_int_regslice),
    .vld_out(regslice_both_p_in_V_strb_V_U_vld_out),
    .ack_out(p_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_p_in_V_strb_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 1 ))
regslice_both_p_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_in_TLAST),
    .vld_in(p_in_TVALID),
    .ack_in(regslice_both_p_in_V_last_V_U_ack_in),
    .data_out(p_in_TLAST_int_regslice),
    .vld_out(regslice_both_p_in_V_last_V_U_vld_out),
    .ack_out(p_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_p_in_V_last_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 512 ))
regslice_both_hivenet_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(temp_out_data_V_reg_150),
    .vld_in(hivenet_out_TVALID_int_regslice),
    .ack_in(hivenet_out_TREADY_int_regslice),
    .data_out(hivenet_out_TDATA),
    .vld_out(regslice_both_hivenet_out_V_data_V_U_vld_out),
    .ack_out(hivenet_out_TREADY),
    .apdone_blk(regslice_both_hivenet_out_V_data_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 64 ))
regslice_both_hivenet_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_keep_V_reg_270_pp0_iter1_reg),
    .vld_in(hivenet_out_TVALID_int_regslice),
    .ack_in(regslice_both_hivenet_out_V_keep_V_U_ack_in_dummy),
    .data_out(hivenet_out_TKEEP),
    .vld_out(regslice_both_hivenet_out_V_keep_V_U_vld_out),
    .ack_out(hivenet_out_TREADY),
    .apdone_blk(regslice_both_hivenet_out_V_keep_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 64 ))
regslice_both_hivenet_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_strb_V_reg_276_pp0_iter1_reg),
    .vld_in(hivenet_out_TVALID_int_regslice),
    .ack_in(regslice_both_hivenet_out_V_strb_V_U_ack_in_dummy),
    .data_out(hivenet_out_TSTRB),
    .vld_out(regslice_both_hivenet_out_V_strb_V_U_vld_out),
    .ack_out(hivenet_out_TREADY),
    .apdone_blk(regslice_both_hivenet_out_V_strb_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 1 ))
regslice_both_hivenet_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_reg_282_pp0_iter1_reg),
    .vld_in(hivenet_out_TVALID_int_regslice),
    .ack_in(regslice_both_hivenet_out_V_last_V_U_ack_in_dummy),
    .data_out(hivenet_out_TLAST),
    .vld_out(regslice_both_hivenet_out_V_last_V_U_vld_out),
    .ack_out(hivenet_out_TREADY),
    .apdone_blk(regslice_both_hivenet_out_V_last_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 512 ))
regslice_both_icmp_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(temp_out_data_V_reg_150),
    .vld_in(icmp_out_TVALID_int_regslice),
    .ack_in(icmp_out_TREADY_int_regslice),
    .data_out(icmp_out_TDATA),
    .vld_out(regslice_both_icmp_out_V_data_V_U_vld_out),
    .ack_out(icmp_out_TREADY),
    .apdone_blk(regslice_both_icmp_out_V_data_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 64 ))
regslice_both_icmp_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_keep_V_reg_270_pp0_iter1_reg),
    .vld_in(icmp_out_TVALID_int_regslice),
    .ack_in(regslice_both_icmp_out_V_keep_V_U_ack_in_dummy),
    .data_out(icmp_out_TKEEP),
    .vld_out(regslice_both_icmp_out_V_keep_V_U_vld_out),
    .ack_out(icmp_out_TREADY),
    .apdone_blk(regslice_both_icmp_out_V_keep_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 64 ))
regslice_both_icmp_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_strb_V_reg_276_pp0_iter1_reg),
    .vld_in(icmp_out_TVALID_int_regslice),
    .ack_in(regslice_both_icmp_out_V_strb_V_U_ack_in_dummy),
    .data_out(icmp_out_TSTRB),
    .vld_out(regslice_both_icmp_out_V_strb_V_U_vld_out),
    .ack_out(icmp_out_TREADY),
    .apdone_blk(regslice_both_icmp_out_V_strb_V_U_apdone_blk)
);

ethHeader_forICMP_regslice_both #(
    .DataWidth( 1 ))
regslice_both_icmp_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_reg_282_pp0_iter1_reg),
    .vld_in(icmp_out_TVALID_int_regslice),
    .ack_in(regslice_both_icmp_out_V_last_V_U_ack_in_dummy),
    .data_out(icmp_out_TLAST),
    .vld_out(regslice_both_icmp_out_V_last_V_U_vld_out),
    .ack_out(icmp_out_TREADY),
    .apdone_blk(regslice_both_icmp_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == 1'b1) & (isFirst_V_load_load_fu_184_p1 == 1'd0) & (p_vld_fu_164_p1 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == 1'b1) & (((icmp_ln1065_fu_198_p2 == 1'd0) & (isFirst_V_load_load_fu_184_p1 == 1'd1) & (p_vld_fu_164_p1 == 1'd1)) | ((icmp_ln1065_1_fu_214_p2 == 1'd0) & (isFirst_V_load_load_fu_184_p1 == 1'd1) & (p_vld_fu_164_p1 == 1'd1)))))) begin
        ap_phi_reg_pp0_iter1_temp_out_data_V_reg_150 <= p_in_TDATA_int_regslice;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == 1'b1) & (icmp_ln1065_1_fu_214_p2 == 1'd1) & (icmp_ln1065_fu_198_p2 == 1'd1) & (isFirst_V_load_load_fu_184_p1 == 1'd1) & (p_vld_fu_164_p1 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_temp_out_data_V_reg_150 <= p_Result_s_fu_226_p5;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_temp_out_data_V_reg_150 <= ap_phi_reg_pp0_iter0_temp_out_data_V_reg_150;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_163)) begin
        if ((1'b1 == ap_condition_147)) begin
            isHivenet_V <= 1'd0;
        end else if ((1'b1 == ap_condition_169)) begin
            isHivenet_V <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln28_fu_244_p2 == 1'd1) & (1'b1 == 1'b1) & (p_vld_fu_164_p1 == 1'd1))) begin
        isFirst_V <= p_in_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((p_vld_reg_260 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        isHivenet_V_load_reg_305 <= isHivenet_V;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        isHivenet_V_load_reg_305_pp0_iter2_reg <= isHivenet_V_load_reg_305;
        p_vld_reg_260_pp0_iter2_reg <= p_vld_reg_260_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_vld_reg_260 <= empty_nbread_fu_92_p5_0;
        p_vld_reg_260_pp0_iter1_reg <= p_vld_reg_260;
        tmp_keep_V_reg_270 <= p_in_TKEEP_int_regslice;
        tmp_keep_V_reg_270_pp0_iter1_reg <= tmp_keep_V_reg_270;
        tmp_last_V_reg_282 <= p_in_TLAST_int_regslice;
        tmp_last_V_reg_282_pp0_iter1_reg <= tmp_last_V_reg_282;
        tmp_strb_V_reg_276 <= p_in_TSTRB_int_regslice;
        tmp_strb_V_reg_276_pp0_iter1_reg <= tmp_strb_V_reg_276;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        temp_out_data_V_reg_150 <= ap_phi_reg_pp0_iter1_temp_out_data_V_reg_150;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((isFirst_V_load_load_fu_184_p1 == 1'd0) & (p_vld_fu_164_p1 == 1'd1))) begin
        ap_phi_mux_isFirst_V_flag_0_phi_fu_139_p6 = 1'd0;
    end else if ((((icmp_ln1065_fu_198_p2 == 1'd0) & (isFirst_V_load_load_fu_184_p1 == 1'd1) & (p_vld_fu_164_p1 == 1'd1)) | ((icmp_ln1065_1_fu_214_p2 == 1'd0) & (isFirst_V_load_load_fu_184_p1 == 1'd1) & (p_vld_fu_164_p1 == 1'd1)) | ((icmp_ln1065_1_fu_214_p2 == 1'd1) & (icmp_ln1065_fu_198_p2 == 1'd1) & (isFirst_V_load_load_fu_184_p1 == 1'd1) & (p_vld_fu_164_p1 == 1'd1)))) begin
        ap_phi_mux_isFirst_V_flag_0_phi_fu_139_p6 = 1'd1;
    end else begin
        ap_phi_mux_isFirst_V_flag_0_phi_fu_139_p6 = ap_phi_reg_pp0_iter0_isFirst_V_flag_0_reg_136;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if ((((isHivenet_V_load_reg_305_pp0_iter2_reg == 1'd1) & (p_vld_reg_260_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((isHivenet_V_load_reg_305 == 1'd1) & (p_vld_reg_260_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        hivenet_out_TDATA_blk_n = hivenet_out_TREADY_int_regslice;
    end else begin
        hivenet_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op56_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hivenet_out_TVALID_int_regslice = 1'b1;
    end else begin
        hivenet_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((isHivenet_V_load_reg_305_pp0_iter2_reg == 1'd0) & (p_vld_reg_260_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((isHivenet_V_load_reg_305 == 1'd0) & (p_vld_reg_260_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        icmp_out_TDATA_blk_n = icmp_out_TREADY_int_regslice;
    end else begin
        icmp_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op55_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        icmp_out_TVALID_int_regslice = 1'b1;
    end else begin
        icmp_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (p_in_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == 1'b1))) begin
        p_in_TREADY_int_regslice = 1'b1;
    end else begin
        p_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_icmp_out_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_hivenet_out_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op59_write_state4 == 1'b1) & (hivenet_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op57_write_state4 == 1'b1) & (icmp_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op56_write_state3 == 1'b1) & (hivenet_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op55_write_state3 == 1'b1) & (icmp_out_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_icmp_out_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_hivenet_out_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op59_write_state4 == 1'b1) & (hivenet_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op57_write_state4 == 1'b1) & (icmp_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op56_write_state3 == 1'b1) & (hivenet_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op55_write_state3 == 1'b1) & (icmp_out_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_icmp_out_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_hivenet_out_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op59_write_state4 == 1'b1) & (hivenet_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op57_write_state4 == 1'b1) & (icmp_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op56_write_state3 == 1'b1) & (hivenet_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op55_write_state3 == 1'b1) & (icmp_out_TREADY_int_regslice == 1'b0)))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((ap_predicate_op56_write_state3 == 1'b1) & (hivenet_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op55_write_state3 == 1'b1) & (icmp_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op56_write_state3 == 1'b1) & (hivenet_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op55_write_state3 == 1'b1) & (icmp_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state4_io = (((ap_predicate_op59_write_state4 == 1'b1) & (hivenet_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op57_write_state4 == 1'b1) & (icmp_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((regslice_both_icmp_out_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_hivenet_out_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op59_write_state4 == 1'b1) & (hivenet_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op57_write_state4 == 1'b1) & (icmp_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_147 = ((icmp_ln1065_1_fu_214_p2 == 1'd1) & (icmp_ln1065_fu_198_p2 == 1'd1) & (isFirst_V_load_load_fu_184_p1 == 1'd1) & (p_vld_fu_164_p1 == 1'd1));
end

always @ (*) begin
    ap_condition_163 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_condition_169 = (((icmp_ln1065_fu_198_p2 == 1'd0) & (isFirst_V_load_load_fu_184_p1 == 1'd1) & (p_vld_fu_164_p1 == 1'd1)) | ((icmp_ln1065_1_fu_214_p2 == 1'd0) & (isFirst_V_load_load_fu_184_p1 == 1'd1) & (p_vld_fu_164_p1 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_isFirst_V_flag_0_reg_136 = 'bx;

assign ap_phi_reg_pp0_iter0_temp_out_data_V_reg_150 = 'bx;

always @ (*) begin
    ap_predicate_op55_write_state3 = ((isHivenet_V_load_reg_305 == 1'd0) & (p_vld_reg_260_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op56_write_state3 = ((isHivenet_V_load_reg_305 == 1'd1) & (p_vld_reg_260_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op57_write_state4 = ((isHivenet_V_load_reg_305_pp0_iter2_reg == 1'd0) & (p_vld_reg_260_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op59_write_state4 = ((isHivenet_V_load_reg_305_pp0_iter2_reg == 1'd1) & (p_vld_reg_260_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_nbread_fu_92_p5_0 = p_in_TVALID_int_regslice;

assign hivenet_out_TVALID = regslice_both_hivenet_out_V_data_V_U_vld_out;

assign icmp_ln1065_1_fu_214_p2 = ((tmp_s_fu_204_p4 == 8'd1) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_198_p2 = ((tmp_fu_188_p4 == 16'd8) ? 1'b1 : 1'b0);

assign icmp_out_TVALID = regslice_both_icmp_out_V_data_V_U_vld_out;

assign isFirst_V_load_load_fu_184_p1 = isFirst_V;

assign or_ln28_fu_244_p2 = (p_in_TLAST_int_regslice | ap_phi_mux_isFirst_V_flag_0_phi_fu_139_p6);

assign p_Result_s_fu_226_p5 = {{p_in_TDATA_int_regslice[511:48]}, {icpm_dmac}};

assign p_in_TREADY = regslice_both_p_in_V_data_V_U_ack_in;

assign p_vld_fu_164_p1 = empty_nbread_fu_92_p5_0;

assign tmp_fu_188_p4 = {{p_in_TDATA_int_regslice[111:96]}};

assign tmp_s_fu_204_p4 = {{p_in_TDATA_int_regslice[191:184]}};


reg find_kernel_block = 0;
// synthesis translate_off
`include "ethHeader_forICMP_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //ethHeader_forICMP

