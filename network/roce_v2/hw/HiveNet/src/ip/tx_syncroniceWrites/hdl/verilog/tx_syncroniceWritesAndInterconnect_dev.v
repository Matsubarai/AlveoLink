// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="tx_syncroniceWritesAndInterconnect_dev_tx_syncroniceWritesAndInterconnect_dev,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=2.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.874027,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1369,HLS_SYN_LUT=834,HLS_VERSION=2020_2}" *)

module tx_syncroniceWritesAndInterconnect_dev (
        ap_clk,
        ap_rst_n,
        userData_s_TDATA,
        userData_s_TVALID,
        userData_s_TREADY,
        userData_s_TKEEP,
        userData_s_TSTRB,
        userData_s_TLAST,
        userData_s_TDEST,
        userDataSize_s_V_TDATA,
        userDataSize_s_V_TVALID,
        userDataSize_s_V_TREADY,
        nacANDretranssmitHeader_s_V_TDATA,
        nacANDretranssmitHeader_s_V_TVALID,
        nacANDretranssmitHeader_s_V_TREADY,
        nacANDretranssmitData_s_TDATA,
        nacANDretranssmitData_s_TVALID,
        nacANDretranssmitData_s_TREADY,
        nacANDretranssmitData_s_TKEEP,
        nacANDretranssmitData_s_TSTRB,
        nacANDretranssmitData_s_TLAST,
        outToWRITEHeader_s_V_TDATA,
        outToWRITEHeader_s_V_TVALID,
        outToWRITEHeader_s_V_TREADY,
        outToWRITEData_s_TDATA,
        outToWRITEData_s_TVALID,
        outToWRITEData_s_TREADY,
        outToWRITEData_s_TKEEP,
        outToWRITEData_s_TSTRB,
        outToWRITEData_s_TLAST,
        readPSN_l_V_TDATA,
        readPSN_l_V_TVALID,
        readPSN_l_V_TREADY,
        writePSN_l_V_TDATA,
        writePSN_l_V_TVALID,
        writePSN_l_V_TREADY,
        stopUserData
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [511:0] userData_s_TDATA;
input   userData_s_TVALID;
output   userData_s_TREADY;
input  [63:0] userData_s_TKEEP;
input  [63:0] userData_s_TSTRB;
input  [0:0] userData_s_TLAST;
input  [12:0] userData_s_TDEST;
input  [31:0] userDataSize_s_V_TDATA;
input   userDataSize_s_V_TVALID;
output   userDataSize_s_V_TREADY;
input  [127:0] nacANDretranssmitHeader_s_V_TDATA;
input   nacANDretranssmitHeader_s_V_TVALID;
output   nacANDretranssmitHeader_s_V_TREADY;
input  [511:0] nacANDretranssmitData_s_TDATA;
input   nacANDretranssmitData_s_TVALID;
output   nacANDretranssmitData_s_TREADY;
input  [63:0] nacANDretranssmitData_s_TKEEP;
input  [63:0] nacANDretranssmitData_s_TSTRB;
input  [0:0] nacANDretranssmitData_s_TLAST;
output  [127:0] outToWRITEHeader_s_V_TDATA;
output   outToWRITEHeader_s_V_TVALID;
input   outToWRITEHeader_s_V_TREADY;
output  [511:0] outToWRITEData_s_TDATA;
output   outToWRITEData_s_TVALID;
input   outToWRITEData_s_TREADY;
output  [63:0] outToWRITEData_s_TKEEP;
output  [63:0] outToWRITEData_s_TSTRB;
output  [0:0] outToWRITEData_s_TLAST;
input  [23:0] readPSN_l_V_TDATA;
input   readPSN_l_V_TVALID;
output   readPSN_l_V_TREADY;
input  [23:0] writePSN_l_V_TDATA;
input   writePSN_l_V_TVALID;
output   writePSN_l_V_TREADY;
input  [0:0] stopUserData;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
reg   [0:0] blockUserData;
reg   [1:0] state;
reg    userData_s_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire   [0:0] or_ln40_fu_775_p2;
wire   [0:0] icmp_ln90_fu_721_p2;
reg    nacANDretranssmitData_s_TDATA_blk_n;
reg    outToWRITEHeader_s_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [1:0] state_load_reg_833;
reg   [0:0] icmp_ln90_reg_847;
reg   [0:0] p_vld_reg_851;
reg    ap_enable_reg_pp0_iter2;
reg   [1:0] state_load_reg_833_pp0_iter1_reg;
reg   [0:0] icmp_ln90_reg_847_pp0_iter1_reg;
reg   [0:0] p_vld_reg_851_pp0_iter1_reg;
reg   [0:0] or_ln40_reg_880;
reg   [0:0] p_vld2_reg_884;
reg   [0:0] or_ln40_reg_880_pp0_iter1_reg;
reg   [0:0] p_vld2_reg_884_pp0_iter1_reg;
reg    outToWRITEData_s_TDATA_blk_n;
reg    readPSN_l_V_TDATA_blk_n;
reg    writePSN_l_V_TDATA_blk_n;
reg   [511:0] reg_278;
reg    ap_predicate_op151_read_state1;
reg    ap_predicate_op168_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op182_write_state2;
reg    ap_predicate_op183_write_state2;
reg    ap_predicate_op186_write_state2;
reg    ap_predicate_op187_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg    ap_predicate_op190_write_state3;
reg    ap_predicate_op191_write_state3;
reg    ap_predicate_op192_write_state3;
reg    ap_predicate_op193_write_state3;
wire    regslice_both_outToWRITEHeader_s_V_U_apdone_blk;
wire    regslice_both_outToWRITEData_s_V_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] reg_283;
reg   [511:0] reg_288;
reg   [63:0] reg_293;
reg   [63:0] reg_298;
wire   [0:0] grp_fu_240_p1;
reg   [0:0] data_last_V_reg_837;
wire   [0:0] grp_fu_268_p1;
reg   [0:0] tmp_i15_last_reg_842;
wire   [1:0] trunc_ln164_fu_735_p1;
reg   [1:0] trunc_ln164_reg_855;
reg   [9:0] trunc_ln164_3_reg_860;
reg   [63:0] trunc_ln164_4_reg_865;
reg   [28:0] tmp_reg_870;
reg   [0:0] tmp_i67_last_reg_875;
reg   [0:0] data_last_V_1_reg_888;
reg   [12:0] header_qp_V_reg_893;
wire   [9:0] header_size_V_fu_793_p1;
reg   [9:0] header_size_V_reg_898;
wire   [127:0] tmp_7_fu_797_p8;
wire   [127:0] zext_ln174_fu_822_p1;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_empty_phi_fu_217_p6;
wire   [0:0] icmp_ln20_fu_437_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_empty_reg_214;
wire   [0:0] blockUserData_load_load_fu_303_p1;
wire   [0:0] stopUserData_read_read_fu_146_p2;
wire   [0:0] icmp_ln15_fu_574_p2;
wire   [0:0] nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0;
wire   [0:0] userDataSize_s_V_read_nbread_fu_184_p2_0;
reg    ap_block_pp0_stage0_01001;
wire   [19:0] write_r_4_fu_317_p1;
wire   [19:0] read_r_4_fu_313_p1;
wire   [20:0] or_ln1347_2_fu_335_p3;
wire   [21:0] zext_ln1347_5_fu_343_p1;
wire   [21:0] zext_ln44_3_fu_351_p1;
wire   [20:0] or_ln1346_2_fu_361_p3;
wire   [21:0] zext_ln46_1_fu_369_p1;
wire   [21:0] zext_ln1347_3_fu_327_p1;
wire   [20:0] zext_ln1347_4_fu_331_p1;
wire   [20:0] zext_ln44_2_fu_347_p1;
wire   [20:0] ret_fu_379_p2;
wire   [0:0] grp_fu_226_p2;
wire   [0:0] icmp_ln878_3_fu_321_p2;
wire   [0:0] xor_ln878_2_fu_395_p2;
wire   [0:0] and_ln878_3_fu_401_p2;
wire   [21:0] sub_ln44_1_fu_355_p2;
wire   [21:0] sub_ln46_1_fu_373_p2;
wire   [0:0] and_ln878_2_fu_389_p2;
wire  signed [21:0] sext_ln878_1_fu_385_p1;
wire   [0:0] xor_ln878_3_fu_415_p2;
wire   [21:0] select_ln878_3_fu_407_p3;
wire   [21:0] select_ln878_4_fu_421_p3;
wire   [21:0] select_ln878_5_fu_429_p3;
wire   [19:0] write_r_fu_454_p1;
wire   [19:0] read_r_fu_450_p1;
wire   [20:0] or_ln1_fu_472_p3;
wire   [21:0] zext_ln1347_2_fu_480_p1;
wire   [21:0] zext_ln44_1_fu_488_p1;
wire   [20:0] or_ln2_fu_498_p3;
wire   [21:0] zext_ln46_fu_506_p1;
wire   [21:0] zext_ln1347_fu_464_p1;
wire   [20:0] zext_ln1347_1_fu_468_p1;
wire   [20:0] zext_ln44_fu_484_p1;
wire   [20:0] sub_ln1347_fu_516_p2;
wire   [0:0] icmp_ln878_1_fu_458_p2;
wire   [0:0] xor_ln878_fu_532_p2;
wire   [0:0] and_ln878_1_fu_538_p2;
wire   [21:0] sub_ln44_fu_492_p2;
wire   [21:0] sub_ln46_fu_510_p2;
wire   [0:0] and_ln878_fu_526_p2;
wire  signed [21:0] sext_ln878_fu_522_p1;
wire   [0:0] xor_ln878_1_fu_552_p2;
wire   [21:0] select_ln878_fu_544_p3;
wire   [21:0] select_ln878_1_fu_558_p3;
wire   [21:0] select_ln878_2_fu_566_p3;
wire   [19:0] write_r_5_fu_595_p1;
wire   [19:0] read_r_5_fu_591_p1;
wire   [20:0] or_ln1347_3_fu_619_p3;
wire   [21:0] zext_ln1347_8_fu_627_p1;
wire   [21:0] zext_ln44_5_fu_635_p1;
wire   [20:0] or_ln1346_3_fu_645_p3;
wire   [21:0] zext_ln46_2_fu_653_p1;
wire   [21:0] zext_ln1347_6_fu_611_p1;
wire   [20:0] zext_ln1347_7_fu_615_p1;
wire   [20:0] zext_ln44_4_fu_631_p1;
wire   [20:0] ret_1_fu_663_p2;
wire   [0:0] icmp_ln878_4_fu_599_p2;
wire   [0:0] icmp_ln878_5_fu_605_p2;
wire   [0:0] xor_ln878_4_fu_679_p2;
wire   [0:0] and_ln878_5_fu_685_p2;
wire   [21:0] sub_ln44_2_fu_639_p2;
wire   [21:0] sub_ln46_2_fu_657_p2;
wire   [0:0] and_ln878_4_fu_673_p2;
wire  signed [21:0] sext_ln1347_fu_669_p1;
wire   [0:0] xor_ln878_5_fu_699_p2;
wire   [21:0] select_ln878_6_fu_691_p3;
wire   [21:0] select_ln878_7_fu_705_p3;
wire   [21:0] select_ln878_8_fu_713_p3;
wire   [0:0] icmp_ln84_fu_769_p2;
wire   [57:0] or_ln_fu_812_p5;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_userData_s_V_data_V_U_apdone_blk;
wire   [511:0] userData_s_TDATA_int_regslice;
wire    userData_s_TVALID_int_regslice;
reg    userData_s_TREADY_int_regslice;
wire    regslice_both_userData_s_V_data_V_U_ack_in;
wire    regslice_both_userData_s_V_keep_V_U_apdone_blk;
wire   [63:0] userData_s_TKEEP_int_regslice;
wire    regslice_both_userData_s_V_keep_V_U_vld_out;
wire    regslice_both_userData_s_V_keep_V_U_ack_in;
wire    regslice_both_userData_s_V_strb_V_U_apdone_blk;
wire   [63:0] userData_s_TSTRB_int_regslice;
wire    regslice_both_userData_s_V_strb_V_U_vld_out;
wire    regslice_both_userData_s_V_strb_V_U_ack_in;
wire    regslice_both_userData_s_V_last_V_U_apdone_blk;
wire   [0:0] userData_s_TLAST_int_regslice;
wire    regslice_both_userData_s_V_last_V_U_vld_out;
wire    regslice_both_userData_s_V_last_V_U_ack_in;
wire    regslice_both_userData_s_V_dest_V_U_apdone_blk;
wire   [12:0] userData_s_TDEST_int_regslice;
wire    regslice_both_userData_s_V_dest_V_U_vld_out;
wire    regslice_both_userData_s_V_dest_V_U_ack_in;
wire    regslice_both_userDataSize_s_V_U_apdone_blk;
wire   [31:0] userDataSize_s_V_TDATA_int_regslice;
wire    userDataSize_s_V_TVALID_int_regslice;
reg    userDataSize_s_V_TREADY_int_regslice;
wire    regslice_both_userDataSize_s_V_U_ack_in;
wire    regslice_both_nacANDretranssmitHeader_s_V_U_apdone_blk;
wire   [127:0] nacANDretranssmitHeader_s_V_TDATA_int_regslice;
wire    nacANDretranssmitHeader_s_V_TVALID_int_regslice;
reg    nacANDretranssmitHeader_s_V_TREADY_int_regslice;
wire    regslice_both_nacANDretranssmitHeader_s_V_U_ack_in;
wire    regslice_both_nacANDretranssmitData_s_V_data_V_U_apdone_blk;
wire   [511:0] nacANDretranssmitData_s_TDATA_int_regslice;
wire    nacANDretranssmitData_s_TVALID_int_regslice;
reg    nacANDretranssmitData_s_TREADY_int_regslice;
wire    regslice_both_nacANDretranssmitData_s_V_data_V_U_ack_in;
wire    regslice_both_nacANDretranssmitData_s_V_keep_V_U_apdone_blk;
wire   [63:0] nacANDretranssmitData_s_TKEEP_int_regslice;
wire    regslice_both_nacANDretranssmitData_s_V_keep_V_U_vld_out;
wire    regslice_both_nacANDretranssmitData_s_V_keep_V_U_ack_in;
wire    regslice_both_nacANDretranssmitData_s_V_strb_V_U_apdone_blk;
wire   [63:0] nacANDretranssmitData_s_TSTRB_int_regslice;
wire    regslice_both_nacANDretranssmitData_s_V_strb_V_U_vld_out;
wire    regslice_both_nacANDretranssmitData_s_V_strb_V_U_ack_in;
wire    regslice_both_nacANDretranssmitData_s_V_last_V_U_apdone_blk;
wire   [0:0] nacANDretranssmitData_s_TLAST_int_regslice;
wire    regslice_both_nacANDretranssmitData_s_V_last_V_U_vld_out;
wire    regslice_both_nacANDretranssmitData_s_V_last_V_U_ack_in;
reg   [127:0] outToWRITEHeader_s_V_TDATA_int_regslice;
reg    outToWRITEHeader_s_V_TVALID_int_regslice;
wire    outToWRITEHeader_s_V_TREADY_int_regslice;
wire    regslice_both_outToWRITEHeader_s_V_U_vld_out;
reg   [511:0] outToWRITEData_s_TDATA_int_regslice;
reg    outToWRITEData_s_TVALID_int_regslice;
wire    outToWRITEData_s_TREADY_int_regslice;
wire    regslice_both_outToWRITEData_s_V_data_V_U_vld_out;
wire    regslice_both_outToWRITEData_s_V_keep_V_U_apdone_blk;
reg   [63:0] outToWRITEData_s_TKEEP_int_regslice;
wire    regslice_both_outToWRITEData_s_V_keep_V_U_ack_in_dummy;
wire    regslice_both_outToWRITEData_s_V_keep_V_U_vld_out;
wire    regslice_both_outToWRITEData_s_V_strb_V_U_apdone_blk;
reg   [63:0] outToWRITEData_s_TSTRB_int_regslice;
wire    regslice_both_outToWRITEData_s_V_strb_V_U_ack_in_dummy;
wire    regslice_both_outToWRITEData_s_V_strb_V_U_vld_out;
wire    regslice_both_outToWRITEData_s_V_last_V_U_apdone_blk;
reg   [0:0] outToWRITEData_s_TLAST_int_regslice;
wire    regslice_both_outToWRITEData_s_V_last_V_U_ack_in_dummy;
wire    regslice_both_outToWRITEData_s_V_last_V_U_vld_out;
wire    regslice_both_readPSN_l_V_U_apdone_blk;
wire   [23:0] readPSN_l_V_TDATA_int_regslice;
wire    readPSN_l_V_TVALID_int_regslice;
reg    readPSN_l_V_TREADY_int_regslice;
wire    regslice_both_readPSN_l_V_U_ack_in;
wire    regslice_both_writePSN_l_V_U_apdone_blk;
wire   [23:0] writePSN_l_V_TDATA_int_regslice;
wire    writePSN_l_V_TVALID_int_regslice;
reg    writePSN_l_V_TREADY_int_regslice;
wire    regslice_both_writePSN_l_V_U_ack_in;
reg    ap_condition_256;
reg    ap_condition_413;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b0;
#0 ap_rst_reg_1 = 1'b0;
#0 ap_rst_n_inv = 1'b0;
#0 blockUserData = 1'd0;
#0 state = 2'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 state_load_reg_833 = 2'd0;
#0 icmp_ln90_reg_847 = 1'd0;
#0 p_vld_reg_851 = 1'd0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 state_load_reg_833_pp0_iter1_reg = 2'd0;
#0 icmp_ln90_reg_847_pp0_iter1_reg = 1'd0;
#0 p_vld_reg_851_pp0_iter1_reg = 1'd0;
#0 or_ln40_reg_880 = 1'd0;
#0 p_vld2_reg_884 = 1'd0;
#0 or_ln40_reg_880_pp0_iter1_reg = 1'd0;
#0 p_vld2_reg_884_pp0_iter1_reg = 1'd0;
#0 reg_278 = 512'd0;
#0 reg_283 = 64'd0;
#0 reg_288 = 512'd0;
#0 reg_293 = 64'd0;
#0 reg_298 = 64'd0;
#0 data_last_V_reg_837 = 1'd0;
#0 tmp_i15_last_reg_842 = 1'd0;
#0 trunc_ln164_reg_855 = 2'd0;
#0 trunc_ln164_3_reg_860 = 10'd0;
#0 trunc_ln164_4_reg_865 = 64'd0;
#0 tmp_reg_870 = 29'd0;
#0 tmp_i67_last_reg_875 = 1'd0;
#0 data_last_V_1_reg_888 = 1'd0;
#0 header_qp_V_reg_893 = 13'd0;
#0 header_size_V_reg_898 = 10'd0;
end

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 512 ))
regslice_both_userData_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(userData_s_TDATA),
    .vld_in(userData_s_TVALID),
    .ack_in(regslice_both_userData_s_V_data_V_U_ack_in),
    .data_out(userData_s_TDATA_int_regslice),
    .vld_out(userData_s_TVALID_int_regslice),
    .ack_out(userData_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_userData_s_V_data_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_userData_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(userData_s_TKEEP),
    .vld_in(userData_s_TVALID),
    .ack_in(regslice_both_userData_s_V_keep_V_U_ack_in),
    .data_out(userData_s_TKEEP_int_regslice),
    .vld_out(regslice_both_userData_s_V_keep_V_U_vld_out),
    .ack_out(userData_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_userData_s_V_keep_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_userData_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(userData_s_TSTRB),
    .vld_in(userData_s_TVALID),
    .ack_in(regslice_both_userData_s_V_strb_V_U_ack_in),
    .data_out(userData_s_TSTRB_int_regslice),
    .vld_out(regslice_both_userData_s_V_strb_V_U_vld_out),
    .ack_out(userData_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_userData_s_V_strb_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_userData_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(userData_s_TLAST),
    .vld_in(userData_s_TVALID),
    .ack_in(regslice_both_userData_s_V_last_V_U_ack_in),
    .data_out(userData_s_TLAST_int_regslice),
    .vld_out(regslice_both_userData_s_V_last_V_U_vld_out),
    .ack_out(userData_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_userData_s_V_last_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 13 ))
regslice_both_userData_s_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(userData_s_TDEST),
    .vld_in(userData_s_TVALID),
    .ack_in(regslice_both_userData_s_V_dest_V_U_ack_in),
    .data_out(userData_s_TDEST_int_regslice),
    .vld_out(regslice_both_userData_s_V_dest_V_U_vld_out),
    .ack_out(userData_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_userData_s_V_dest_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_userDataSize_s_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(userDataSize_s_V_TDATA),
    .vld_in(userDataSize_s_V_TVALID),
    .ack_in(regslice_both_userDataSize_s_V_U_ack_in),
    .data_out(userDataSize_s_V_TDATA_int_regslice),
    .vld_out(userDataSize_s_V_TVALID_int_regslice),
    .ack_out(userDataSize_s_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_userDataSize_s_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 128 ))
regslice_both_nacANDretranssmitHeader_s_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(nacANDretranssmitHeader_s_V_TDATA),
    .vld_in(nacANDretranssmitHeader_s_V_TVALID),
    .ack_in(regslice_both_nacANDretranssmitHeader_s_V_U_ack_in),
    .data_out(nacANDretranssmitHeader_s_V_TDATA_int_regslice),
    .vld_out(nacANDretranssmitHeader_s_V_TVALID_int_regslice),
    .ack_out(nacANDretranssmitHeader_s_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_nacANDretranssmitHeader_s_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 512 ))
regslice_both_nacANDretranssmitData_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(nacANDretranssmitData_s_TDATA),
    .vld_in(nacANDretranssmitData_s_TVALID),
    .ack_in(regslice_both_nacANDretranssmitData_s_V_data_V_U_ack_in),
    .data_out(nacANDretranssmitData_s_TDATA_int_regslice),
    .vld_out(nacANDretranssmitData_s_TVALID_int_regslice),
    .ack_out(nacANDretranssmitData_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_nacANDretranssmitData_s_V_data_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_nacANDretranssmitData_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(nacANDretranssmitData_s_TKEEP),
    .vld_in(nacANDretranssmitData_s_TVALID),
    .ack_in(regslice_both_nacANDretranssmitData_s_V_keep_V_U_ack_in),
    .data_out(nacANDretranssmitData_s_TKEEP_int_regslice),
    .vld_out(regslice_both_nacANDretranssmitData_s_V_keep_V_U_vld_out),
    .ack_out(nacANDretranssmitData_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_nacANDretranssmitData_s_V_keep_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_nacANDretranssmitData_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(nacANDretranssmitData_s_TSTRB),
    .vld_in(nacANDretranssmitData_s_TVALID),
    .ack_in(regslice_both_nacANDretranssmitData_s_V_strb_V_U_ack_in),
    .data_out(nacANDretranssmitData_s_TSTRB_int_regslice),
    .vld_out(regslice_both_nacANDretranssmitData_s_V_strb_V_U_vld_out),
    .ack_out(nacANDretranssmitData_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_nacANDretranssmitData_s_V_strb_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_nacANDretranssmitData_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(nacANDretranssmitData_s_TLAST),
    .vld_in(nacANDretranssmitData_s_TVALID),
    .ack_in(regslice_both_nacANDretranssmitData_s_V_last_V_U_ack_in),
    .data_out(nacANDretranssmitData_s_TLAST_int_regslice),
    .vld_out(regslice_both_nacANDretranssmitData_s_V_last_V_U_vld_out),
    .ack_out(nacANDretranssmitData_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_nacANDretranssmitData_s_V_last_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 128 ))
regslice_both_outToWRITEHeader_s_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(outToWRITEHeader_s_V_TDATA_int_regslice),
    .vld_in(outToWRITEHeader_s_V_TVALID_int_regslice),
    .ack_in(outToWRITEHeader_s_V_TREADY_int_regslice),
    .data_out(outToWRITEHeader_s_V_TDATA),
    .vld_out(regslice_both_outToWRITEHeader_s_V_U_vld_out),
    .ack_out(outToWRITEHeader_s_V_TREADY),
    .apdone_blk(regslice_both_outToWRITEHeader_s_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 512 ))
regslice_both_outToWRITEData_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(outToWRITEData_s_TDATA_int_regslice),
    .vld_in(outToWRITEData_s_TVALID_int_regslice),
    .ack_in(outToWRITEData_s_TREADY_int_regslice),
    .data_out(outToWRITEData_s_TDATA),
    .vld_out(regslice_both_outToWRITEData_s_V_data_V_U_vld_out),
    .ack_out(outToWRITEData_s_TREADY),
    .apdone_blk(regslice_both_outToWRITEData_s_V_data_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_outToWRITEData_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(outToWRITEData_s_TKEEP_int_regslice),
    .vld_in(outToWRITEData_s_TVALID_int_regslice),
    .ack_in(regslice_both_outToWRITEData_s_V_keep_V_U_ack_in_dummy),
    .data_out(outToWRITEData_s_TKEEP),
    .vld_out(regslice_both_outToWRITEData_s_V_keep_V_U_vld_out),
    .ack_out(outToWRITEData_s_TREADY),
    .apdone_blk(regslice_both_outToWRITEData_s_V_keep_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_outToWRITEData_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(outToWRITEData_s_TSTRB_int_regslice),
    .vld_in(outToWRITEData_s_TVALID_int_regslice),
    .ack_in(regslice_both_outToWRITEData_s_V_strb_V_U_ack_in_dummy),
    .data_out(outToWRITEData_s_TSTRB),
    .vld_out(regslice_both_outToWRITEData_s_V_strb_V_U_vld_out),
    .ack_out(outToWRITEData_s_TREADY),
    .apdone_blk(regslice_both_outToWRITEData_s_V_strb_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_outToWRITEData_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(outToWRITEData_s_TLAST_int_regslice),
    .vld_in(outToWRITEData_s_TVALID_int_regslice),
    .ack_in(regslice_both_outToWRITEData_s_V_last_V_U_ack_in_dummy),
    .data_out(outToWRITEData_s_TLAST),
    .vld_out(regslice_both_outToWRITEData_s_V_last_V_U_vld_out),
    .ack_out(outToWRITEData_s_TREADY),
    .apdone_blk(regslice_both_outToWRITEData_s_V_last_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 24 ))
regslice_both_readPSN_l_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(readPSN_l_V_TDATA),
    .vld_in(readPSN_l_V_TVALID),
    .ack_in(regslice_both_readPSN_l_V_U_ack_in),
    .data_out(readPSN_l_V_TDATA_int_regslice),
    .vld_out(readPSN_l_V_TVALID_int_regslice),
    .ack_out(readPSN_l_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_readPSN_l_V_U_apdone_blk)
);

tx_syncroniceWritesAndInterconnect_dev_regslice_both #(
    .DataWidth( 24 ))
regslice_both_writePSN_l_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(writePSN_l_V_TDATA),
    .vld_in(writePSN_l_V_TVALID),
    .ack_in(regslice_both_writePSN_l_V_U_ack_in),
    .data_out(writePSN_l_V_TDATA_int_regslice),
    .vld_out(writePSN_l_V_TVALID_int_regslice),
    .ack_out(writePSN_l_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_writePSN_l_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_rst_n_inv <= 1'b0;
    end else begin
        ap_rst_n_inv <= ap_rst_reg_1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_rst_reg_1 <= 1'b0;
    end else begin
        ap_rst_reg_1 <= ap_rst_reg_2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_rst_reg_2 <= 1'b0;
    end else begin
        ap_rst_reg_2 <= ~ap_rst_n;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        blockUserData <= 1'd0;
    end else begin
        if ((1'b1 == ap_condition_256)) begin
            if ((blockUserData_load_load_fu_303_p1 == 1'd1)) begin
                blockUserData <= icmp_ln15_fu_574_p2;
            end else if (((stopUserData_read_read_fu_146_p2 == 1'd1) & (blockUserData_load_load_fu_303_p1 == 1'd0))) begin
                blockUserData <= icmp_ln20_fu_437_p2;
            end else if (((stopUserData_read_read_fu_146_p2 == 1'd0) & (blockUserData_load_load_fu_303_p1 == 1'd0))) begin
                blockUserData <= 1'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_last_V_1_reg_888 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0)) | ((userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0))))) begin
            data_last_V_1_reg_888 <= userData_s_TLAST_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_last_V_reg_837 <= 1'd0;
    end else begin
        if (((state == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_last_V_reg_837 <= userData_s_TLAST_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        header_qp_V_reg_893 <= 13'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0)) | ((userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0))))) begin
            header_qp_V_reg_893 <= userData_s_TDEST_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        header_size_V_reg_898 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0)) | ((userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0))))) begin
            header_size_V_reg_898 <= header_size_V_fu_793_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln90_reg_847 <= 1'd0;
    end else begin
        if (((state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            icmp_ln90_reg_847 <= icmp_ln90_fu_721_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln90_reg_847_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            icmp_ln90_reg_847_pp0_iter1_reg <= icmp_ln90_reg_847;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        or_ln40_reg_880 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (state == 2'd0)) | ((nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0))))) begin
            or_ln40_reg_880 <= or_ln40_fu_775_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        or_ln40_reg_880_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln40_reg_880_pp0_iter1_reg <= or_ln40_reg_880;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_vld2_reg_884 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0)) | ((or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0))))) begin
            p_vld2_reg_884 <= userDataSize_s_V_read_nbread_fu_184_p2_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_vld2_reg_884_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_vld2_reg_884_pp0_iter1_reg <= p_vld2_reg_884;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_vld_reg_851 <= 1'd0;
    end else begin
        if (((icmp_ln90_fu_721_p2 == 1'd0) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_vld_reg_851 <= nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_vld_reg_851_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_vld_reg_851_pp0_iter1_reg <= p_vld_reg_851;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        reg_278 <= 512'd0;
    end else begin
        if ((((state == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0)) | ((userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0)))))) begin
            reg_278 <= userData_s_TDATA_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        reg_283 <= 64'd0;
    end else begin
        if ((((state == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0)) | ((userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0)))))) begin
            reg_283 <= userData_s_TKEEP_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        reg_288 <= 512'd0;
    end else begin
        if ((((state == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln90_fu_721_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd1) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            reg_288 <= nacANDretranssmitData_s_TDATA_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        reg_293 <= 64'd0;
    end else begin
        if ((((state == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln90_fu_721_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd1) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            reg_293 <= nacANDretranssmitData_s_TKEEP_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        reg_298 <= 64'd0;
    end else begin
        if ((((state == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln90_fu_721_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd1) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            reg_298 <= nacANDretranssmitData_s_TSTRB_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        state <= 2'd0;
    end else begin
        if ((((state == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (grp_fu_268_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln90_fu_721_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd1) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (grp_fu_268_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            state <= 2'd1;
        end else if ((((state == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (grp_fu_268_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln90_fu_721_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd1) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (grp_fu_268_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((state == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (grp_fu_240_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0) & (grp_fu_240_p1 == 1'd1)) | ((userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0) & (grp_fu_240_p1 == 1'd1)))))) begin
            state <= 2'd0;
        end else if ((((state == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (grp_fu_240_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0) & (grp_fu_240_p1 == 1'd0)) | ((userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0) & (grp_fu_240_p1 == 1'd0)))))) begin
            state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        state_load_reg_833 <= 2'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            state_load_reg_833 <= state;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        state_load_reg_833_pp0_iter1_reg <= 2'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            state_load_reg_833_pp0_iter1_reg <= state_load_reg_833;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_i15_last_reg_842 <= 1'd0;
    end else begin
        if (((state == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_i15_last_reg_842 <= nacANDretranssmitData_s_TLAST_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_i67_last_reg_875 <= 1'd0;
    end else begin
        if (((icmp_ln90_fu_721_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd1) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_i67_last_reg_875 <= nacANDretranssmitData_s_TLAST_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_reg_870 <= 29'd0;
    end else begin
        if (((icmp_ln90_fu_721_p2 == 1'd0) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_reg_870 <= {{nacANDretranssmitHeader_s_V_TDATA_int_regslice[44:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        trunc_ln164_3_reg_860 <= 10'd0;
    end else begin
        if (((icmp_ln90_fu_721_p2 == 1'd0) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            trunc_ln164_3_reg_860 <= {{nacANDretranssmitHeader_s_V_TDATA_int_regslice[57:48]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        trunc_ln164_4_reg_865 <= 64'd0;
    end else begin
        if (((icmp_ln90_fu_721_p2 == 1'd0) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            trunc_ln164_4_reg_865 <= {{nacANDretranssmitHeader_s_V_TDATA_int_regslice[127:64]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        trunc_ln164_reg_855 <= 2'd0;
    end else begin
        if (((icmp_ln90_fu_721_p2 == 1'd0) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            trunc_ln164_reg_855 <= trunc_ln164_fu_735_p1;
        end
    end
end

always @ (*) begin
    if (((1'b1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((blockUserData_load_load_fu_303_p1 == 1'd1)) begin
        ap_phi_mux_empty_phi_fu_217_p6 = icmp_ln15_fu_574_p2;
    end else if (((stopUserData_read_read_fu_146_p2 == 1'd0) & (blockUserData_load_load_fu_303_p1 == 1'd0))) begin
        ap_phi_mux_empty_phi_fu_217_p6 = 1'd0;
    end else if (((stopUserData_read_read_fu_146_p2 == 1'd1) & (blockUserData_load_load_fu_303_p1 == 1'd0))) begin
        ap_phi_mux_empty_phi_fu_217_p6 = icmp_ln20_fu_437_p2;
    end else begin
        ap_phi_mux_empty_phi_fu_217_p6 = ap_phi_reg_pp0_iter0_empty_reg_214;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if ((((state == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln90_fu_721_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd1) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        nacANDretranssmitData_s_TDATA_blk_n = nacANDretranssmitData_s_TVALID_int_regslice;
    end else begin
        nacANDretranssmitData_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((state == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op151_read_state1 == 1'b1)))) begin
        nacANDretranssmitData_s_TREADY_int_regslice = 1'b1;
    end else begin
        nacANDretranssmitData_s_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((nacANDretranssmitHeader_s_V_TVALID_int_regslice == 1'b1) & (icmp_ln90_fu_721_p2 == 1'd0) & (state == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nacANDretranssmitHeader_s_V_TREADY_int_regslice = 1'b1;
    end else begin
        nacANDretranssmitHeader_s_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_833 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_833 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_reg_851 == 1'd1) & (icmp_ln90_reg_847 == 1'd0) & (state_load_reg_833 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((p_vld2_reg_884 == 1'd1) & (or_ln40_reg_880 == 1'd0) & (icmp_ln90_reg_847 == 1'd1) & (state_load_reg_833 == 2'd0)) | ((p_vld2_reg_884 == 1'd1) & (or_ln40_reg_880 == 1'd0) & (p_vld_reg_851 == 1'd0) & (state_load_reg_833 == 2'd0)))) | ((1'b0 == ap_block_pp0_stage0) & (state_load_reg_833_pp0_iter1_reg == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (state_load_reg_833_pp0_iter1_reg == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (p_vld_reg_851_pp0_iter1_reg == 1'd1) & (icmp_ln90_reg_847_pp0_iter1_reg == 1'd0) & (state_load_reg_833_pp0_iter1_reg == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (((p_vld2_reg_884_pp0_iter1_reg == 1'd1) & (or_ln40_reg_880_pp0_iter1_reg == 1'd0) & (icmp_ln90_reg_847_pp0_iter1_reg == 1'd1) & (state_load_reg_833_pp0_iter1_reg == 2'd0)) | ((p_vld2_reg_884_pp0_iter1_reg == 1'd1) & (or_ln40_reg_880_pp0_iter1_reg == 1'd0) & (p_vld_reg_851_pp0_iter1_reg == 1'd0) & (state_load_reg_833_pp0_iter1_reg == 2'd0)))))) begin
        outToWRITEData_s_TDATA_blk_n = outToWRITEData_s_TREADY_int_regslice;
    end else begin
        outToWRITEData_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_833 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op183_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        outToWRITEData_s_TDATA_int_regslice = reg_288;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_833 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op187_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        outToWRITEData_s_TDATA_int_regslice = reg_278;
    end else begin
        outToWRITEData_s_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_833 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op183_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        outToWRITEData_s_TKEEP_int_regslice = reg_293;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_833 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op187_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        outToWRITEData_s_TKEEP_int_regslice = reg_283;
    end else begin
        outToWRITEData_s_TKEEP_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_413)) begin
        if ((ap_predicate_op187_write_state2 == 1'b1)) begin
            outToWRITEData_s_TLAST_int_regslice = data_last_V_1_reg_888;
        end else if ((ap_predicate_op183_write_state2 == 1'b1)) begin
            outToWRITEData_s_TLAST_int_regslice = tmp_i67_last_reg_875;
        end else if ((state_load_reg_833 == 2'd1)) begin
            outToWRITEData_s_TLAST_int_regslice = tmp_i15_last_reg_842;
        end else if ((state_load_reg_833 == 2'd2)) begin
            outToWRITEData_s_TLAST_int_regslice = data_last_V_reg_837;
        end else begin
            outToWRITEData_s_TLAST_int_regslice = 'bx;
        end
    end else begin
        outToWRITEData_s_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_833 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op183_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        outToWRITEData_s_TSTRB_int_regslice = reg_298;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_833 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op187_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        outToWRITEData_s_TSTRB_int_regslice = 64'd0;
    end else begin
        outToWRITEData_s_TSTRB_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_833 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_833 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op187_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op183_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        outToWRITEData_s_TVALID_int_regslice = 1'b1;
    end else begin
        outToWRITEData_s_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_reg_851 == 1'd1) & (icmp_ln90_reg_847 == 1'd0) & (state_load_reg_833 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((p_vld2_reg_884 == 1'd1) & (or_ln40_reg_880 == 1'd0) & (icmp_ln90_reg_847 == 1'd1) & (state_load_reg_833 == 2'd0)) | ((p_vld2_reg_884 == 1'd1) & (or_ln40_reg_880 == 1'd0) & (p_vld_reg_851 == 1'd0) & (state_load_reg_833 == 2'd0)))) | ((1'b0 == ap_block_pp0_stage0) & (p_vld_reg_851_pp0_iter1_reg == 1'd1) & (icmp_ln90_reg_847_pp0_iter1_reg == 1'd0) & (state_load_reg_833_pp0_iter1_reg == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (((p_vld2_reg_884_pp0_iter1_reg == 1'd1) & (or_ln40_reg_880_pp0_iter1_reg == 1'd0) & (icmp_ln90_reg_847_pp0_iter1_reg == 1'd1) & (state_load_reg_833_pp0_iter1_reg == 2'd0)) | ((p_vld2_reg_884_pp0_iter1_reg == 1'd1) & (or_ln40_reg_880_pp0_iter1_reg == 1'd0) & (p_vld_reg_851_pp0_iter1_reg == 1'd0) & (state_load_reg_833_pp0_iter1_reg == 2'd0)))))) begin
        outToWRITEHeader_s_V_TDATA_blk_n = outToWRITEHeader_s_V_TREADY_int_regslice;
    end else begin
        outToWRITEHeader_s_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_413)) begin
        if ((ap_predicate_op186_write_state2 == 1'b1)) begin
            outToWRITEHeader_s_V_TDATA_int_regslice = zext_ln174_fu_822_p1;
        end else if ((ap_predicate_op182_write_state2 == 1'b1)) begin
            outToWRITEHeader_s_V_TDATA_int_regslice = tmp_7_fu_797_p8;
        end else begin
            outToWRITEHeader_s_V_TDATA_int_regslice = 'bx;
        end
    end else begin
        outToWRITEHeader_s_V_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op186_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op182_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        outToWRITEHeader_s_V_TVALID_int_regslice = 1'b1;
    end else begin
        outToWRITEHeader_s_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        readPSN_l_V_TDATA_blk_n = readPSN_l_V_TVALID_int_regslice;
    end else begin
        readPSN_l_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        readPSN_l_V_TREADY_int_regslice = 1'b1;
    end else begin
        readPSN_l_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((userDataSize_s_V_TVALID_int_regslice == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0)) | ((or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0))))) begin
        userDataSize_s_V_TREADY_int_regslice = 1'b1;
    end else begin
        userDataSize_s_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((state == 2'd2) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln90_fu_721_p2 == 1'd1) & (userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0)) | ((userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0)))))) begin
        userData_s_TDATA_blk_n = userData_s_TVALID_int_regslice;
    end else begin
        userData_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((state == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op168_read_state1 == 1'b1)))) begin
        userData_s_TREADY_int_regslice = 1'b1;
    end else begin
        userData_s_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        writePSN_l_V_TDATA_blk_n = writePSN_l_V_TVALID_int_regslice;
    end else begin
        writePSN_l_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        writePSN_l_V_TREADY_int_regslice = 1'b1;
    end else begin
        writePSN_l_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln878_1_fu_538_p2 = (xor_ln878_fu_532_p2 & icmp_ln878_1_fu_458_p2);

assign and_ln878_2_fu_389_p2 = (icmp_ln878_3_fu_321_p2 & grp_fu_226_p2);

assign and_ln878_3_fu_401_p2 = (xor_ln878_2_fu_395_p2 & icmp_ln878_3_fu_321_p2);

assign and_ln878_4_fu_673_p2 = (icmp_ln878_5_fu_605_p2 & icmp_ln878_4_fu_599_p2);

assign and_ln878_5_fu_685_p2 = (xor_ln878_4_fu_679_p2 & icmp_ln878_5_fu_605_p2);

assign and_ln878_fu_526_p2 = (icmp_ln878_1_fu_458_p2 & grp_fu_226_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'b1 == 1'b1) & ((readPSN_l_V_TVALID_int_regslice == 1'b0) | (writePSN_l_V_TVALID_int_regslice == 1'b0) | ((nacANDretranssmitData_s_TVALID_int_regslice == 1'b0) & (state == 2'd1)) | ((nacANDretranssmitData_s_TVALID_int_regslice == 1'b0) & (ap_predicate_op151_read_state1 == 1'b1)) | ((userData_s_TVALID_int_regslice == 1'b0) & (state == 2'd2)) | ((userData_s_TVALID_int_regslice == 1'b0) & (ap_predicate_op168_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_outToWRITEData_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_outToWRITEHeader_s_V_U_apdone_blk == 1'b1) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op193_write_state3 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op191_write_state3 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833_pp0_iter1_reg == 2'd2)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833_pp0_iter1_reg == 2'd1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op192_write_state3 == 1'b1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op190_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op187_write_state2 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op183_write_state2 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833 == 2'd2)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833 == 2'd1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op186_write_state2 == 1'b1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op182_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == 1'b1) & ((readPSN_l_V_TVALID_int_regslice == 1'b0) | (writePSN_l_V_TVALID_int_regslice == 1'b0) | ((nacANDretranssmitData_s_TVALID_int_regslice == 1'b0) & (state == 2'd1)) | ((nacANDretranssmitData_s_TVALID_int_regslice == 1'b0) & (ap_predicate_op151_read_state1 == 1'b1)) | ((userData_s_TVALID_int_regslice == 1'b0) & (state == 2'd2)) | ((userData_s_TVALID_int_regslice == 1'b0) & (ap_predicate_op168_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_outToWRITEData_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_outToWRITEHeader_s_V_U_apdone_blk == 1'b1) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op193_write_state3 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op191_write_state3 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833_pp0_iter1_reg == 2'd2)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833_pp0_iter1_reg == 2'd1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op192_write_state3 == 1'b1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op190_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op187_write_state2 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op183_write_state2 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833 == 2'd2)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833 == 2'd1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op186_write_state2 == 1'b1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op182_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == 1'b1) & ((readPSN_l_V_TVALID_int_regslice == 1'b0) | (writePSN_l_V_TVALID_int_regslice == 1'b0) | ((nacANDretranssmitData_s_TVALID_int_regslice == 1'b0) & (state == 2'd1)) | ((nacANDretranssmitData_s_TVALID_int_regslice == 1'b0) & (ap_predicate_op151_read_state1 == 1'b1)) | ((userData_s_TVALID_int_regslice == 1'b0) & (state == 2'd2)) | ((userData_s_TVALID_int_regslice == 1'b0) & (ap_predicate_op168_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_outToWRITEData_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_outToWRITEHeader_s_V_U_apdone_blk == 1'b1) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op193_write_state3 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op191_write_state3 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833_pp0_iter1_reg == 2'd2)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833_pp0_iter1_reg == 2'd1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op192_write_state3 == 1'b1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op190_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op187_write_state2 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op183_write_state2 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833 == 2'd2)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833 == 2'd1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op186_write_state2 == 1'b1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op182_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((readPSN_l_V_TVALID_int_regslice == 1'b0) | (writePSN_l_V_TVALID_int_regslice == 1'b0) | ((nacANDretranssmitData_s_TVALID_int_regslice == 1'b0) & (state == 2'd1)) | ((nacANDretranssmitData_s_TVALID_int_regslice == 1'b0) & (ap_predicate_op151_read_state1 == 1'b1)) | ((userData_s_TVALID_int_regslice == 1'b0) & (state == 2'd2)) | ((userData_s_TVALID_int_regslice == 1'b0) & (ap_predicate_op168_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op187_write_state2 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op183_write_state2 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833 == 2'd2)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833 == 2'd1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op186_write_state2 == 1'b1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op182_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op187_write_state2 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op183_write_state2 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833 == 2'd2)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833 == 2'd1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op186_write_state2 == 1'b1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op182_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_io = (((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op193_write_state3 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op191_write_state3 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833_pp0_iter1_reg == 2'd2)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833_pp0_iter1_reg == 2'd1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op192_write_state3 == 1'b1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op190_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_outToWRITEData_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_outToWRITEHeader_s_V_U_apdone_blk == 1'b1) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op193_write_state3 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (ap_predicate_op191_write_state3 == 1'b1)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833_pp0_iter1_reg == 2'd2)) | ((outToWRITEData_s_TREADY_int_regslice == 1'b0) & (state_load_reg_833_pp0_iter1_reg == 2'd1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op192_write_state3 == 1'b1)) | ((outToWRITEHeader_s_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op190_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_256 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_413 = ((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_empty_reg_214 = 'bx;

always @ (*) begin
    ap_predicate_op151_read_state1 = ((icmp_ln90_fu_721_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd1) & (state == 2'd0));
end

always @ (*) begin
    ap_predicate_op168_read_state1 = (((icmp_ln90_fu_721_p2 == 1'd1) & (userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (state == 2'd0)) | ((userDataSize_s_V_read_nbread_fu_184_p2_0 == 1'd1) & (or_ln40_fu_775_p2 == 1'd0) & (nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 == 1'd0) & (state == 2'd0)));
end

always @ (*) begin
    ap_predicate_op182_write_state2 = ((p_vld_reg_851 == 1'd1) & (icmp_ln90_reg_847 == 1'd0) & (state_load_reg_833 == 2'd0));
end

always @ (*) begin
    ap_predicate_op183_write_state2 = ((p_vld_reg_851 == 1'd1) & (icmp_ln90_reg_847 == 1'd0) & (state_load_reg_833 == 2'd0));
end

always @ (*) begin
    ap_predicate_op186_write_state2 = (((p_vld2_reg_884 == 1'd1) & (or_ln40_reg_880 == 1'd0) & (icmp_ln90_reg_847 == 1'd1) & (state_load_reg_833 == 2'd0)) | ((p_vld2_reg_884 == 1'd1) & (or_ln40_reg_880 == 1'd0) & (p_vld_reg_851 == 1'd0) & (state_load_reg_833 == 2'd0)));
end

always @ (*) begin
    ap_predicate_op187_write_state2 = (((p_vld2_reg_884 == 1'd1) & (or_ln40_reg_880 == 1'd0) & (icmp_ln90_reg_847 == 1'd1) & (state_load_reg_833 == 2'd0)) | ((p_vld2_reg_884 == 1'd1) & (or_ln40_reg_880 == 1'd0) & (p_vld_reg_851 == 1'd0) & (state_load_reg_833 == 2'd0)));
end

always @ (*) begin
    ap_predicate_op190_write_state3 = ((p_vld_reg_851_pp0_iter1_reg == 1'd1) & (icmp_ln90_reg_847_pp0_iter1_reg == 1'd0) & (state_load_reg_833_pp0_iter1_reg == 2'd0));
end

always @ (*) begin
    ap_predicate_op191_write_state3 = ((p_vld_reg_851_pp0_iter1_reg == 1'd1) & (icmp_ln90_reg_847_pp0_iter1_reg == 1'd0) & (state_load_reg_833_pp0_iter1_reg == 2'd0));
end

always @ (*) begin
    ap_predicate_op192_write_state3 = (((p_vld2_reg_884_pp0_iter1_reg == 1'd1) & (or_ln40_reg_880_pp0_iter1_reg == 1'd0) & (icmp_ln90_reg_847_pp0_iter1_reg == 1'd1) & (state_load_reg_833_pp0_iter1_reg == 2'd0)) | ((p_vld2_reg_884_pp0_iter1_reg == 1'd1) & (or_ln40_reg_880_pp0_iter1_reg == 1'd0) & (p_vld_reg_851_pp0_iter1_reg == 1'd0) & (state_load_reg_833_pp0_iter1_reg == 2'd0)));
end

always @ (*) begin
    ap_predicate_op193_write_state3 = (((p_vld2_reg_884_pp0_iter1_reg == 1'd1) & (or_ln40_reg_880_pp0_iter1_reg == 1'd0) & (icmp_ln90_reg_847_pp0_iter1_reg == 1'd1) & (state_load_reg_833_pp0_iter1_reg == 2'd0)) | ((p_vld2_reg_884_pp0_iter1_reg == 1'd1) & (or_ln40_reg_880_pp0_iter1_reg == 1'd0) & (p_vld_reg_851_pp0_iter1_reg == 1'd0) & (state_load_reg_833_pp0_iter1_reg == 2'd0)));
end

assign blockUserData_load_load_fu_303_p1 = blockUserData;

assign grp_fu_226_p2 = ((writePSN_l_V_TDATA_int_regslice < readPSN_l_V_TDATA_int_regslice) ? 1'b1 : 1'b0);

assign grp_fu_240_p1 = userData_s_TLAST_int_regslice;

assign grp_fu_268_p1 = nacANDretranssmitData_s_TLAST_int_regslice;

assign header_size_V_fu_793_p1 = userDataSize_s_V_TDATA_int_regslice[9:0];

assign icmp_ln15_fu_574_p2 = ((select_ln878_2_fu_566_p3 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_437_p2 = ((select_ln878_5_fu_429_p3 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_769_p2 = (($signed(select_ln878_8_fu_713_p3) > $signed(22'd1048543)) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_458_p2 = ((write_r_fu_454_p1 < read_r_fu_450_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_3_fu_321_p2 = ((write_r_4_fu_317_p1 < read_r_4_fu_313_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_4_fu_599_p2 = ((writePSN_l_V_TDATA_int_regslice < readPSN_l_V_TDATA_int_regslice) ? 1'b1 : 1'b0);

assign icmp_ln878_5_fu_605_p2 = ((write_r_5_fu_595_p1 < read_r_5_fu_591_p1) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_721_p2 = (($signed(select_ln878_8_fu_713_p3) > $signed(22'd1048558)) ? 1'b1 : 1'b0);

assign nacANDretranssmitData_s_TREADY = regslice_both_nacANDretranssmitData_s_V_data_V_U_ack_in;

assign nacANDretranssmitHeader_s_V_TREADY = regslice_both_nacANDretranssmitHeader_s_V_U_ack_in;

assign nacANDretranssmitHeader_s_V_read_nbread_fu_178_p2_0 = nacANDretranssmitHeader_s_V_TVALID_int_regslice;

assign or_ln1346_2_fu_361_p3 = {{1'd1}, {read_r_4_fu_313_p1}};

assign or_ln1346_3_fu_645_p3 = {{1'd1}, {read_r_5_fu_591_p1}};

assign or_ln1347_2_fu_335_p3 = {{1'd1}, {write_r_4_fu_317_p1}};

assign or_ln1347_3_fu_619_p3 = {{1'd1}, {write_r_5_fu_595_p1}};

assign or_ln1_fu_472_p3 = {{1'd1}, {write_r_fu_454_p1}};

assign or_ln2_fu_498_p3 = {{1'd1}, {read_r_fu_450_p1}};

assign or_ln40_fu_775_p2 = (icmp_ln84_fu_769_p2 | ap_phi_mux_empty_phi_fu_217_p6);

assign or_ln_fu_812_p5 = {{{{header_size_V_reg_898}, {3'd0}}, {header_qp_V_reg_893}}, {32'd0}};

assign outToWRITEData_s_TVALID = regslice_both_outToWRITEData_s_V_data_V_U_vld_out;

assign outToWRITEHeader_s_V_TVALID = regslice_both_outToWRITEHeader_s_V_U_vld_out;

assign readPSN_l_V_TREADY = regslice_both_readPSN_l_V_U_ack_in;

assign read_r_4_fu_313_p1 = readPSN_l_V_TDATA_int_regslice[19:0];

assign read_r_5_fu_591_p1 = readPSN_l_V_TDATA_int_regslice[19:0];

assign read_r_fu_450_p1 = readPSN_l_V_TDATA_int_regslice[19:0];

assign ret_1_fu_663_p2 = (zext_ln1347_7_fu_615_p1 - zext_ln44_4_fu_631_p1);

assign ret_fu_379_p2 = (zext_ln1347_4_fu_331_p1 - zext_ln44_2_fu_347_p1);

assign select_ln878_1_fu_558_p3 = ((and_ln878_fu_526_p2[0:0] == 1'b1) ? sub_ln44_fu_492_p2 : sext_ln878_fu_522_p1);

assign select_ln878_2_fu_566_p3 = ((xor_ln878_1_fu_552_p2[0:0] == 1'b1) ? select_ln878_fu_544_p3 : select_ln878_1_fu_558_p3);

assign select_ln878_3_fu_407_p3 = ((and_ln878_3_fu_401_p2[0:0] == 1'b1) ? sub_ln44_1_fu_355_p2 : sub_ln46_1_fu_373_p2);

assign select_ln878_4_fu_421_p3 = ((and_ln878_2_fu_389_p2[0:0] == 1'b1) ? sub_ln44_1_fu_355_p2 : sext_ln878_1_fu_385_p1);

assign select_ln878_5_fu_429_p3 = ((xor_ln878_3_fu_415_p2[0:0] == 1'b1) ? select_ln878_3_fu_407_p3 : select_ln878_4_fu_421_p3);

assign select_ln878_6_fu_691_p3 = ((and_ln878_5_fu_685_p2[0:0] == 1'b1) ? sub_ln44_2_fu_639_p2 : sub_ln46_2_fu_657_p2);

assign select_ln878_7_fu_705_p3 = ((and_ln878_4_fu_673_p2[0:0] == 1'b1) ? sub_ln44_2_fu_639_p2 : sext_ln1347_fu_669_p1);

assign select_ln878_8_fu_713_p3 = ((xor_ln878_5_fu_699_p2[0:0] == 1'b1) ? select_ln878_6_fu_691_p3 : select_ln878_7_fu_705_p3);

assign select_ln878_fu_544_p3 = ((and_ln878_1_fu_538_p2[0:0] == 1'b1) ? sub_ln44_fu_492_p2 : sub_ln46_fu_510_p2);

assign sext_ln1347_fu_669_p1 = $signed(ret_1_fu_663_p2);

assign sext_ln878_1_fu_385_p1 = $signed(ret_fu_379_p2);

assign sext_ln878_fu_522_p1 = $signed(sub_ln1347_fu_516_p2);

assign stopUserData_read_read_fu_146_p2 = stopUserData;

assign sub_ln1347_fu_516_p2 = (zext_ln1347_1_fu_468_p1 - zext_ln44_fu_484_p1);

assign sub_ln44_1_fu_355_p2 = (zext_ln1347_5_fu_343_p1 - zext_ln44_3_fu_351_p1);

assign sub_ln44_2_fu_639_p2 = (zext_ln1347_8_fu_627_p1 - zext_ln44_5_fu_635_p1);

assign sub_ln44_fu_492_p2 = (zext_ln1347_2_fu_480_p1 - zext_ln44_1_fu_488_p1);

assign sub_ln46_1_fu_373_p2 = (zext_ln46_1_fu_369_p1 - zext_ln1347_3_fu_327_p1);

assign sub_ln46_2_fu_657_p2 = (zext_ln46_2_fu_653_p1 - zext_ln1347_6_fu_611_p1);

assign sub_ln46_fu_510_p2 = (zext_ln46_fu_506_p1 - zext_ln1347_fu_464_p1);

assign tmp_7_fu_797_p8 = {{{{{{{trunc_ln164_4_reg_865}, {6'd0}}, {trunc_ln164_3_reg_860}}, {3'd0}}, {tmp_reg_870}}, {14'd0}}, {trunc_ln164_reg_855}};

assign trunc_ln164_fu_735_p1 = nacANDretranssmitHeader_s_V_TDATA_int_regslice[1:0];

assign userDataSize_s_V_TREADY = regslice_both_userDataSize_s_V_U_ack_in;

assign userDataSize_s_V_read_nbread_fu_184_p2_0 = userDataSize_s_V_TVALID_int_regslice;

assign userData_s_TREADY = regslice_both_userData_s_V_data_V_U_ack_in;

assign writePSN_l_V_TREADY = regslice_both_writePSN_l_V_U_ack_in;

assign write_r_4_fu_317_p1 = writePSN_l_V_TDATA_int_regslice[19:0];

assign write_r_5_fu_595_p1 = writePSN_l_V_TDATA_int_regslice[19:0];

assign write_r_fu_454_p1 = writePSN_l_V_TDATA_int_regslice[19:0];

assign xor_ln878_1_fu_552_p2 = (icmp_ln878_1_fu_458_p2 ^ grp_fu_226_p2);

assign xor_ln878_2_fu_395_p2 = (grp_fu_226_p2 ^ 1'd1);

assign xor_ln878_3_fu_415_p2 = (icmp_ln878_3_fu_321_p2 ^ grp_fu_226_p2);

assign xor_ln878_4_fu_679_p2 = (icmp_ln878_4_fu_599_p2 ^ 1'd1);

assign xor_ln878_5_fu_699_p2 = (icmp_ln878_5_fu_605_p2 ^ icmp_ln878_4_fu_599_p2);

assign xor_ln878_fu_532_p2 = (grp_fu_226_p2 ^ 1'd1);

assign zext_ln1347_1_fu_468_p1 = write_r_fu_454_p1;

assign zext_ln1347_2_fu_480_p1 = or_ln1_fu_472_p3;

assign zext_ln1347_3_fu_327_p1 = write_r_4_fu_317_p1;

assign zext_ln1347_4_fu_331_p1 = write_r_4_fu_317_p1;

assign zext_ln1347_5_fu_343_p1 = or_ln1347_2_fu_335_p3;

assign zext_ln1347_6_fu_611_p1 = write_r_5_fu_595_p1;

assign zext_ln1347_7_fu_615_p1 = write_r_5_fu_595_p1;

assign zext_ln1347_8_fu_627_p1 = or_ln1347_3_fu_619_p3;

assign zext_ln1347_fu_464_p1 = write_r_fu_454_p1;

assign zext_ln174_fu_822_p1 = or_ln_fu_812_p5;

assign zext_ln44_1_fu_488_p1 = read_r_fu_450_p1;

assign zext_ln44_2_fu_347_p1 = read_r_4_fu_313_p1;

assign zext_ln44_3_fu_351_p1 = read_r_4_fu_313_p1;

assign zext_ln44_4_fu_631_p1 = read_r_5_fu_591_p1;

assign zext_ln44_5_fu_635_p1 = read_r_5_fu_591_p1;

assign zext_ln44_fu_484_p1 = read_r_fu_450_p1;

assign zext_ln46_1_fu_369_p1 = or_ln1346_2_fu_361_p3;

assign zext_ln46_2_fu_653_p1 = or_ln1346_3_fu_645_p3;

assign zext_ln46_fu_506_p1 = or_ln2_fu_498_p3;

endmodule //tx_syncroniceWritesAndInterconnect_dev
