// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Checksum_forRDMA_Checksum_forRDMA,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.176188,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2507,HLS_SYN_LUT=16653,HLS_VERSION=2022_1}" *)

module Checksum_forRDMA (
        ap_clk,
        ap_rst_n,
        p_in_TDATA,
        p_in_TVALID,
        p_in_TREADY,
        p_in_TKEEP,
        p_in_TSTRB,
        p_in_TLAST,
        p_out_TDATA,
        p_out_TVALID,
        p_out_TREADY,
        p_out_TKEEP,
        p_out_TSTRB,
        p_out_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [511:0] p_in_TDATA;
input   p_in_TVALID;
output   p_in_TREADY;
input  [63:0] p_in_TKEEP;
input  [63:0] p_in_TSTRB;
input  [0:0] p_in_TLAST;
output  [511:0] p_out_TDATA;
output   p_out_TVALID;
input   p_out_TREADY;
output  [63:0] p_out_TKEEP;
output  [63:0] p_out_TSTRB;
output  [0:0] p_out_TLAST;

 reg    ap_rst_n_inv;
reg   [0:0] isFirst_V;
reg   [31:0] Validbytes;
reg   [31:0] crc_counter_V;
reg    p_out_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0;
reg   [0:0] p_vld_reg_1032;
reg   [0:0] p_vld_reg_1032_pp0_iter3_reg;
reg   [0:0] isFirst_V_load_reg_1062;
reg   [0:0] isFirst_V_load_reg_1062_pp0_iter3_reg;
reg   [0:0] icmp_ln32_reg_1074;
reg   [0:0] icmp_ln32_reg_1074_pp0_iter3_reg;
reg   [0:0] tmp_last_V_reg_1055;
reg   [0:0] tmp_last_V_reg_1055_pp0_iter3_reg;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] p_vld_reg_1032_pp0_iter4_reg;
reg   [0:0] isFirst_V_load_reg_1062_pp0_iter4_reg;
reg   [0:0] icmp_ln32_reg_1074_pp0_iter4_reg;
reg   [0:0] tmp_last_V_reg_1055_pp0_iter4_reg;
reg   [0:0] icmp_ln47_reg_1066;
reg   [0:0] icmp_ln47_reg_1066_pp0_iter3_reg;
reg   [0:0] or_ln48_reg_1070;
reg   [0:0] or_ln48_reg_1070_pp0_iter3_reg;
reg   [0:0] icmp_ln47_reg_1066_pp0_iter4_reg;
reg   [0:0] or_ln48_reg_1070_pp0_iter4_reg;
wire   [0:0] p_vld_fu_322_p1;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_predicate_op156_write_state5;
reg    ap_predicate_op157_write_state5;
reg    ap_predicate_op159_write_state5;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state5_io;
reg    ap_predicate_op160_write_state6;
reg    ap_predicate_op161_write_state6;
reg    ap_predicate_op162_write_state6;
wire    regslice_both_p_out_V_data_V_U_apdone_blk;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] p_vld_reg_1032_pp0_iter1_reg;
reg   [0:0] p_vld_reg_1032_pp0_iter2_reg;
reg   [511:0] tmp_data_V_reg_1036;
reg   [511:0] tmp_data_V_reg_1036_pp0_iter1_reg;
reg   [511:0] tmp_data_V_reg_1036_pp0_iter2_reg;
reg   [511:0] tmp_data_V_reg_1036_pp0_iter3_reg;
reg   [63:0] tmp_keep_V_reg_1045;
reg   [63:0] tmp_keep_V_reg_1045_pp0_iter1_reg;
reg   [63:0] tmp_keep_V_reg_1045_pp0_iter2_reg;
reg   [63:0] tmp_keep_V_reg_1045_pp0_iter3_reg;
reg   [63:0] tmp_strb_V_reg_1050;
reg   [63:0] tmp_strb_V_reg_1050_pp0_iter1_reg;
reg   [63:0] tmp_strb_V_reg_1050_pp0_iter2_reg;
reg   [63:0] tmp_strb_V_reg_1050_pp0_iter3_reg;
wire   [0:0] tmp_last_V_fu_338_p1;
reg   [0:0] tmp_last_V_reg_1055_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_1055_pp0_iter2_reg;
wire   [0:0] isFirst_V_load_load_fu_342_p1;
reg   [0:0] isFirst_V_load_reg_1062_pp0_iter1_reg;
reg   [0:0] isFirst_V_load_reg_1062_pp0_iter2_reg;
wire   [0:0] icmp_ln47_fu_364_p2;
reg   [0:0] icmp_ln47_reg_1066_pp0_iter1_reg;
reg   [0:0] icmp_ln47_reg_1066_pp0_iter2_reg;
wire   [0:0] or_ln48_fu_399_p2;
reg   [0:0] or_ln48_reg_1070_pp0_iter1_reg;
reg   [0:0] or_ln48_reg_1070_pp0_iter2_reg;
wire   [0:0] icmp_ln32_fu_460_p2;
reg   [0:0] icmp_ln32_reg_1074_pp0_iter1_reg;
reg   [0:0] icmp_ln32_reg_1074_pp0_iter2_reg;
wire   [6:0] trunc_ln63_fu_484_p1;
reg   [6:0] trunc_ln63_reg_1078;
reg   [6:0] trunc_ln63_reg_1078_pp0_iter1_reg;
wire   [6:0] trunc_ln63_1_fu_488_p1;
reg   [6:0] trunc_ln63_1_reg_1083;
reg   [6:0] trunc_ln63_1_reg_1083_pp0_iter1_reg;
wire  signed [20:0] add_ln63_fu_504_p2;
reg  signed [20:0] add_ln63_reg_1088;
wire   [9:0] trunc_ln674_fu_510_p1;
reg   [9:0] trunc_ln674_reg_1093;
wire   [0:0] icmp_ln414_fu_514_p2;
reg   [0:0] icmp_ln414_reg_1099;
reg   [0:0] icmp_ln414_reg_1099_pp0_iter1_reg;
reg   [0:0] icmp_ln414_reg_1099_pp0_iter2_reg;
wire   [9:0] sub_ln674_2_fu_603_p2;
reg   [9:0] sub_ln674_2_reg_1110;
wire   [511:0] lshr_ln674_fu_613_p2;
reg   [511:0] lshr_ln674_reg_1115;
wire   [31:0] tmp_24_fu_881_p2;
reg   [31:0] tmp_24_reg_1120;
wire   [9:0] tmp_22_fu_894_p3;
reg   [9:0] tmp_22_reg_1125;
wire   [9:0] add_ln414_fu_901_p2;
reg   [9:0] add_ln414_reg_1132;
wire   [9:0] sub_ln414_fu_907_p2;
reg   [9:0] sub_ln414_reg_1138;
wire   [511:0] p_Result_1_fu_1020_p2;
reg   [511:0] p_Result_1_reg_1143;
wire   [511:0] p_temp_data_V_fu_1026_p3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] ap_phi_mux_isFirst_V_flag_0_phi_fu_210_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_isFirst_V_flag_0_reg_207;
reg   [0:0] ap_phi_mux_Validbytes_flag_1_phi_fu_227_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_Validbytes_flag_1_reg_224;
reg   [31:0] ap_phi_mux_Validbytes_new_1_phi_fu_244_p8;
wire   [31:0] add_ln57_fu_370_p2;
wire   [31:0] ap_phi_reg_pp0_iter0_Validbytes_new_1_reg_241;
wire  signed [31:0] add_ln41_cast_fu_472_p1;
wire  signed [31:0] sext_ln32_fu_454_p1;
reg   [16:0] ap_phi_mux_lastbyteOfdata_2_phi_fu_258_p8;
wire   [16:0] zext_ln16_fu_411_p1;
wire   [16:0] ap_phi_reg_pp0_iter0_lastbyteOfdata_2_reg_255;
wire   [16:0] lastbyteOfdata_fu_477_p2;
reg   [0:0] ap_phi_mux_Validbytes_flag_3_phi_fu_273_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_Validbytes_flag_3_reg_270;
reg   [31:0] ap_phi_mux_Validbytes_new_3_phi_fu_290_p8;
wire   [31:0] ap_phi_reg_pp0_iter0_Validbytes_new_3_reg_287;
wire   [8:0] ap_phi_reg_pp0_iter0_startbyteOfdata_reg_303;
reg   [8:0] ap_phi_reg_pp0_iter1_startbyteOfdata_reg_303;
wire   [0:0] or_ln314_fu_520_p2;
wire   [31:0] select_ln314_fu_913_p3;
wire   [0:0] empty_nbread_fu_178_p5_0;
reg    ap_block_pp0_stage0_01001;
wire   [25:0] tmp_2_fu_354_p4;
wire   [29:0] tmp_3_fu_377_p4;
wire   [0:0] icmp_ln48_fu_387_p2;
wire   [0:0] xor_ln947_fu_393_p2;
wire   [5:0] trunc_ln21_fu_350_p1;
wire   [5:0] lastbyteOfdata_1_fu_405_p2;
wire   [7:0] tmp_fu_426_p4;
wire   [7:0] tmp_s_fu_416_p4;
wire   [15:0] tmp_1_fu_436_p3;
wire   [16:0] zext_ln29_fu_444_p1;
wire  signed [16:0] add_ln29_fu_448_p2;
wire   [16:0] add_ln41_fu_466_p2;
wire   [19:0] shl_ln_fu_492_p3;
wire   [20:0] zext_ln63_fu_500_p1;
wire   [31:0] zext_ln16_1_fu_538_p1;
wire  signed [31:0] sext_ln674_fu_542_p1;
wire   [9:0] zext_ln674_fu_551_p1;
wire   [0:0] icmp_ln674_fu_545_p2;
wire   [9:0] sub_ln674_fu_564_p2;
wire   [9:0] sub_ln674_1_fu_575_p2;
reg   [511:0] tmp_4_fu_555_p4;
wire   [9:0] xor_ln674_fu_569_p2;
wire   [9:0] select_ln674_fu_580_p3;
wire   [9:0] select_ln674_2_fu_595_p3;
wire   [511:0] select_ln674_1_fu_588_p3;
wire   [511:0] zext_ln674_1_fu_609_p1;
wire   [511:0] zext_ln674_2_fu_619_p1;
wire   [511:0] lshr_ln674_1_fu_622_p2;
wire   [511:0] p_Result_s_fu_628_p2;
wire   [31:0] tmp_17_fu_761_p4;
wire   [31:0] tmp_18_fu_771_p4;
wire   [31:0] tmp_16_fu_751_p4;
wire   [31:0] xor_ln1545_1_fu_797_p2;
wire   [31:0] xor_ln1545_fu_791_p2;
wire   [31:0] tmp_15_fu_741_p4;
wire   [31:0] tmp_12_fu_711_p4;
wire   [31:0] tmp_11_fu_701_p4;
wire   [31:0] tmp_14_fu_731_p4;
wire   [31:0] xor_ln1545_4_fu_815_p2;
wire   [31:0] xor_ln1545_3_fu_809_p2;
wire   [31:0] xor_ln1545_5_fu_821_p2;
wire   [31:0] xor_ln1545_2_fu_803_p2;
wire   [31:0] tmp_13_fu_721_p4;
wire   [31:0] trunc_ln674_1_fu_633_p1;
wire   [31:0] tmp_6_fu_651_p4;
wire   [31:0] tmp_5_fu_641_p4;
wire   [31:0] xor_ln1545_8_fu_839_p2;
wire   [31:0] xor_ln1545_7_fu_833_p2;
wire   [31:0] tmp_8_fu_671_p4;
wire   [31:0] tmp_7_fu_661_p4;
wire   [31:0] tmp_9_fu_681_p4;
wire   [31:0] tmp_20_fu_781_p4;
wire   [31:0] xor_ln1545_11_fu_857_p2;
wire   [31:0] tmp_10_fu_691_p4;
wire   [31:0] xor_ln1545_12_fu_863_p2;
wire   [31:0] xor_ln1545_10_fu_851_p2;
wire   [31:0] xor_ln1545_13_fu_869_p2;
wire   [31:0] xor_ln1545_9_fu_845_p2;
wire   [31:0] xor_ln1545_14_fu_875_p2;
wire   [31:0] xor_ln1545_6_fu_827_p2;
wire   [9:0] tmp_19_fu_887_p3;
wire   [9:0] select_ln414_fu_929_p3;
wire   [9:0] select_ln414_2_fu_939_p3;
wire   [9:0] select_ln414_1_fu_934_p3;
wire   [9:0] sub_ln414_1_fu_944_p2;
wire   [511:0] zext_ln232_fu_926_p1;
wire   [511:0] zext_ln414_fu_950_p1;
wire   [511:0] shl_ln414_fu_962_p2;
reg   [511:0] tmp_23_fu_968_p4;
wire   [511:0] zext_ln414_1_fu_954_p1;
wire   [511:0] zext_ln414_2_fu_958_p1;
wire   [511:0] shl_ln414_1_fu_985_p2;
wire   [511:0] lshr_ln414_fu_991_p2;
wire   [511:0] and_ln414_fu_997_p2;
wire   [511:0] xor_ln414_fu_1003_p2;
wire   [511:0] select_ln414_3_fu_978_p3;
wire   [511:0] and_ln414_1_fu_1009_p2;
wire   [511:0] and_ln414_2_fu_1014_p2;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_p_in_V_data_V_U_apdone_blk;
wire   [511:0] p_in_TDATA_int_regslice;
wire    p_in_TVALID_int_regslice;
reg    p_in_TREADY_int_regslice;
wire    regslice_both_p_in_V_data_V_U_ack_in;
wire    regslice_both_p_in_V_keep_V_U_apdone_blk;
wire   [63:0] p_in_TKEEP_int_regslice;
wire    regslice_both_p_in_V_keep_V_U_vld_out;
wire    regslice_both_p_in_V_keep_V_U_ack_in;
wire    regslice_both_p_in_V_strb_V_U_apdone_blk;
wire   [63:0] p_in_TSTRB_int_regslice;
wire    regslice_both_p_in_V_strb_V_U_vld_out;
wire    regslice_both_p_in_V_strb_V_U_ack_in;
wire    regslice_both_p_in_V_last_V_U_apdone_blk;
wire   [0:0] p_in_TLAST_int_regslice;
wire    regslice_both_p_in_V_last_V_U_vld_out;
wire    regslice_both_p_in_V_last_V_U_ack_in;
reg   [511:0] p_out_TDATA_int_regslice;
reg    p_out_TVALID_int_regslice;
wire    p_out_TREADY_int_regslice;
wire    regslice_both_p_out_V_data_V_U_vld_out;
wire    regslice_both_p_out_V_keep_V_U_apdone_blk;
wire    regslice_both_p_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_p_out_V_keep_V_U_vld_out;
wire    regslice_both_p_out_V_strb_V_U_apdone_blk;
wire    regslice_both_p_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_p_out_V_strb_V_U_vld_out;
wire    regslice_both_p_out_V_last_V_U_apdone_blk;
reg   [0:0] p_out_TLAST_int_regslice;
wire    regslice_both_p_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_p_out_V_last_V_U_vld_out;
reg    ap_condition_1059;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 isFirst_V = 1'd1;
#0 Validbytes = 32'd0;
#0 crc_counter_V = 32'd0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Checksum_forRDMA_regslice_both #(
    .DataWidth( 512 ))
regslice_both_p_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_in_TDATA),
    .vld_in(p_in_TVALID),
    .ack_in(regslice_both_p_in_V_data_V_U_ack_in),
    .data_out(p_in_TDATA_int_regslice),
    .vld_out(p_in_TVALID_int_regslice),
    .ack_out(p_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_p_in_V_data_V_U_apdone_blk)
);

Checksum_forRDMA_regslice_both #(
    .DataWidth( 64 ))
regslice_both_p_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_in_TKEEP),
    .vld_in(p_in_TVALID),
    .ack_in(regslice_both_p_in_V_keep_V_U_ack_in),
    .data_out(p_in_TKEEP_int_regslice),
    .vld_out(regslice_both_p_in_V_keep_V_U_vld_out),
    .ack_out(p_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_p_in_V_keep_V_U_apdone_blk)
);

Checksum_forRDMA_regslice_both #(
    .DataWidth( 64 ))
regslice_both_p_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_in_TSTRB),
    .vld_in(p_in_TVALID),
    .ack_in(regslice_both_p_in_V_strb_V_U_ack_in),
    .data_out(p_in_TSTRB_int_regslice),
    .vld_out(regslice_both_p_in_V_strb_V_U_vld_out),
    .ack_out(p_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_p_in_V_strb_V_U_apdone_blk)
);

Checksum_forRDMA_regslice_both #(
    .DataWidth( 1 ))
regslice_both_p_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_in_TLAST),
    .vld_in(p_in_TVALID),
    .ack_in(regslice_both_p_in_V_last_V_U_ack_in),
    .data_out(p_in_TLAST_int_regslice),
    .vld_out(regslice_both_p_in_V_last_V_U_vld_out),
    .ack_out(p_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_p_in_V_last_V_U_apdone_blk)
);

Checksum_forRDMA_regslice_both #(
    .DataWidth( 512 ))
regslice_both_p_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_out_TDATA_int_regslice),
    .vld_in(p_out_TVALID_int_regslice),
    .ack_in(p_out_TREADY_int_regslice),
    .data_out(p_out_TDATA),
    .vld_out(regslice_both_p_out_V_data_V_U_vld_out),
    .ack_out(p_out_TREADY),
    .apdone_blk(regslice_both_p_out_V_data_V_U_apdone_blk)
);

Checksum_forRDMA_regslice_both #(
    .DataWidth( 64 ))
regslice_both_p_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_keep_V_reg_1045_pp0_iter3_reg),
    .vld_in(p_out_TVALID_int_regslice),
    .ack_in(regslice_both_p_out_V_keep_V_U_ack_in_dummy),
    .data_out(p_out_TKEEP),
    .vld_out(regslice_both_p_out_V_keep_V_U_vld_out),
    .ack_out(p_out_TREADY),
    .apdone_blk(regslice_both_p_out_V_keep_V_U_apdone_blk)
);

Checksum_forRDMA_regslice_both #(
    .DataWidth( 64 ))
regslice_both_p_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_strb_V_reg_1050_pp0_iter3_reg),
    .vld_in(p_out_TVALID_int_regslice),
    .ack_in(regslice_both_p_out_V_strb_V_U_ack_in_dummy),
    .data_out(p_out_TSTRB),
    .vld_out(regslice_both_p_out_V_strb_V_U_vld_out),
    .ack_out(p_out_TREADY),
    .apdone_blk(regslice_both_p_out_V_strb_V_U_apdone_blk)
);

Checksum_forRDMA_regslice_both #(
    .DataWidth( 1 ))
regslice_both_p_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_out_TLAST_int_regslice),
    .vld_in(p_out_TVALID_int_regslice),
    .ack_in(regslice_both_p_out_V_last_V_U_ack_in_dummy),
    .data_out(p_out_TLAST),
    .vld_out(regslice_both_p_out_V_last_V_U_vld_out),
    .ack_out(p_out_TREADY),
    .apdone_blk(regslice_both_p_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_fu_460_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_fu_322_p1 == 1'd1)) | ((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_fu_460_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_fu_322_p1 == 1'd1)))) begin
        ap_phi_reg_pp0_iter1_startbyteOfdata_reg_303 <= 9'd336;
    end else if ((((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_364_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_fu_322_p1 == 1'd1)) | ((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln48_fu_399_p2 == 1'd0) & (icmp_ln47_fu_364_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_fu_322_p1 == 1'd1)))) begin
        ap_phi_reg_pp0_iter1_startbyteOfdata_reg_303 <= 9'd0;
    end else if (((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_startbyteOfdata_reg_303 <= ap_phi_reg_pp0_iter0_startbyteOfdata_reg_303;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_Validbytes_flag_3_phi_fu_273_p8 == 1'd1) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Validbytes <= ap_phi_mux_Validbytes_new_3_phi_fu_290_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & ((((icmp_ln47_reg_1066_pp0_iter1_reg == 1'd0) & (tmp_last_V_reg_1055_pp0_iter1_reg == 1'd1) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1)) | ((or_ln48_reg_1070_pp0_iter1_reg == 1'd0) & (tmp_last_V_reg_1055_pp0_iter1_reg == 1'd1) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1))) | ((isFirst_V_load_reg_1062_pp0_iter1_reg == 1'd1) & (tmp_last_V_reg_1055_pp0_iter1_reg == 1'd1) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1))))) begin
        add_ln414_reg_1132[9 : 3] <= add_ln414_fu_901_p2[9 : 3];
        tmp_22_reg_1125[9 : 3] <= tmp_22_fu_894_p3[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((((icmp_ln32_fu_460_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1)) | ((isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1))) | ((or_ln48_fu_399_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1))) | ((icmp_ln47_fu_364_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1))))) begin
        add_ln63_reg_1088[20 : 3] <= add_ln63_fu_504_p2[20 : 3];
        icmp_ln414_reg_1099 <= icmp_ln414_fu_514_p2;
        trunc_ln63_1_reg_1083 <= trunc_ln63_1_fu_488_p1;
        trunc_ln63_reg_1078 <= trunc_ln63_fu_484_p1;
        trunc_ln674_reg_1093[9 : 3] <= trunc_ln674_fu_510_p1[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (((((icmp_ln32_reg_1074_pp0_iter1_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter1_reg == 1'd1) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1)) | ((isFirst_V_load_reg_1062_pp0_iter1_reg == 1'd1) & (tmp_last_V_reg_1055_pp0_iter1_reg == 1'd1) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1))) | ((or_ln48_reg_1070_pp0_iter1_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter1_reg == 1'd0) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1))) | ((icmp_ln47_reg_1066_pp0_iter1_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter1_reg == 1'd0) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1))))) begin
        crc_counter_V <= select_ln314_fu_913_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_fu_322_p1 == 1'd1))) begin
        icmp_ln32_reg_1074 <= icmp_ln32_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln32_reg_1074_pp0_iter1_reg <= icmp_ln32_reg_1074;
        icmp_ln414_reg_1099_pp0_iter1_reg <= icmp_ln414_reg_1099;
        icmp_ln47_reg_1066_pp0_iter1_reg <= icmp_ln47_reg_1066;
        isFirst_V_load_reg_1062_pp0_iter1_reg <= isFirst_V_load_reg_1062;
        or_ln48_reg_1070_pp0_iter1_reg <= or_ln48_reg_1070;
        p_vld_reg_1032 <= empty_nbread_fu_178_p5_0;
        p_vld_reg_1032_pp0_iter1_reg <= p_vld_reg_1032;
        tmp_data_V_reg_1036 <= p_in_TDATA_int_regslice;
        tmp_data_V_reg_1036_pp0_iter1_reg <= tmp_data_V_reg_1036;
        tmp_keep_V_reg_1045 <= p_in_TKEEP_int_regslice;
        tmp_keep_V_reg_1045_pp0_iter1_reg <= tmp_keep_V_reg_1045;
        tmp_last_V_reg_1055 <= p_in_TLAST_int_regslice;
        tmp_last_V_reg_1055_pp0_iter1_reg <= tmp_last_V_reg_1055;
        tmp_strb_V_reg_1050 <= p_in_TSTRB_int_regslice;
        tmp_strb_V_reg_1050_pp0_iter1_reg <= tmp_strb_V_reg_1050;
        trunc_ln63_1_reg_1083_pp0_iter1_reg <= trunc_ln63_1_reg_1083;
        trunc_ln63_reg_1078_pp0_iter1_reg <= trunc_ln63_reg_1078;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln32_reg_1074_pp0_iter2_reg <= icmp_ln32_reg_1074_pp0_iter1_reg;
        icmp_ln32_reg_1074_pp0_iter3_reg <= icmp_ln32_reg_1074_pp0_iter2_reg;
        icmp_ln32_reg_1074_pp0_iter4_reg <= icmp_ln32_reg_1074_pp0_iter3_reg;
        icmp_ln414_reg_1099_pp0_iter2_reg <= icmp_ln414_reg_1099_pp0_iter1_reg;
        icmp_ln47_reg_1066_pp0_iter2_reg <= icmp_ln47_reg_1066_pp0_iter1_reg;
        icmp_ln47_reg_1066_pp0_iter3_reg <= icmp_ln47_reg_1066_pp0_iter2_reg;
        icmp_ln47_reg_1066_pp0_iter4_reg <= icmp_ln47_reg_1066_pp0_iter3_reg;
        isFirst_V_load_reg_1062_pp0_iter2_reg <= isFirst_V_load_reg_1062_pp0_iter1_reg;
        isFirst_V_load_reg_1062_pp0_iter3_reg <= isFirst_V_load_reg_1062_pp0_iter2_reg;
        isFirst_V_load_reg_1062_pp0_iter4_reg <= isFirst_V_load_reg_1062_pp0_iter3_reg;
        or_ln48_reg_1070_pp0_iter2_reg <= or_ln48_reg_1070_pp0_iter1_reg;
        or_ln48_reg_1070_pp0_iter3_reg <= or_ln48_reg_1070_pp0_iter2_reg;
        or_ln48_reg_1070_pp0_iter4_reg <= or_ln48_reg_1070_pp0_iter3_reg;
        p_vld_reg_1032_pp0_iter2_reg <= p_vld_reg_1032_pp0_iter1_reg;
        p_vld_reg_1032_pp0_iter3_reg <= p_vld_reg_1032_pp0_iter2_reg;
        p_vld_reg_1032_pp0_iter4_reg <= p_vld_reg_1032_pp0_iter3_reg;
        tmp_data_V_reg_1036_pp0_iter2_reg <= tmp_data_V_reg_1036_pp0_iter1_reg;
        tmp_data_V_reg_1036_pp0_iter3_reg <= tmp_data_V_reg_1036_pp0_iter2_reg;
        tmp_keep_V_reg_1045_pp0_iter2_reg <= tmp_keep_V_reg_1045_pp0_iter1_reg;
        tmp_keep_V_reg_1045_pp0_iter3_reg <= tmp_keep_V_reg_1045_pp0_iter2_reg;
        tmp_last_V_reg_1055_pp0_iter2_reg <= tmp_last_V_reg_1055_pp0_iter1_reg;
        tmp_last_V_reg_1055_pp0_iter3_reg <= tmp_last_V_reg_1055_pp0_iter2_reg;
        tmp_last_V_reg_1055_pp0_iter4_reg <= tmp_last_V_reg_1055_pp0_iter3_reg;
        tmp_strb_V_reg_1050_pp0_iter2_reg <= tmp_strb_V_reg_1050_pp0_iter1_reg;
        tmp_strb_V_reg_1050_pp0_iter3_reg <= tmp_strb_V_reg_1050_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_fu_322_p1 == 1'd1))) begin
        icmp_ln47_reg_1066 <= icmp_ln47_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((((or_ln314_fu_520_p2 == 1'd1) & (icmp_ln32_fu_460_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1)) | ((or_ln314_fu_520_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1))) | ((or_ln314_fu_520_p2 == 1'd1) & (or_ln48_fu_399_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1))) | ((or_ln314_fu_520_p2 == 1'd1) & (icmp_ln47_fu_364_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1))))) begin
        isFirst_V <= p_in_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_fu_322_p1 == 1'd1))) begin
        isFirst_V_load_reg_1062 <= isFirst_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((((icmp_ln32_reg_1074 == 1'd0) & (isFirst_V_load_reg_1062 == 1'd1) & (p_vld_reg_1032 == 1'd1)) | ((tmp_last_V_reg_1055 == 1'd1) & (isFirst_V_load_reg_1062 == 1'd1) & (p_vld_reg_1032 == 1'd1))) | ((or_ln48_reg_1070 == 1'd0) & (isFirst_V_load_reg_1062 == 1'd0) & (p_vld_reg_1032 == 1'd1))) | ((icmp_ln47_reg_1066 == 1'd0) & (isFirst_V_load_reg_1062 == 1'd0) & (p_vld_reg_1032 == 1'd1))))) begin
        lshr_ln674_reg_1115 <= lshr_ln674_fu_613_p2;
        sub_ln674_2_reg_1110 <= sub_ln674_2_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln47_fu_364_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_fu_322_p1 == 1'd1))) begin
        or_ln48_reg_1070 <= or_ln48_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & ((((icmp_ln47_reg_1066_pp0_iter2_reg == 1'd0) & (tmp_last_V_reg_1055_pp0_iter2_reg == 1'd1) & (p_vld_reg_1032_pp0_iter2_reg == 1'd1)) | ((or_ln48_reg_1070_pp0_iter2_reg == 1'd0) & (tmp_last_V_reg_1055_pp0_iter2_reg == 1'd1) & (p_vld_reg_1032_pp0_iter2_reg == 1'd1))) | ((isFirst_V_load_reg_1062_pp0_iter2_reg == 1'd1) & (tmp_last_V_reg_1055_pp0_iter2_reg == 1'd1) & (p_vld_reg_1032_pp0_iter2_reg == 1'd1))))) begin
        p_Result_1_reg_1143 <= p_Result_1_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & ((((icmp_ln414_reg_1099_pp0_iter1_reg == 1'd1) & (icmp_ln47_reg_1066_pp0_iter1_reg == 1'd0) & (tmp_last_V_reg_1055_pp0_iter1_reg == 1'd1) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1)) | ((icmp_ln414_reg_1099_pp0_iter1_reg == 1'd1) & (or_ln48_reg_1070_pp0_iter1_reg == 1'd0) & (tmp_last_V_reg_1055_pp0_iter1_reg == 1'd1) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1))) | ((icmp_ln414_reg_1099_pp0_iter1_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter1_reg == 1'd1) & (tmp_last_V_reg_1055_pp0_iter1_reg == 1'd1) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1))))) begin
        sub_ln414_reg_1138[9 : 3] <= sub_ln414_fu_907_p2[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (((((icmp_ln32_reg_1074_pp0_iter1_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter1_reg == 1'd1) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1)) | ((isFirst_V_load_reg_1062_pp0_iter1_reg == 1'd1) & (tmp_last_V_reg_1055_pp0_iter1_reg == 1'd1) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1))) | ((or_ln48_reg_1070_pp0_iter1_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter1_reg == 1'd0) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1))) | ((icmp_ln47_reg_1066_pp0_iter1_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter1_reg == 1'd0) & (p_vld_reg_1032_pp0_iter1_reg == 1'd1))))) begin
        tmp_24_reg_1120 <= tmp_24_fu_881_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln32_fu_460_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1)) | ((icmp_ln47_fu_364_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1)) | ((icmp_ln32_fu_460_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1)))) begin
        ap_phi_mux_Validbytes_flag_1_phi_fu_227_p8 = 1'd1;
    end else if (((or_ln48_fu_399_p2 == 1'd0) & (icmp_ln47_fu_364_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1))) begin
        ap_phi_mux_Validbytes_flag_1_phi_fu_227_p8 = 1'd0;
    end else begin
        ap_phi_mux_Validbytes_flag_1_phi_fu_227_p8 = ap_phi_reg_pp0_iter0_Validbytes_flag_1_reg_224;
    end
end

always @ (*) begin
    if ((((((icmp_ln32_fu_460_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1)) | ((isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1))) | ((or_ln48_fu_399_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1))) | ((icmp_ln47_fu_364_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1)))) begin
        ap_phi_mux_Validbytes_flag_3_phi_fu_273_p8 = ap_phi_mux_Validbytes_flag_1_phi_fu_227_p8;
    end else if (((p_vld_fu_322_p1 == 1'd0) | ((or_ln48_fu_399_p2 == 1'd1) & (icmp_ln47_fu_364_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1)))) begin
        ap_phi_mux_Validbytes_flag_3_phi_fu_273_p8 = 1'd0;
    end else if (((icmp_ln32_fu_460_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1))) begin
        ap_phi_mux_Validbytes_flag_3_phi_fu_273_p8 = 1'd1;
    end else begin
        ap_phi_mux_Validbytes_flag_3_phi_fu_273_p8 = ap_phi_reg_pp0_iter0_Validbytes_flag_3_reg_270;
    end
end

always @ (*) begin
    if ((p_vld_fu_322_p1 == 1'd1)) begin
        if ((1'b1 == ap_condition_1059)) begin
            ap_phi_mux_Validbytes_new_1_phi_fu_244_p8 = sext_ln32_fu_454_p1;
        end else if (((icmp_ln32_fu_460_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd1))) begin
            ap_phi_mux_Validbytes_new_1_phi_fu_244_p8 = add_ln41_cast_fu_472_p1;
        end else if (((icmp_ln47_fu_364_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0))) begin
            ap_phi_mux_Validbytes_new_1_phi_fu_244_p8 = add_ln57_fu_370_p2;
        end else begin
            ap_phi_mux_Validbytes_new_1_phi_fu_244_p8 = ap_phi_reg_pp0_iter0_Validbytes_new_1_reg_241;
        end
    end else begin
        ap_phi_mux_Validbytes_new_1_phi_fu_244_p8 = ap_phi_reg_pp0_iter0_Validbytes_new_1_reg_241;
    end
end

always @ (*) begin
    if ((((((icmp_ln32_fu_460_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1)) | ((isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1))) | ((or_ln48_fu_399_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1))) | ((icmp_ln47_fu_364_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1)))) begin
        ap_phi_mux_Validbytes_new_3_phi_fu_290_p8 = ap_phi_mux_Validbytes_new_1_phi_fu_244_p8;
    end else if (((icmp_ln32_fu_460_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1))) begin
        ap_phi_mux_Validbytes_new_3_phi_fu_290_p8 = sext_ln32_fu_454_p1;
    end else begin
        ap_phi_mux_Validbytes_new_3_phi_fu_290_p8 = ap_phi_reg_pp0_iter0_Validbytes_new_3_reg_287;
    end
end

always @ (*) begin
    if ((((icmp_ln32_fu_460_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1)) | ((icmp_ln32_fu_460_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1)))) begin
        ap_phi_mux_isFirst_V_flag_0_phi_fu_210_p8 = 1'd1;
    end else if ((((icmp_ln47_fu_364_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1)) | ((or_ln48_fu_399_p2 == 1'd0) & (icmp_ln47_fu_364_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1)))) begin
        ap_phi_mux_isFirst_V_flag_0_phi_fu_210_p8 = 1'd0;
    end else begin
        ap_phi_mux_isFirst_V_flag_0_phi_fu_210_p8 = ap_phi_reg_pp0_iter0_isFirst_V_flag_0_reg_207;
    end
end

always @ (*) begin
    if (((icmp_ln32_fu_460_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1))) begin
        ap_phi_mux_lastbyteOfdata_2_phi_fu_258_p8 = lastbyteOfdata_fu_477_p2;
    end else if ((((icmp_ln47_fu_364_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1)) | ((icmp_ln32_fu_460_p2 == 1'd0) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (p_vld_fu_322_p1 == 1'd1)))) begin
        ap_phi_mux_lastbyteOfdata_2_phi_fu_258_p8 = 17'd64;
    end else if (((or_ln48_fu_399_p2 == 1'd0) & (icmp_ln47_fu_364_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd0) & (p_vld_fu_322_p1 == 1'd1))) begin
        ap_phi_mux_lastbyteOfdata_2_phi_fu_258_p8 = zext_ln16_fu_411_p1;
    end else begin
        ap_phi_mux_lastbyteOfdata_2_phi_fu_258_p8 = ap_phi_reg_pp0_iter0_lastbyteOfdata_2_reg_255;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((p_in_TVALID_int_regslice == 1'b1) & (1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_in_TREADY_int_regslice = 1'b1;
    end else begin
        p_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((or_ln48_reg_1070_pp0_iter4_reg == 1'd1) & (icmp_ln47_reg_1066_pp0_iter4_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd0) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((or_ln48_reg_1070_pp0_iter3_reg == 1'd1) & (icmp_ln47_reg_1066_pp0_iter3_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd0) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((tmp_last_V_reg_1055_pp0_iter4_reg == 1'd0) & (icmp_ln32_reg_1074_pp0_iter4_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd1) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((((icmp_ln32_reg_1074_pp0_iter4_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd1) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1)) | ((tmp_last_V_reg_1055_pp0_iter4_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd1) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1))) | ((or_ln48_reg_1070_pp0_iter4_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd0) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1))) | ((icmp_ln47_reg_1066_pp0_iter4_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd0) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1)))) | ((tmp_last_V_reg_1055_pp0_iter3_reg == 1'd0) & (icmp_ln32_reg_1074_pp0_iter3_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd1) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (((((icmp_ln32_reg_1074_pp0_iter3_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd1) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1)) | ((tmp_last_V_reg_1055_pp0_iter3_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd1) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1))) | ((or_ln48_reg_1070_pp0_iter3_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd0) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1))) | ((icmp_ln47_reg_1066_pp0_iter3_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd0) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1)))))) begin
        p_out_TDATA_blk_n = p_out_TREADY_int_regslice;
    end else begin
        p_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_predicate_op159_write_state5 == 1'b1))) begin
        p_out_TDATA_int_regslice = p_temp_data_V_fu_1026_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_predicate_op157_write_state5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_predicate_op156_write_state5 == 1'b1)))) begin
        p_out_TDATA_int_regslice = tmp_data_V_reg_1036_pp0_iter3_reg;
    end else begin
        p_out_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_predicate_op157_write_state5 == 1'b1))) begin
        p_out_TLAST_int_regslice = 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_predicate_op159_write_state5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_predicate_op156_write_state5 == 1'b1)))) begin
        p_out_TLAST_int_regslice = tmp_last_V_reg_1055_pp0_iter3_reg;
    end else begin
        p_out_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_predicate_op159_write_state5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_predicate_op157_write_state5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_predicate_op156_write_state5 == 1'b1)))) begin
        p_out_TVALID_int_regslice = 1'b1;
    end else begin
        p_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln29_fu_448_p2 = ($signed(zext_ln29_fu_444_p1) + $signed(17'd131044));

assign add_ln414_fu_901_p2 = (tmp_19_fu_887_p3 + 10'd31);

assign add_ln41_cast_fu_472_p1 = $signed(add_ln41_fu_466_p2);

assign add_ln41_fu_466_p2 = ($signed(zext_ln29_fu_444_p1) + $signed(17'd131022));

assign add_ln57_fu_370_p2 = ($signed(Validbytes) + $signed(32'd4294967232));

assign add_ln63_fu_504_p2 = ($signed(zext_ln63_fu_500_p1) + $signed(21'd2097151));

assign and_ln414_1_fu_1009_p2 = (xor_ln414_fu_1003_p2 & tmp_data_V_reg_1036_pp0_iter2_reg);

assign and_ln414_2_fu_1014_p2 = (select_ln414_3_fu_978_p3 & and_ln414_fu_997_p2);

assign and_ln414_fu_997_p2 = (shl_ln414_1_fu_985_p2 & lshr_ln414_fu_991_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & ((regslice_both_p_out_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op162_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op161_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op160_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (((ap_predicate_op159_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op157_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op156_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & ((1'b1 == ap_block_state6_io) | (regslice_both_p_out_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op162_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op161_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op160_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op159_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op157_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op156_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter5 == 1'b1) & ((1'b1 == ap_block_state6_io) | (regslice_both_p_out_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op162_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op161_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op160_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op159_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op157_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op156_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = (((ap_predicate_op159_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op157_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op156_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = (((ap_predicate_op159_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op157_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op156_write_state5 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state6_io = (((ap_predicate_op162_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op161_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op160_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((regslice_both_p_out_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op162_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op161_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op160_write_state6 == 1'b1) & (p_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_1059 = ((icmp_ln32_fu_460_p2 == 1'd1) & (isFirst_V_load_load_fu_342_p1 == 1'd1) & (tmp_last_V_fu_338_p1 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_Validbytes_flag_1_reg_224 = 'bx;

assign ap_phi_reg_pp0_iter0_Validbytes_flag_3_reg_270 = 'bx;

assign ap_phi_reg_pp0_iter0_Validbytes_new_1_reg_241 = 'bx;

assign ap_phi_reg_pp0_iter0_Validbytes_new_3_reg_287 = 'bx;

assign ap_phi_reg_pp0_iter0_isFirst_V_flag_0_reg_207 = 'bx;

assign ap_phi_reg_pp0_iter0_lastbyteOfdata_2_reg_255 = 'bx;

assign ap_phi_reg_pp0_iter0_startbyteOfdata_reg_303 = 'bx;

always @ (*) begin
    ap_predicate_op156_write_state5 = ((or_ln48_reg_1070_pp0_iter3_reg == 1'd1) & (icmp_ln47_reg_1066_pp0_iter3_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd0) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op157_write_state5 = ((tmp_last_V_reg_1055_pp0_iter3_reg == 1'd0) & (icmp_ln32_reg_1074_pp0_iter3_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd1) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op159_write_state5 = (((((icmp_ln32_reg_1074_pp0_iter3_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd1) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1)) | ((tmp_last_V_reg_1055_pp0_iter3_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd1) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1))) | ((or_ln48_reg_1070_pp0_iter3_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd0) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1))) | ((icmp_ln47_reg_1066_pp0_iter3_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter3_reg == 1'd0) & (p_vld_reg_1032_pp0_iter3_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op160_write_state6 = ((or_ln48_reg_1070_pp0_iter4_reg == 1'd1) & (icmp_ln47_reg_1066_pp0_iter4_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd0) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op161_write_state6 = ((tmp_last_V_reg_1055_pp0_iter4_reg == 1'd0) & (icmp_ln32_reg_1074_pp0_iter4_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd1) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op162_write_state6 = (((((icmp_ln32_reg_1074_pp0_iter4_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd1) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1)) | ((tmp_last_V_reg_1055_pp0_iter4_reg == 1'd1) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd1) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1))) | ((or_ln48_reg_1070_pp0_iter4_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd0) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1))) | ((icmp_ln47_reg_1066_pp0_iter4_reg == 1'd0) & (isFirst_V_load_reg_1062_pp0_iter4_reg == 1'd0) & (p_vld_reg_1032_pp0_iter4_reg == 1'd1)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_nbread_fu_178_p5_0 = p_in_TVALID_int_regslice;

assign icmp_ln32_fu_460_p2 = (($signed(add_ln29_fu_448_p2) < $signed(17'd22)) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_514_p2 = ((shl_ln_fu_492_p3 > 20'd1048544) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_364_p2 = (($signed(tmp_2_fu_354_p4) < $signed(26'd1)) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_387_p2 = (($signed(tmp_3_fu_377_p4) < $signed(30'd1)) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_545_p2 = ((zext_ln16_1_fu_538_p1 > sext_ln674_fu_542_p1) ? 1'b1 : 1'b0);

assign isFirst_V_load_load_fu_342_p1 = isFirst_V;

assign lastbyteOfdata_1_fu_405_p2 = ($signed(trunc_ln21_fu_350_p1) + $signed(6'd60));

assign lastbyteOfdata_fu_477_p2 = (zext_ln29_fu_444_p1 + 17'd10);

assign lshr_ln414_fu_991_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> zext_ln414_2_fu_958_p1;

assign lshr_ln674_1_fu_622_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> zext_ln674_2_fu_619_p1;

assign lshr_ln674_fu_613_p2 = select_ln674_1_fu_588_p3 >> zext_ln674_1_fu_609_p1;

assign or_ln314_fu_520_p2 = (p_in_TLAST_int_regslice | ap_phi_mux_isFirst_V_flag_0_phi_fu_210_p8);

assign or_ln48_fu_399_p2 = (xor_ln947_fu_393_p2 | icmp_ln48_fu_387_p2);

assign p_Result_1_fu_1020_p2 = (and_ln414_2_fu_1014_p2 | and_ln414_1_fu_1009_p2);

assign p_Result_s_fu_628_p2 = (lshr_ln674_reg_1115 & lshr_ln674_1_fu_622_p2);

assign p_in_TREADY = regslice_both_p_in_V_data_V_U_ack_in;

assign p_out_TVALID = regslice_both_p_out_V_data_V_U_vld_out;

assign p_temp_data_V_fu_1026_p3 = ((tmp_last_V_reg_1055_pp0_iter3_reg[0:0] == 1'b1) ? p_Result_1_reg_1143 : tmp_data_V_reg_1036_pp0_iter3_reg);

assign p_vld_fu_322_p1 = empty_nbread_fu_178_p5_0;

assign select_ln314_fu_913_p3 = ((tmp_last_V_reg_1055_pp0_iter1_reg[0:0] == 1'b1) ? 32'd0 : tmp_24_fu_881_p2);

assign select_ln414_1_fu_934_p3 = ((icmp_ln414_reg_1099_pp0_iter2_reg[0:0] == 1'b1) ? add_ln414_reg_1132 : tmp_22_reg_1125);

assign select_ln414_2_fu_939_p3 = ((icmp_ln414_reg_1099_pp0_iter2_reg[0:0] == 1'b1) ? sub_ln414_reg_1138 : tmp_22_reg_1125);

assign select_ln414_3_fu_978_p3 = ((icmp_ln414_reg_1099_pp0_iter2_reg[0:0] == 1'b1) ? tmp_23_fu_968_p4 : shl_ln414_fu_962_p2);

assign select_ln414_fu_929_p3 = ((icmp_ln414_reg_1099_pp0_iter2_reg[0:0] == 1'b1) ? tmp_22_reg_1125 : add_ln414_reg_1132);

assign select_ln674_1_fu_588_p3 = ((icmp_ln674_fu_545_p2[0:0] == 1'b1) ? tmp_4_fu_555_p4 : tmp_data_V_reg_1036);

assign select_ln674_2_fu_595_p3 = ((icmp_ln674_fu_545_p2[0:0] == 1'b1) ? xor_ln674_fu_569_p2 : zext_ln674_fu_551_p1);

assign select_ln674_fu_580_p3 = ((icmp_ln674_fu_545_p2[0:0] == 1'b1) ? sub_ln674_fu_564_p2 : sub_ln674_1_fu_575_p2);

assign sext_ln32_fu_454_p1 = add_ln29_fu_448_p2;

assign sext_ln674_fu_542_p1 = add_ln63_reg_1088;

assign shl_ln414_1_fu_985_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 << zext_ln414_1_fu_954_p1;

assign shl_ln414_fu_962_p2 = zext_ln232_fu_926_p1 << zext_ln414_fu_950_p1;

assign shl_ln_fu_492_p3 = {{ap_phi_mux_lastbyteOfdata_2_phi_fu_258_p8}, {3'd0}};

assign sub_ln414_1_fu_944_p2 = (10'd511 - select_ln414_fu_929_p3);

assign sub_ln414_fu_907_p2 = (10'd511 - tmp_22_fu_894_p3);

assign sub_ln674_1_fu_575_p2 = (trunc_ln674_reg_1093 - zext_ln674_fu_551_p1);

assign sub_ln674_2_fu_603_p2 = (10'd511 - select_ln674_fu_580_p3);

assign sub_ln674_fu_564_p2 = (zext_ln674_fu_551_p1 - trunc_ln674_reg_1093);

assign tmp_10_fu_691_p4 = {{p_Result_s_fu_628_p2[223:192]}};

assign tmp_11_fu_701_p4 = {{p_Result_s_fu_628_p2[255:224]}};

assign tmp_12_fu_711_p4 = {{p_Result_s_fu_628_p2[287:256]}};

assign tmp_13_fu_721_p4 = {{p_Result_s_fu_628_p2[319:288]}};

assign tmp_14_fu_731_p4 = {{p_Result_s_fu_628_p2[351:320]}};

assign tmp_15_fu_741_p4 = {{p_Result_s_fu_628_p2[383:352]}};

assign tmp_16_fu_751_p4 = {{p_Result_s_fu_628_p2[415:384]}};

assign tmp_17_fu_761_p4 = {{p_Result_s_fu_628_p2[447:416]}};

assign tmp_18_fu_771_p4 = {{p_Result_s_fu_628_p2[479:448]}};

assign tmp_19_fu_887_p3 = {{trunc_ln63_1_reg_1083_pp0_iter1_reg}, {3'd0}};

assign tmp_1_fu_436_p3 = {{tmp_fu_426_p4}, {tmp_s_fu_416_p4}};

assign tmp_20_fu_781_p4 = {{p_Result_s_fu_628_p2[511:480]}};

assign tmp_22_fu_894_p3 = {{trunc_ln63_reg_1078_pp0_iter1_reg}, {3'd0}};

integer ap_tvar_int_0;

always @ (shl_ln414_fu_962_p2) begin
    for (ap_tvar_int_0 = 512 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 511 - 0) begin
            tmp_23_fu_968_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_23_fu_968_p4[ap_tvar_int_0] = shl_ln414_fu_962_p2[511 - ap_tvar_int_0];
        end
    end
end

assign tmp_24_fu_881_p2 = (xor_ln1545_6_fu_827_p2 ^ xor_ln1545_14_fu_875_p2);

assign tmp_2_fu_354_p4 = {{Validbytes[31:6]}};

assign tmp_3_fu_377_p4 = {{Validbytes[31:2]}};

integer ap_tvar_int_1;

always @ (tmp_data_V_reg_1036) begin
    for (ap_tvar_int_1 = 512 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 511 - 0) begin
            tmp_4_fu_555_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_4_fu_555_p4[ap_tvar_int_1] = tmp_data_V_reg_1036[511 - ap_tvar_int_1];
        end
    end
end

assign tmp_5_fu_641_p4 = {{p_Result_s_fu_628_p2[63:32]}};

assign tmp_6_fu_651_p4 = {{p_Result_s_fu_628_p2[95:64]}};

assign tmp_7_fu_661_p4 = {{p_Result_s_fu_628_p2[127:96]}};

assign tmp_8_fu_671_p4 = {{p_Result_s_fu_628_p2[159:128]}};

assign tmp_9_fu_681_p4 = {{p_Result_s_fu_628_p2[191:160]}};

assign tmp_fu_426_p4 = {{p_in_TDATA_int_regslice[135:128]}};

assign tmp_last_V_fu_338_p1 = p_in_TLAST_int_regslice;

assign tmp_s_fu_416_p4 = {{p_in_TDATA_int_regslice[143:136]}};

assign trunc_ln21_fu_350_p1 = Validbytes[5:0];

assign trunc_ln63_1_fu_488_p1 = ap_phi_mux_lastbyteOfdata_2_phi_fu_258_p8[6:0];

assign trunc_ln63_fu_484_p1 = ap_phi_mux_lastbyteOfdata_2_phi_fu_258_p8[6:0];

assign trunc_ln674_1_fu_633_p1 = p_Result_s_fu_628_p2[31:0];

assign trunc_ln674_fu_510_p1 = add_ln63_fu_504_p2[9:0];

assign xor_ln1545_10_fu_851_p2 = (tmp_8_fu_671_p4 ^ tmp_7_fu_661_p4);

assign xor_ln1545_11_fu_857_p2 = (tmp_9_fu_681_p4 ^ tmp_20_fu_781_p4);

assign xor_ln1545_12_fu_863_p2 = (xor_ln1545_11_fu_857_p2 ^ tmp_10_fu_691_p4);

assign xor_ln1545_13_fu_869_p2 = (xor_ln1545_12_fu_863_p2 ^ xor_ln1545_10_fu_851_p2);

assign xor_ln1545_14_fu_875_p2 = (xor_ln1545_9_fu_845_p2 ^ xor_ln1545_13_fu_869_p2);

assign xor_ln1545_1_fu_797_p2 = (tmp_18_fu_771_p4 ^ tmp_16_fu_751_p4);

assign xor_ln1545_2_fu_803_p2 = (xor_ln1545_fu_791_p2 ^ xor_ln1545_1_fu_797_p2);

assign xor_ln1545_3_fu_809_p2 = (tmp_15_fu_741_p4 ^ tmp_12_fu_711_p4);

assign xor_ln1545_4_fu_815_p2 = (tmp_14_fu_731_p4 ^ tmp_11_fu_701_p4);

assign xor_ln1545_5_fu_821_p2 = (xor_ln1545_4_fu_815_p2 ^ xor_ln1545_3_fu_809_p2);

assign xor_ln1545_6_fu_827_p2 = (xor_ln1545_5_fu_821_p2 ^ xor_ln1545_2_fu_803_p2);

assign xor_ln1545_7_fu_833_p2 = (trunc_ln674_1_fu_633_p1 ^ tmp_13_fu_721_p4);

assign xor_ln1545_8_fu_839_p2 = (tmp_6_fu_651_p4 ^ tmp_5_fu_641_p4);

assign xor_ln1545_9_fu_845_p2 = (xor_ln1545_8_fu_839_p2 ^ xor_ln1545_7_fu_833_p2);

assign xor_ln1545_fu_791_p2 = (tmp_17_fu_761_p4 ^ crc_counter_V);

assign xor_ln414_fu_1003_p2 = (512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 ^ and_ln414_fu_997_p2);

assign xor_ln674_fu_569_p2 = (zext_ln674_fu_551_p1 ^ 10'd511);

assign xor_ln947_fu_393_p2 = (p_in_TLAST_int_regslice ^ 1'd1);

assign zext_ln16_1_fu_538_p1 = ap_phi_reg_pp0_iter1_startbyteOfdata_reg_303;

assign zext_ln16_fu_411_p1 = lastbyteOfdata_1_fu_405_p2;

assign zext_ln232_fu_926_p1 = tmp_24_reg_1120;

assign zext_ln29_fu_444_p1 = tmp_1_fu_436_p3;

assign zext_ln414_1_fu_954_p1 = select_ln414_1_fu_934_p3;

assign zext_ln414_2_fu_958_p1 = sub_ln414_1_fu_944_p2;

assign zext_ln414_fu_950_p1 = select_ln414_2_fu_939_p3;

assign zext_ln63_fu_500_p1 = shl_ln_fu_492_p3;

assign zext_ln674_1_fu_609_p1 = select_ln674_2_fu_595_p3;

assign zext_ln674_2_fu_619_p1 = sub_ln674_2_reg_1110;

assign zext_ln674_fu_551_p1 = ap_phi_reg_pp0_iter1_startbyteOfdata_reg_303;

always @ (posedge ap_clk) begin
    add_ln63_reg_1088[2:0] <= 3'b111;
    trunc_ln674_reg_1093[2:0] <= 3'b111;
    tmp_22_reg_1125[2:0] <= 3'b000;
    add_ln414_reg_1132[2:0] <= 3'b111;
    sub_ln414_reg_1138[2:0] <= 3'b111;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "Checksum_forRDMA_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //Checksum_forRDMA

