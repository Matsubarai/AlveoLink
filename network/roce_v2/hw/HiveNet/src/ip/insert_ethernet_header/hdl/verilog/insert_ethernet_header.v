// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="insert_ethernet_header_insert_ethernet_header,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.599687,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2195,HLS_SYN_LUT=544,HLS_VERSION=2022_1}" *)

module insert_ethernet_header (
        ap_clk,
        ap_rst_n,
        mac_subnet,
        id_src,
        input_r_TDATA,
        input_r_TVALID,
        input_r_TREADY,
        input_r_TKEEP,
        input_r_TSTRB,
        input_r_TLAST,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY,
        output_r_TKEEP,
        output_r_TSTRB,
        output_r_TLAST,
        ip_output_TDATA,
        ip_output_TVALID,
        ip_output_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv512_lc_1 = 512'd0;

input   ap_clk;
input   ap_rst_n;
input  [47:0] mac_subnet;
input  [12:0] id_src;
input  [511:0] input_r_TDATA;
input   input_r_TVALID;
output   input_r_TREADY;
input  [63:0] input_r_TKEEP;
input  [63:0] input_r_TSTRB;
input  [0:0] input_r_TLAST;
output  [511:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;
output  [63:0] output_r_TKEEP;
output  [63:0] output_r_TSTRB;
output  [0:0] output_r_TLAST;
output  [31:0] ip_output_TDATA;
output   ip_output_TVALID;
input   ip_output_TREADY;

 reg    ap_rst_n_inv;
reg   [0:0] ls_writeRemainder;
reg   [511:0] prevWord_data_V;
reg   [63:0] prevWord_keep_V;
reg   [0:0] ls_firstWord;
reg    input_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire   [0:0] ls_writeRemainder_load_load_fu_333_p1;
wire   [0:0] tmp_1_nbreadreq_fu_204_p6;
reg    output_r_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] ls_writeRemainder_load_reg_950;
reg   [0:0] ls_writeRemainder_load_reg_950_pp0_iter1_reg;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] ls_writeRemainder_load_reg_950_pp0_iter2_reg;
reg   [0:0] tmp_1_reg_954;
reg   [0:0] tmp_1_reg_954_pp0_iter1_reg;
reg   [0:0] tmp_1_reg_954_pp0_iter2_reg;
reg    ip_output_TDATA_blk_n;
reg   [0:0] ls_firstWord_load_reg_971;
reg   [0:0] ls_firstWord_load_reg_971_pp0_iter1_reg;
reg   [0:0] ls_firstWord_load_reg_971_pp0_iter2_reg;
reg   [13:0] reg_329;
reg    ap_predicate_op10_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_predicate_op123_write_state3;
reg    ap_predicate_op128_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_predicate_op136_write_state4;
reg    ap_predicate_op137_write_state4;
wire    regslice_both_output_r_V_data_V_U_apdone_blk;
wire    regslice_both_ip_output_U_apdone_blk;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] ls_firstWord_load_load_fu_354_p1;
reg   [13:0] reg_329_pp0_iter1_reg;
reg   [511:0] tmp_data_V_reg_958;
reg   [511:0] tmp_data_V_reg_958_pp0_iter1_reg;
wire   [49:0] trunc_ln674_fu_358_p1;
reg   [49:0] trunc_ln674_reg_975;
reg   [49:0] trunc_ln674_reg_975_pp0_iter1_reg;
wire   [0:0] sendWord_last_V_fu_372_p2;
reg   [0:0] sendWord_last_V_reg_981;
reg   [0:0] sendWord_last_V_reg_981_pp0_iter1_reg;
wire   [7:0] trunc_ln674_1_fu_378_p1;
reg   [7:0] trunc_ln674_1_reg_986;
reg   [7:0] trunc_ln674_1_reg_986_pp0_iter1_reg;
reg   [7:0] tmp_3_reg_991;
reg   [7:0] tmp_3_reg_991_pp0_iter1_reg;
reg   [7:0] tmp_4_reg_996;
reg   [7:0] tmp_4_reg_996_pp0_iter1_reg;
reg   [7:0] tmp_5_reg_1002;
reg   [7:0] tmp_5_reg_1002_pp0_iter1_reg;
reg   [7:0] tmp_6_reg_1008;
reg   [7:0] tmp_6_reg_1008_pp0_iter1_reg;
reg   [7:0] tmp_7_reg_1014;
reg   [7:0] tmp_7_reg_1014_pp0_iter1_reg;
reg   [2:0] tmp_10_reg_1020;
reg   [2:0] tmp_10_reg_1020_pp0_iter1_reg;
wire   [7:0] trunc_ln674_2_fu_442_p1;
reg   [7:0] trunc_ln674_2_reg_1025;
reg   [7:0] trunc_ln674_2_reg_1025_pp0_iter1_reg;
reg   [4:0] tmp_11_reg_1030;
reg   [4:0] tmp_11_reg_1030_pp0_iter1_reg;
wire   [17:0] add_ln886_2_fu_596_p2;
reg   [17:0] add_ln886_2_reg_1035;
wire   [16:0] add_ln886_3_fu_602_p2;
reg   [16:0] add_ln886_3_reg_1040;
wire   [17:0] add_ln886_5_fu_618_p2;
reg   [17:0] add_ln886_5_reg_1045;
wire   [15:0] trunc_ln357_fu_679_p1;
reg   [15:0] trunc_ln357_reg_1050;
reg   [3:0] tmp_14_reg_1055;
wire   [511:0] zext_ln391_fu_932_p1;
wire   [63:0] zext_ln391_1_fu_945_p1;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_ls_firstWord_new_0_reg_267;
wire   [0:0] tmp_last_V_1_fu_350_p1;
reg   [63:0] ap_phi_mux_sendWord_keep_V_phi_fu_282_p4;
wire   [63:0] p_Result_14_fu_900_p3;
wire   [63:0] ap_phi_reg_pp0_iter2_sendWord_keep_V_reg_278;
wire   [63:0] p_Result_16_fu_710_p3;
reg   [511:0] ap_phi_mux_sendWord_data_V_phi_fu_294_p4;
wire   [511:0] p_Result_13_fu_887_p5;
wire   [511:0] ap_phi_reg_pp0_iter2_sendWord_data_V_reg_290;
wire   [511:0] p_Result_15_fu_701_p3;
reg   [511:0] ap_phi_mux_currWord_data_V_phi_fu_305_p4;
wire   [511:0] p_Result_12_fu_863_p5;
wire   [511:0] ap_phi_reg_pp0_iter2_currWord_data_V_reg_302;
wire   [0:0] xor_ln947_fu_630_p2;
reg    ap_block_pp0_stage0_01001;
wire   [13:0] tmp_2_fu_362_p4;
wire   [15:0] cksum_V_fu_456_p1;
wire   [15:0] tmp_12_fu_464_p4;
wire   [15:0] tmp_13_fu_478_p4;
wire   [15:0] tmp_15_fu_492_p4;
wire   [15:0] tmp_16_fu_506_p4;
wire   [15:0] tmp_17_fu_520_p4;
wire   [15:0] tmp_18_fu_534_p4;
wire   [15:0] tmp_19_fu_548_p4;
wire   [15:0] tmp_20_fu_562_p4;
wire   [16:0] zext_ln674_5_fu_544_p1;
wire   [16:0] zext_ln674_6_fu_558_p1;
wire   [16:0] add_ln886_fu_576_p2;
wire   [16:0] zext_ln674_4_fu_530_p1;
wire   [16:0] zext_ln674_3_fu_516_p1;
wire   [16:0] add_ln886_1_fu_586_p2;
wire   [17:0] zext_ln886_2_fu_592_p1;
wire   [17:0] zext_ln886_1_fu_582_p1;
wire   [16:0] zext_ln92_fu_460_p1;
wire   [16:0] zext_ln674_fu_474_p1;
wire   [16:0] zext_ln674_1_fu_488_p1;
wire   [16:0] zext_ln886_fu_572_p1;
wire   [16:0] add_ln886_4_fu_608_p2;
wire   [17:0] zext_ln886_5_fu_614_p1;
wire   [17:0] zext_ln674_2_fu_502_p1;
wire   [18:0] zext_ln886_6_fu_660_p1;
wire   [18:0] zext_ln886_4_fu_657_p1;
wire   [18:0] add_ln886_6_fu_663_p2;
wire   [19:0] zext_ln886_7_fu_669_p1;
wire   [19:0] zext_ln886_3_fu_654_p1;
wire   [19:0] cksum_V_1_fu_673_p2;
wire   [399:0] trunc_ln674_5_fu_698_p1;
wire   [111:0] grp_fu_320_p4;
wire   [7:0] tmp_8_fu_718_p4;
wire   [4:0] tmp_9_fu_727_p4;
wire   [47:0] p_Result_2_fu_736_p8;
wire   [511:0] p_Result_3_fu_749_p5;
wire   [511:0] p_Result_4_fu_761_p5;
wire   [511:0] p_Result_5_fu_772_p5;
wire   [511:0] p_Result_6_fu_783_p5;
wire   [511:0] p_Result_7_fu_794_p5;
wire   [511:0] p_Result_8_fu_805_p5;
wire   [511:0] p_Result_9_fu_816_p5;
wire   [511:0] p_Result_10_fu_827_p5;
wire   [15:0] zext_ln357_fu_849_p1;
wire   [15:0] add_ln414_fu_852_p2;
wire   [15:0] xor_ln414_fu_857_p2;
wire   [399:0] trunc_ln674_4_fu_875_p1;
wire   [511:0] p_Result_11_fu_838_p5;
wire   [415:0] tmp_21_fu_879_p3;
wire   [112:0] p_Result_s_fu_924_p3;
wire   [14:0] p_Result_1_fu_937_p3;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_input_r_V_data_V_U_apdone_blk;
wire   [511:0] input_r_TDATA_int_regslice;
wire    input_r_TVALID_int_regslice;
reg    input_r_TREADY_int_regslice;
wire    regslice_both_input_r_V_data_V_U_ack_in;
wire    regslice_both_input_r_V_keep_V_U_apdone_blk;
wire   [63:0] input_r_TKEEP_int_regslice;
wire    regslice_both_input_r_V_keep_V_U_vld_out;
wire    regslice_both_input_r_V_keep_V_U_ack_in;
wire    regslice_both_input_r_V_strb_V_U_apdone_blk;
wire   [63:0] input_r_TSTRB_int_regslice;
wire    regslice_both_input_r_V_strb_V_U_vld_out;
wire    regslice_both_input_r_V_strb_V_U_ack_in;
wire    regslice_both_input_r_V_last_V_U_apdone_blk;
wire   [0:0] input_r_TLAST_int_regslice;
wire    regslice_both_input_r_V_last_V_U_vld_out;
wire    regslice_both_input_r_V_last_V_U_ack_in;
reg   [511:0] output_r_TDATA_int_regslice;
reg    output_r_TVALID_int_regslice;
wire    output_r_TREADY_int_regslice;
wire    regslice_both_output_r_V_data_V_U_vld_out;
wire    regslice_both_output_r_V_keep_V_U_apdone_blk;
reg   [63:0] output_r_TKEEP_int_regslice;
wire    regslice_both_output_r_V_keep_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_keep_V_U_vld_out;
wire    regslice_both_output_r_V_strb_V_U_apdone_blk;
wire    regslice_both_output_r_V_strb_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_strb_V_U_vld_out;
wire    regslice_both_output_r_V_last_V_U_apdone_blk;
reg   [0:0] output_r_TLAST_int_regslice;
wire    regslice_both_output_r_V_last_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_last_V_U_vld_out;
wire   [31:0] ip_output_TDATA_int_regslice;
reg    ip_output_TVALID_int_regslice;
wire    ip_output_TREADY_int_regslice;
wire    regslice_both_ip_output_U_vld_out;
reg    ap_condition_255;
reg    ap_condition_154;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ls_writeRemainder = 1'd0;
#0 prevWord_data_V = 512'd0;
#0 prevWord_keep_V = 64'd0;
#0 ls_firstWord = 1'd1;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

insert_ethernet_header_regslice_both #(
    .DataWidth( 512 ))
regslice_both_input_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TDATA),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_data_V_U_ack_in),
    .data_out(input_r_TDATA_int_regslice),
    .vld_out(input_r_TVALID_int_regslice),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_data_V_U_apdone_blk)
);

insert_ethernet_header_regslice_both #(
    .DataWidth( 64 ))
regslice_both_input_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TKEEP),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_keep_V_U_ack_in),
    .data_out(input_r_TKEEP_int_regslice),
    .vld_out(regslice_both_input_r_V_keep_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_keep_V_U_apdone_blk)
);

insert_ethernet_header_regslice_both #(
    .DataWidth( 64 ))
regslice_both_input_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TSTRB),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_strb_V_U_ack_in),
    .data_out(input_r_TSTRB_int_regslice),
    .vld_out(regslice_both_input_r_V_strb_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_strb_V_U_apdone_blk)
);

insert_ethernet_header_regslice_both #(
    .DataWidth( 1 ))
regslice_both_input_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TLAST),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_last_V_U_ack_in),
    .data_out(input_r_TLAST_int_regslice),
    .vld_out(regslice_both_input_r_V_last_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_last_V_U_apdone_blk)
);

insert_ethernet_header_regslice_both #(
    .DataWidth( 512 ))
regslice_both_output_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TDATA_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(output_r_TREADY_int_regslice),
    .data_out(output_r_TDATA),
    .vld_out(regslice_both_output_r_V_data_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_data_V_U_apdone_blk)
);

insert_ethernet_header_regslice_both #(
    .DataWidth( 64 ))
regslice_both_output_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TKEEP_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_keep_V_U_ack_in_dummy),
    .data_out(output_r_TKEEP),
    .vld_out(regslice_both_output_r_V_keep_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_keep_V_U_apdone_blk)
);

insert_ethernet_header_regslice_both #(
    .DataWidth( 64 ))
regslice_both_output_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(64'd0),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_strb_V_U_ack_in_dummy),
    .data_out(output_r_TSTRB),
    .vld_out(regslice_both_output_r_V_strb_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_strb_V_U_apdone_blk)
);

insert_ethernet_header_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TLAST_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_last_V_U_ack_in_dummy),
    .data_out(output_r_TLAST),
    .vld_out(regslice_both_output_r_V_last_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_last_V_U_apdone_blk)
);

insert_ethernet_header_regslice_both #(
    .DataWidth( 32 ))
regslice_both_ip_output_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ip_output_TDATA_int_regslice),
    .vld_in(ip_output_TVALID_int_regslice),
    .ack_in(ip_output_TREADY_int_regslice),
    .data_out(ip_output_TDATA),
    .vld_out(regslice_both_ip_output_U_vld_out),
    .ack_out(ip_output_TREADY),
    .apdone_blk(regslice_both_ip_output_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_154)) begin
        if ((ls_writeRemainder_load_load_fu_333_p1 == 1'd1)) begin
            ls_writeRemainder <= 1'd0;
        end else if ((1'b1 == ap_condition_255)) begin
            ls_writeRemainder <= xor_ln947_fu_630_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_nbreadreq_fu_204_p6 == 1'd1) & (ls_writeRemainder == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ls_firstWord_load_load_fu_354_p1 == 1'd1))) begin
        add_ln886_2_reg_1035 <= add_ln886_2_fu_596_p2;
        add_ln886_3_reg_1040 <= add_ln886_3_fu_602_p2;
        add_ln886_5_reg_1045 <= add_ln886_5_fu_618_p2;
        tmp_10_reg_1020 <= {{mac_subnet[15:13]}};
        tmp_11_reg_1030 <= {{id_src[12:8]}};
        tmp_3_reg_991 <= {{mac_subnet[15:8]}};
        tmp_4_reg_996 <= {{mac_subnet[23:16]}};
        tmp_5_reg_1002 <= {{mac_subnet[31:24]}};
        tmp_6_reg_1008 <= {{mac_subnet[39:32]}};
        tmp_7_reg_1014 <= {{mac_subnet[47:40]}};
        trunc_ln674_1_reg_986 <= trunc_ln674_1_fu_378_p1;
        trunc_ln674_2_reg_1025 <= trunc_ln674_2_fu_442_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_nbreadreq_fu_204_p6 == 1'd1) & (ls_writeRemainder == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ls_firstWord <= ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4;
        prevWord_keep_V <= input_r_TKEEP_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_nbreadreq_fu_204_p6 == 1'd1) & (ls_writeRemainder == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ls_firstWord_load_reg_971 <= ls_firstWord;
        sendWord_last_V_reg_981 <= sendWord_last_V_fu_372_p2;
        tmp_data_V_reg_958 <= input_r_TDATA_int_regslice;
        trunc_ln674_reg_975 <= trunc_ln674_fu_358_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ls_firstWord_load_reg_971_pp0_iter1_reg <= ls_firstWord_load_reg_971;
        ls_writeRemainder_load_reg_950 <= ls_writeRemainder;
        ls_writeRemainder_load_reg_950_pp0_iter1_reg <= ls_writeRemainder_load_reg_950;
        reg_329_pp0_iter1_reg <= reg_329;
        sendWord_last_V_reg_981_pp0_iter1_reg <= sendWord_last_V_reg_981;
        tmp_10_reg_1020_pp0_iter1_reg <= tmp_10_reg_1020;
        tmp_11_reg_1030_pp0_iter1_reg <= tmp_11_reg_1030;
        tmp_1_reg_954_pp0_iter1_reg <= tmp_1_reg_954;
        tmp_3_reg_991_pp0_iter1_reg <= tmp_3_reg_991;
        tmp_4_reg_996_pp0_iter1_reg <= tmp_4_reg_996;
        tmp_5_reg_1002_pp0_iter1_reg <= tmp_5_reg_1002;
        tmp_6_reg_1008_pp0_iter1_reg <= tmp_6_reg_1008;
        tmp_7_reg_1014_pp0_iter1_reg <= tmp_7_reg_1014;
        tmp_data_V_reg_958_pp0_iter1_reg <= tmp_data_V_reg_958;
        trunc_ln674_1_reg_986_pp0_iter1_reg <= trunc_ln674_1_reg_986;
        trunc_ln674_2_reg_1025_pp0_iter1_reg <= trunc_ln674_2_reg_1025;
        trunc_ln674_reg_975_pp0_iter1_reg <= trunc_ln674_reg_975;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ls_firstWord_load_reg_971_pp0_iter2_reg <= ls_firstWord_load_reg_971_pp0_iter1_reg;
        ls_writeRemainder_load_reg_950_pp0_iter2_reg <= ls_writeRemainder_load_reg_950_pp0_iter1_reg;
        tmp_1_reg_954_pp0_iter2_reg <= tmp_1_reg_954_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_reg_954_pp0_iter1_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prevWord_data_V <= ap_phi_mux_currWord_data_V_phi_fu_305_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_1_nbreadreq_fu_204_p6 == 1'd1) & (ls_writeRemainder == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ls_firstWord_load_load_fu_354_p1 == 1'd0)) | ((ls_writeRemainder_load_load_fu_333_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_329 <= {{prevWord_keep_V[63:50]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ls_firstWord_load_reg_971 == 1'd1) & (tmp_1_reg_954 == 1'd1) & (ls_writeRemainder_load_reg_950 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_14_reg_1055 <= {{cksum_V_1_fu_673_p2[19:16]}};
        trunc_ln357_reg_1050 <= trunc_ln357_fu_679_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ls_writeRemainder == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_reg_954 <= tmp_1_nbreadreq_fu_204_p6;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_reg_954_pp0_iter1_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd0))) begin
        if ((ls_firstWord_load_reg_971_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_currWord_data_V_phi_fu_305_p4 = tmp_data_V_reg_958_pp0_iter1_reg;
        end else if ((ls_firstWord_load_reg_971_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_currWord_data_V_phi_fu_305_p4 = p_Result_12_fu_863_p5;
        end else begin
            ap_phi_mux_currWord_data_V_phi_fu_305_p4 = ap_phi_reg_pp0_iter2_currWord_data_V_reg_302;
        end
    end else begin
        ap_phi_mux_currWord_data_V_phi_fu_305_p4 = ap_phi_reg_pp0_iter2_currWord_data_V_reg_302;
    end
end

always @ (*) begin
    if (((tmp_1_nbreadreq_fu_204_p6 == 1'd1) & (ls_writeRemainder == 1'd0))) begin
        if ((tmp_last_V_1_fu_350_p1 == 1'd0)) begin
            ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4 = 1'd0;
        end else if ((tmp_last_V_1_fu_350_p1 == 1'd1)) begin
            ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4 = 1'd1;
        end else begin
            ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4 = ap_phi_reg_pp0_iter0_ls_firstWord_new_0_reg_267;
        end
    end else begin
        ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4 = ap_phi_reg_pp0_iter0_ls_firstWord_new_0_reg_267;
    end
end

always @ (*) begin
    if (((tmp_1_reg_954_pp0_iter1_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd0))) begin
        if ((ls_firstWord_load_reg_971_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_sendWord_data_V_phi_fu_294_p4 = p_Result_15_fu_701_p3;
        end else if ((ls_firstWord_load_reg_971_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_sendWord_data_V_phi_fu_294_p4 = p_Result_13_fu_887_p5;
        end else begin
            ap_phi_mux_sendWord_data_V_phi_fu_294_p4 = ap_phi_reg_pp0_iter2_sendWord_data_V_reg_290;
        end
    end else begin
        ap_phi_mux_sendWord_data_V_phi_fu_294_p4 = ap_phi_reg_pp0_iter2_sendWord_data_V_reg_290;
    end
end

always @ (*) begin
    if (((tmp_1_reg_954_pp0_iter1_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd0))) begin
        if ((ls_firstWord_load_reg_971_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_sendWord_keep_V_phi_fu_282_p4 = p_Result_16_fu_710_p3;
        end else if ((ls_firstWord_load_reg_971_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_sendWord_keep_V_phi_fu_282_p4 = p_Result_14_fu_900_p3;
        end else begin
            ap_phi_mux_sendWord_keep_V_phi_fu_282_p4 = ap_phi_reg_pp0_iter2_sendWord_keep_V_reg_278;
        end
    end else begin
        ap_phi_mux_sendWord_keep_V_phi_fu_282_p4 = ap_phi_reg_pp0_iter2_sendWord_keep_V_reg_278;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((tmp_1_nbreadreq_fu_204_p6 == 1'd1) & (ls_writeRemainder == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_TDATA_blk_n = input_r_TVALID_int_regslice;
    end else begin
        input_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1))) begin
        input_r_TREADY_int_regslice = 1'b1;
    end else begin
        input_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ls_firstWord_load_reg_971_pp0_iter2_reg == 1'd1) & (tmp_1_reg_954_pp0_iter2_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ls_firstWord_load_reg_971_pp0_iter1_reg == 1'd1) & (tmp_1_reg_954_pp0_iter1_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        ip_output_TDATA_blk_n = ip_output_TREADY_int_regslice;
    end else begin
        ip_output_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op123_write_state3 == 1'b1))) begin
        ip_output_TVALID_int_regslice = 1'b1;
    end else begin
        ip_output_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_1_reg_954_pp0_iter2_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_1_reg_954_pp0_iter1_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ls_writeRemainder_load_reg_950_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        output_r_TDATA_blk_n = output_r_TREADY_int_regslice;
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd1)) begin
            output_r_TDATA_int_regslice = zext_ln391_fu_932_p1;
        end else if ((ap_predicate_op128_write_state3 == 1'b1)) begin
            output_r_TDATA_int_regslice = ap_phi_mux_sendWord_data_V_phi_fu_294_p4;
        end else begin
            output_r_TDATA_int_regslice = 'bx;
        end
    end else begin
        output_r_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd1)) begin
            output_r_TKEEP_int_regslice = zext_ln391_1_fu_945_p1;
        end else if ((ap_predicate_op128_write_state3 == 1'b1)) begin
            output_r_TKEEP_int_regslice = ap_phi_mux_sendWord_keep_V_phi_fu_282_p4;
        end else begin
            output_r_TKEEP_int_regslice = 'bx;
        end
    end else begin
        output_r_TKEEP_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd1)) begin
            output_r_TLAST_int_regslice = 1'd1;
        end else if ((ap_predicate_op128_write_state3 == 1'b1)) begin
            output_r_TLAST_int_regslice = sendWord_last_V_reg_981_pp0_iter1_reg;
        end else begin
            output_r_TLAST_int_regslice = 'bx;
        end
    end else begin
        output_r_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op128_write_state3 == 1'b1)))) begin
        output_r_TVALID_int_regslice = 1'b1;
    end else begin
        output_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln414_fu_852_p2 = (zext_ln357_fu_849_p1 + trunc_ln357_reg_1050);

assign add_ln886_1_fu_586_p2 = (zext_ln674_4_fu_530_p1 + zext_ln674_3_fu_516_p1);

assign add_ln886_2_fu_596_p2 = (zext_ln886_2_fu_592_p1 + zext_ln886_1_fu_582_p1);

assign add_ln886_3_fu_602_p2 = (zext_ln92_fu_460_p1 + zext_ln674_fu_474_p1);

assign add_ln886_4_fu_608_p2 = (zext_ln674_1_fu_488_p1 + zext_ln886_fu_572_p1);

assign add_ln886_5_fu_618_p2 = (zext_ln886_5_fu_614_p1 + zext_ln674_2_fu_502_p1);

assign add_ln886_6_fu_663_p2 = (zext_ln886_6_fu_660_p1 + zext_ln886_4_fu_657_p1);

assign add_ln886_fu_576_p2 = (zext_ln674_5_fu_544_p1 + zext_ln674_6_fu_558_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((input_r_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1) & (ap_predicate_op10_read_state1 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_ip_output_U_apdone_blk == 1'b1) | (regslice_both_output_r_V_data_V_U_apdone_blk == 1'b1) | ((ip_output_TREADY_int_regslice == 1'b0) & (ap_predicate_op136_write_state4 == 1'b1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ls_writeRemainder_load_reg_950_pp0_iter2_reg == 1'd1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op137_write_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ip_output_TREADY_int_regslice == 1'b0) & (ap_predicate_op123_write_state3 == 1'b1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op128_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((input_r_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1) & (ap_predicate_op10_read_state1 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state4_io) | (regslice_both_ip_output_U_apdone_blk == 1'b1) | (regslice_both_output_r_V_data_V_U_apdone_blk == 1'b1) | ((ip_output_TREADY_int_regslice == 1'b0) & (ap_predicate_op136_write_state4 == 1'b1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ls_writeRemainder_load_reg_950_pp0_iter2_reg == 1'd1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op137_write_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ip_output_TREADY_int_regslice == 1'b0) & (ap_predicate_op123_write_state3 == 1'b1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op128_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((input_r_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1) & (ap_predicate_op10_read_state1 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state4_io) | (regslice_both_ip_output_U_apdone_blk == 1'b1) | (regslice_both_output_r_V_data_V_U_apdone_blk == 1'b1) | ((ip_output_TREADY_int_regslice == 1'b0) & (ap_predicate_op136_write_state4 == 1'b1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ls_writeRemainder_load_reg_950_pp0_iter2_reg == 1'd1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op137_write_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ip_output_TREADY_int_regslice == 1'b0) & (ap_predicate_op123_write_state3 == 1'b1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op128_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((input_r_TVALID_int_regslice == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((ip_output_TREADY_int_regslice == 1'b0) & (ap_predicate_op123_write_state3 == 1'b1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op128_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ip_output_TREADY_int_regslice == 1'b0) & (ap_predicate_op123_write_state3 == 1'b1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op128_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state4_io = (((ip_output_TREADY_int_regslice == 1'b0) & (ap_predicate_op136_write_state4 == 1'b1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ls_writeRemainder_load_reg_950_pp0_iter2_reg == 1'd1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op137_write_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((regslice_both_ip_output_U_apdone_blk == 1'b1) | (regslice_both_output_r_V_data_V_U_apdone_blk == 1'b1) | ((ip_output_TREADY_int_regslice == 1'b0) & (ap_predicate_op136_write_state4 == 1'b1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ls_writeRemainder_load_reg_950_pp0_iter2_reg == 1'd1)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op137_write_state4 == 1'b1)));
end

always @ (*) begin
    ap_condition_154 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_255 = ((tmp_1_nbreadreq_fu_204_p6 == 1'd1) & (ls_writeRemainder == 1'd0) & (tmp_last_V_1_fu_350_p1 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_ls_firstWord_new_0_reg_267 = 'bx;

assign ap_phi_reg_pp0_iter2_currWord_data_V_reg_302 = 'bx;

assign ap_phi_reg_pp0_iter2_sendWord_data_V_reg_290 = 'bx;

assign ap_phi_reg_pp0_iter2_sendWord_keep_V_reg_278 = 'bx;

always @ (*) begin
    ap_predicate_op10_read_state1 = ((tmp_1_nbreadreq_fu_204_p6 == 1'd1) & (ls_writeRemainder == 1'd0));
end

always @ (*) begin
    ap_predicate_op123_write_state3 = ((ls_firstWord_load_reg_971_pp0_iter1_reg == 1'd1) & (tmp_1_reg_954_pp0_iter1_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op128_write_state3 = ((tmp_1_reg_954_pp0_iter1_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op136_write_state4 = ((ls_firstWord_load_reg_971_pp0_iter2_reg == 1'd1) & (tmp_1_reg_954_pp0_iter2_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op137_write_state4 = ((tmp_1_reg_954_pp0_iter2_reg == 1'd1) & (ls_writeRemainder_load_reg_950_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cksum_V_1_fu_673_p2 = (zext_ln886_7_fu_669_p1 + zext_ln886_3_fu_654_p1);

assign cksum_V_fu_456_p1 = input_r_TDATA_int_regslice[15:0];

assign grp_fu_320_p4 = {{prevWord_data_V[511:400]}};

assign input_r_TREADY = regslice_both_input_r_V_data_V_U_ack_in;

assign ip_output_TDATA_int_regslice = {{tmp_data_V_reg_958_pp0_iter1_reg[159:128]}};

assign ip_output_TVALID = regslice_both_ip_output_U_vld_out;

assign ls_firstWord_load_load_fu_354_p1 = ls_firstWord;

assign ls_writeRemainder_load_load_fu_333_p1 = ls_writeRemainder;

assign output_r_TVALID = regslice_both_output_r_V_data_V_U_vld_out;

assign p_Result_10_fu_827_p5 = {{p_Result_9_fu_816_p5[511:96]}, {trunc_ln674_2_reg_1025_pp0_iter1_reg}, {p_Result_9_fu_816_p5[87:0]}};

assign p_Result_11_fu_838_p5 = {{p_Result_10_fu_827_p5[511:85]}, {tmp_11_reg_1030_pp0_iter1_reg}, {p_Result_10_fu_827_p5[79:0]}};

assign p_Result_12_fu_863_p5 = {{tmp_data_V_reg_958_pp0_iter1_reg[511:96]}, {xor_ln414_fu_857_p2}, {tmp_data_V_reg_958_pp0_iter1_reg[79:0]}};

assign p_Result_13_fu_887_p5 = {{tmp_21_fu_879_p3}, {p_Result_11_fu_838_p5[95:0]}};

assign p_Result_14_fu_900_p3 = {{trunc_ln674_reg_975_pp0_iter1_reg}, {14'd16383}};

assign p_Result_15_fu_701_p3 = {{trunc_ln674_5_fu_698_p1}, {grp_fu_320_p4}};

assign p_Result_16_fu_710_p3 = {{trunc_ln674_reg_975_pp0_iter1_reg}, {reg_329_pp0_iter1_reg}};

assign p_Result_1_fu_937_p3 = {{1'd0}, {reg_329_pp0_iter1_reg}};

assign p_Result_2_fu_736_p8 = {{{{{{{tmp_8_fu_718_p4}, {tmp_10_reg_1020_pp0_iter1_reg}}, {tmp_9_fu_727_p4}}, {tmp_4_reg_996_pp0_iter1_reg}}, {tmp_5_reg_1002_pp0_iter1_reg}}, {tmp_6_reg_1008_pp0_iter1_reg}}, {tmp_7_reg_1014_pp0_iter1_reg}};

assign p_Result_3_fu_749_p5 = {{ap_const_lv512_lc_1[511:48]}, {p_Result_2_fu_736_p8}};

assign p_Result_4_fu_761_p5 = {{p_Result_3_fu_749_p5[511:96]}, {trunc_ln674_1_reg_986_pp0_iter1_reg}, {p_Result_3_fu_749_p5[87:0]}};

assign p_Result_5_fu_772_p5 = {{p_Result_4_fu_761_p5[511:88]}, {tmp_3_reg_991_pp0_iter1_reg}, {p_Result_4_fu_761_p5[79:0]}};

assign p_Result_6_fu_783_p5 = {{p_Result_5_fu_772_p5[511:80]}, {tmp_4_reg_996_pp0_iter1_reg}, {p_Result_5_fu_772_p5[71:0]}};

assign p_Result_7_fu_794_p5 = {{p_Result_6_fu_783_p5[511:72]}, {tmp_5_reg_1002_pp0_iter1_reg}, {p_Result_6_fu_783_p5[63:0]}};

assign p_Result_8_fu_805_p5 = {{p_Result_7_fu_794_p5[511:64]}, {tmp_6_reg_1008_pp0_iter1_reg}, {p_Result_7_fu_794_p5[55:0]}};

assign p_Result_9_fu_816_p5 = {{p_Result_8_fu_805_p5[511:56]}, {tmp_7_reg_1014_pp0_iter1_reg}, {p_Result_8_fu_805_p5[47:0]}};

assign p_Result_s_fu_924_p3 = {{1'd0}, {grp_fu_320_p4}};

assign sendWord_last_V_fu_372_p2 = ((tmp_2_fu_362_p4 == 14'd0) ? 1'b1 : 1'b0);

assign tmp_12_fu_464_p4 = {{input_r_TDATA_int_regslice[31:16]}};

assign tmp_13_fu_478_p4 = {{input_r_TDATA_int_regslice[47:32]}};

assign tmp_15_fu_492_p4 = {{input_r_TDATA_int_regslice[63:48]}};

assign tmp_16_fu_506_p4 = {{input_r_TDATA_int_regslice[79:64]}};

assign tmp_17_fu_520_p4 = {{input_r_TDATA_int_regslice[111:96]}};

assign tmp_18_fu_534_p4 = {{input_r_TDATA_int_regslice[127:112]}};

assign tmp_19_fu_548_p4 = {{input_r_TDATA_int_regslice[143:128]}};

assign tmp_1_nbreadreq_fu_204_p6 = input_r_TVALID_int_regslice;

assign tmp_20_fu_562_p4 = {{input_r_TDATA_int_regslice[159:144]}};

assign tmp_21_fu_879_p3 = {{trunc_ln674_4_fu_875_p1}, {16'd8}};

assign tmp_2_fu_362_p4 = {{input_r_TKEEP_int_regslice[63:50]}};

assign tmp_8_fu_718_p4 = {{tmp_data_V_reg_958_pp0_iter1_reg[159:152]}};

assign tmp_9_fu_727_p4 = {{tmp_data_V_reg_958_pp0_iter1_reg[148:144]}};

assign tmp_last_V_1_fu_350_p1 = input_r_TLAST_int_regslice;

assign trunc_ln357_fu_679_p1 = cksum_V_1_fu_673_p2[15:0];

assign trunc_ln674_1_fu_378_p1 = mac_subnet[7:0];

assign trunc_ln674_2_fu_442_p1 = id_src[7:0];

assign trunc_ln674_4_fu_875_p1 = p_Result_12_fu_863_p5[399:0];

assign trunc_ln674_5_fu_698_p1 = tmp_data_V_reg_958_pp0_iter1_reg[399:0];

assign trunc_ln674_fu_358_p1 = input_r_TKEEP_int_regslice[49:0];

assign xor_ln414_fu_857_p2 = (16'd65535 ^ add_ln414_fu_852_p2);

assign xor_ln947_fu_630_p2 = (sendWord_last_V_fu_372_p2 ^ 1'd1);

assign zext_ln357_fu_849_p1 = tmp_14_reg_1055;

assign zext_ln391_1_fu_945_p1 = p_Result_1_fu_937_p3;

assign zext_ln391_fu_932_p1 = p_Result_s_fu_924_p3;

assign zext_ln674_1_fu_488_p1 = tmp_13_fu_478_p4;

assign zext_ln674_2_fu_502_p1 = tmp_15_fu_492_p4;

assign zext_ln674_3_fu_516_p1 = tmp_16_fu_506_p4;

assign zext_ln674_4_fu_530_p1 = tmp_17_fu_520_p4;

assign zext_ln674_5_fu_544_p1 = tmp_18_fu_534_p4;

assign zext_ln674_6_fu_558_p1 = tmp_19_fu_548_p4;

assign zext_ln674_fu_474_p1 = tmp_12_fu_464_p4;

assign zext_ln886_1_fu_582_p1 = add_ln886_fu_576_p2;

assign zext_ln886_2_fu_592_p1 = add_ln886_1_fu_586_p2;

assign zext_ln886_3_fu_654_p1 = add_ln886_2_reg_1035;

assign zext_ln886_4_fu_657_p1 = add_ln886_3_reg_1040;

assign zext_ln886_5_fu_614_p1 = add_ln886_4_fu_608_p2;

assign zext_ln886_6_fu_660_p1 = add_ln886_5_reg_1045;

assign zext_ln886_7_fu_669_p1 = add_ln886_6_fu_663_p2;

assign zext_ln886_fu_572_p1 = tmp_20_fu_562_p4;

assign zext_ln92_fu_460_p1 = cksum_V_fu_456_p1;


reg find_kernel_block = 0;
// synthesis translate_off
`include "insert_ethernet_header_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //insert_ethernet_header

