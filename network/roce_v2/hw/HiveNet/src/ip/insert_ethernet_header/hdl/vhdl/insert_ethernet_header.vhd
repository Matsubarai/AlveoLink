-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity insert_ethernet_header is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    mac_subnet : IN STD_LOGIC_VECTOR (47 downto 0);
    id_src : IN STD_LOGIC_VECTOR (12 downto 0);
    input_r_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    input_r_TVALID : IN STD_LOGIC;
    input_r_TREADY : OUT STD_LOGIC;
    input_r_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    input_r_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    input_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    output_r_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    output_r_TVALID : OUT STD_LOGIC;
    output_r_TREADY : IN STD_LOGIC;
    output_r_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0);
    output_r_TSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    output_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ip_output_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    ip_output_TVALID : OUT STD_LOGIC;
    ip_output_TREADY : IN STD_LOGIC );
end;


architecture behav of insert_ethernet_header is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "insert_ethernet_header_insert_ethernet_header,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.599687,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2195,HLS_SYN_LUT=544,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010100";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ls_writeRemainder : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal prevWord_data_V : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal prevWord_keep_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ls_firstWord : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal input_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ls_writeRemainder_load_load_fu_333_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_nbreadreq_fu_204_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_r_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ls_writeRemainder_load_reg_950 : STD_LOGIC_VECTOR (0 downto 0);
    signal ls_writeRemainder_load_reg_950_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ls_writeRemainder_load_reg_950_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_954_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_954_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ip_output_TDATA_blk_n : STD_LOGIC;
    signal ls_firstWord_load_reg_971 : STD_LOGIC_VECTOR (0 downto 0);
    signal ls_firstWord_load_reg_971_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ls_firstWord_load_reg_971_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_329 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_predicate_op10_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op123_write_state3 : BOOLEAN;
    signal ap_predicate_op128_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_predicate_op136_write_state4 : BOOLEAN;
    signal ap_predicate_op137_write_state4 : BOOLEAN;
    signal regslice_both_output_r_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_ip_output_U_apdone_blk : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ls_firstWord_load_load_fu_354_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_329_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_data_V_reg_958 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_data_V_reg_958_pp0_iter1_reg : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln674_fu_358_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal trunc_ln674_reg_975 : STD_LOGIC_VECTOR (49 downto 0);
    signal trunc_ln674_reg_975_pp0_iter1_reg : STD_LOGIC_VECTOR (49 downto 0);
    signal sendWord_last_V_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sendWord_last_V_reg_981 : STD_LOGIC_VECTOR (0 downto 0);
    signal sendWord_last_V_reg_981_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_1_fu_378_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_1_reg_986 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_1_reg_986_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_reg_991 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_reg_991_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_reg_996 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_reg_996_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_reg_1002 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_reg_1002_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_1008 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_1008_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_reg_1014 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_reg_1014_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_reg_1020 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_reg_1020_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln674_2_fu_442_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_2_reg_1025 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_2_reg_1025_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_1030 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_reg_1030_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln886_2_fu_596_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln886_2_reg_1035 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln886_3_fu_602_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln886_3_reg_1040 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln886_5_fu_618_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln886_5_reg_1045 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln357_fu_679_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln357_reg_1050 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_1055 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln391_fu_932_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln391_1_fu_945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_ls_firstWord_new_0_reg_267 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_fu_350_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_sendWord_keep_V_phi_fu_282_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_14_fu_900_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_sendWord_keep_V_reg_278 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_16_fu_710_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_sendWord_data_V_phi_fu_294_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_13_fu_887_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter2_sendWord_data_V_reg_290 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_15_fu_701_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_mux_currWord_data_V_phi_fu_305_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_12_fu_863_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter2_currWord_data_V_reg_302 : STD_LOGIC_VECTOR (511 downto 0);
    signal xor_ln947_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_2_fu_362_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal cksum_V_fu_456_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_464_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_478_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_492_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_506_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_520_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_fu_534_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_548_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_562_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln674_5_fu_544_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln674_6_fu_558_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln886_fu_576_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln674_4_fu_530_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln674_3_fu_516_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln886_1_fu_586_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln886_2_fu_592_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln886_1_fu_582_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln92_fu_460_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln674_fu_474_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln674_1_fu_488_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln886_fu_572_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln886_4_fu_608_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln886_5_fu_614_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln674_2_fu_502_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln886_6_fu_660_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln886_4_fu_657_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln886_6_fu_663_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln886_7_fu_669_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln886_3_fu_654_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal cksum_V_1_fu_673_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln674_5_fu_698_p1 : STD_LOGIC_VECTOR (399 downto 0);
    signal grp_fu_320_p4 : STD_LOGIC_VECTOR (111 downto 0);
    signal tmp_8_fu_718_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_727_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_2_fu_736_p8 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_3_fu_749_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_4_fu_761_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_5_fu_772_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_6_fu_783_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_7_fu_794_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_8_fu_805_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_9_fu_816_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_10_fu_827_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln357_fu_849_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln414_fu_852_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln414_fu_857_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_4_fu_875_p1 : STD_LOGIC_VECTOR (399 downto 0);
    signal p_Result_11_fu_838_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_21_fu_879_p3 : STD_LOGIC_VECTOR (415 downto 0);
    signal p_Result_s_fu_924_p3 : STD_LOGIC_VECTOR (112 downto 0);
    signal p_Result_1_fu_937_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_input_r_V_data_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal input_r_TVALID_int_regslice : STD_LOGIC;
    signal input_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_r_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_r_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_input_r_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_r_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_r_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_input_r_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_r_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_r_V_last_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_r_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_r_V_last_V_U_ack_in : STD_LOGIC;
    signal output_r_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal output_r_TVALID_int_regslice : STD_LOGIC;
    signal output_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_output_r_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_r_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal output_r_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_output_r_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_r_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_r_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_r_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_r_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_r_V_last_V_U_apdone_blk : STD_LOGIC;
    signal output_r_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_output_r_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_r_V_last_V_U_vld_out : STD_LOGIC;
    signal ip_output_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal ip_output_TVALID_int_regslice : STD_LOGIC;
    signal ip_output_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_ip_output_U_vld_out : STD_LOGIC;
    signal ap_condition_255 : BOOLEAN;
    signal ap_condition_154 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component insert_ethernet_header_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_input_r_V_data_V_U : component insert_ethernet_header_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TDATA,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_data_V_U_ack_in,
        data_out => input_r_TDATA_int_regslice,
        vld_out => input_r_TVALID_int_regslice,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_data_V_U_apdone_blk);

    regslice_both_input_r_V_keep_V_U : component insert_ethernet_header_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TKEEP,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_keep_V_U_ack_in,
        data_out => input_r_TKEEP_int_regslice,
        vld_out => regslice_both_input_r_V_keep_V_U_vld_out,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_keep_V_U_apdone_blk);

    regslice_both_input_r_V_strb_V_U : component insert_ethernet_header_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TSTRB,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_strb_V_U_ack_in,
        data_out => input_r_TSTRB_int_regslice,
        vld_out => regslice_both_input_r_V_strb_V_U_vld_out,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_strb_V_U_apdone_blk);

    regslice_both_input_r_V_last_V_U : component insert_ethernet_header_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TLAST,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_last_V_U_ack_in,
        data_out => input_r_TLAST_int_regslice,
        vld_out => regslice_both_input_r_V_last_V_U_vld_out,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_last_V_U_apdone_blk);

    regslice_both_output_r_V_data_V_U : component insert_ethernet_header_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_r_TDATA_int_regslice,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => output_r_TREADY_int_regslice,
        data_out => output_r_TDATA,
        vld_out => regslice_both_output_r_V_data_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_data_V_U_apdone_blk);

    regslice_both_output_r_V_keep_V_U : component insert_ethernet_header_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_r_TKEEP_int_regslice,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_r_V_keep_V_U_ack_in_dummy,
        data_out => output_r_TKEEP,
        vld_out => regslice_both_output_r_V_keep_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_keep_V_U_apdone_blk);

    regslice_both_output_r_V_strb_V_U : component insert_ethernet_header_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv64_0,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_r_V_strb_V_U_ack_in_dummy,
        data_out => output_r_TSTRB,
        vld_out => regslice_both_output_r_V_strb_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_strb_V_U_apdone_blk);

    regslice_both_output_r_V_last_V_U : component insert_ethernet_header_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_r_TLAST_int_regslice,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_r_V_last_V_U_ack_in_dummy,
        data_out => output_r_TLAST,
        vld_out => regslice_both_output_r_V_last_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_last_V_U_apdone_blk);

    regslice_both_ip_output_U : component insert_ethernet_header_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ip_output_TDATA_int_regslice,
        vld_in => ip_output_TVALID_int_regslice,
        ack_in => ip_output_TREADY_int_regslice,
        data_out => ip_output_TDATA,
        vld_out => regslice_both_ip_output_U_vld_out,
        ack_out => ip_output_TREADY,
        apdone_blk => regslice_both_ip_output_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ls_writeRemainder_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_154)) then
                if ((ls_writeRemainder_load_load_fu_333_p1 = ap_const_lv1_1)) then 
                    ls_writeRemainder <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_255)) then 
                    ls_writeRemainder <= xor_ln947_fu_630_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_nbreadreq_fu_204_p6 = ap_const_lv1_1) and (ls_writeRemainder = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ls_firstWord_load_load_fu_354_p1 = ap_const_lv1_1))) then
                add_ln886_2_reg_1035 <= add_ln886_2_fu_596_p2;
                add_ln886_3_reg_1040 <= add_ln886_3_fu_602_p2;
                add_ln886_5_reg_1045 <= add_ln886_5_fu_618_p2;
                tmp_10_reg_1020 <= mac_subnet(15 downto 13);
                tmp_11_reg_1030 <= id_src(12 downto 8);
                tmp_3_reg_991 <= mac_subnet(15 downto 8);
                tmp_4_reg_996 <= mac_subnet(23 downto 16);
                tmp_5_reg_1002 <= mac_subnet(31 downto 24);
                tmp_6_reg_1008 <= mac_subnet(39 downto 32);
                tmp_7_reg_1014 <= mac_subnet(47 downto 40);
                trunc_ln674_1_reg_986 <= trunc_ln674_1_fu_378_p1;
                trunc_ln674_2_reg_1025 <= trunc_ln674_2_fu_442_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_nbreadreq_fu_204_p6 = ap_const_lv1_1) and (ls_writeRemainder = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ls_firstWord <= ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4;
                prevWord_keep_V <= input_r_TKEEP_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_nbreadreq_fu_204_p6 = ap_const_lv1_1) and (ls_writeRemainder = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ls_firstWord_load_reg_971 <= ls_firstWord;
                sendWord_last_V_reg_981 <= sendWord_last_V_fu_372_p2;
                tmp_data_V_reg_958 <= input_r_TDATA_int_regslice;
                trunc_ln674_reg_975 <= trunc_ln674_fu_358_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ls_firstWord_load_reg_971_pp0_iter1_reg <= ls_firstWord_load_reg_971;
                ls_writeRemainder_load_reg_950 <= ls_writeRemainder;
                ls_writeRemainder_load_reg_950_pp0_iter1_reg <= ls_writeRemainder_load_reg_950;
                reg_329_pp0_iter1_reg <= reg_329;
                sendWord_last_V_reg_981_pp0_iter1_reg <= sendWord_last_V_reg_981;
                tmp_10_reg_1020_pp0_iter1_reg <= tmp_10_reg_1020;
                tmp_11_reg_1030_pp0_iter1_reg <= tmp_11_reg_1030;
                tmp_1_reg_954_pp0_iter1_reg <= tmp_1_reg_954;
                tmp_3_reg_991_pp0_iter1_reg <= tmp_3_reg_991;
                tmp_4_reg_996_pp0_iter1_reg <= tmp_4_reg_996;
                tmp_5_reg_1002_pp0_iter1_reg <= tmp_5_reg_1002;
                tmp_6_reg_1008_pp0_iter1_reg <= tmp_6_reg_1008;
                tmp_7_reg_1014_pp0_iter1_reg <= tmp_7_reg_1014;
                tmp_data_V_reg_958_pp0_iter1_reg <= tmp_data_V_reg_958;
                trunc_ln674_1_reg_986_pp0_iter1_reg <= trunc_ln674_1_reg_986;
                trunc_ln674_2_reg_1025_pp0_iter1_reg <= trunc_ln674_2_reg_1025;
                trunc_ln674_reg_975_pp0_iter1_reg <= trunc_ln674_reg_975;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ls_firstWord_load_reg_971_pp0_iter2_reg <= ls_firstWord_load_reg_971_pp0_iter1_reg;
                ls_writeRemainder_load_reg_950_pp0_iter2_reg <= ls_writeRemainder_load_reg_950_pp0_iter1_reg;
                tmp_1_reg_954_pp0_iter2_reg <= tmp_1_reg_954_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_reg_954_pp0_iter1_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                prevWord_data_V <= ap_phi_mux_currWord_data_V_phi_fu_305_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_1_nbreadreq_fu_204_p6 = ap_const_lv1_1) and (ls_writeRemainder = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ls_firstWord_load_load_fu_354_p1 = ap_const_lv1_0)) or ((ls_writeRemainder_load_load_fu_333_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_329 <= prevWord_keep_V(63 downto 50);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ls_firstWord_load_reg_971 = ap_const_lv1_1) and (tmp_1_reg_954 = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_14_reg_1055 <= cksum_V_1_fu_673_p2(19 downto 16);
                trunc_ln357_reg_1050 <= trunc_ln357_fu_679_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ls_writeRemainder = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1_reg_954 <= tmp_1_nbreadreq_fu_204_p6;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln414_fu_852_p2 <= std_logic_vector(unsigned(zext_ln357_fu_849_p1) + unsigned(trunc_ln357_reg_1050));
    add_ln886_1_fu_586_p2 <= std_logic_vector(unsigned(zext_ln674_4_fu_530_p1) + unsigned(zext_ln674_3_fu_516_p1));
    add_ln886_2_fu_596_p2 <= std_logic_vector(unsigned(zext_ln886_2_fu_592_p1) + unsigned(zext_ln886_1_fu_582_p1));
    add_ln886_3_fu_602_p2 <= std_logic_vector(unsigned(zext_ln92_fu_460_p1) + unsigned(zext_ln674_fu_474_p1));
    add_ln886_4_fu_608_p2 <= std_logic_vector(unsigned(zext_ln674_1_fu_488_p1) + unsigned(zext_ln886_fu_572_p1));
    add_ln886_5_fu_618_p2 <= std_logic_vector(unsigned(zext_ln886_5_fu_614_p1) + unsigned(zext_ln674_2_fu_502_p1));
    add_ln886_6_fu_663_p2 <= std_logic_vector(unsigned(zext_ln886_6_fu_660_p1) + unsigned(zext_ln886_4_fu_657_p1));
    add_ln886_fu_576_p2 <= std_logic_vector(unsigned(zext_ln674_5_fu_544_p1) + unsigned(zext_ln674_6_fu_558_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_enable_reg_pp0_iter3, ls_writeRemainder_load_reg_950_pp0_iter2_reg, ap_predicate_op10_read_state1, ap_predicate_op123_write_state3, ap_predicate_op128_write_state3, ap_predicate_op136_write_state4, ap_predicate_op137_write_state4, regslice_both_output_r_V_data_V_U_apdone_blk, regslice_both_ip_output_U_apdone_blk, input_r_TVALID_int_regslice, output_r_TREADY_int_regslice, ip_output_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((input_r_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((regslice_both_ip_output_U_apdone_blk = ap_const_logic_1) or (regslice_both_output_r_V_data_V_U_apdone_blk = ap_const_logic_1) or ((ip_output_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op136_write_state4 = ap_const_boolean_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ls_writeRemainder_load_reg_950_pp0_iter2_reg = ap_const_lv1_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op137_write_state4 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ip_output_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op123_write_state3 = ap_const_boolean_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op128_write_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_enable_reg_pp0_iter3, ls_writeRemainder_load_reg_950_pp0_iter2_reg, ap_predicate_op10_read_state1, ap_predicate_op123_write_state3, ap_predicate_op128_write_state3, ap_block_state3_io, ap_predicate_op136_write_state4, ap_predicate_op137_write_state4, regslice_both_output_r_V_data_V_U_apdone_blk, regslice_both_ip_output_U_apdone_blk, ap_block_state4_io, input_r_TVALID_int_regslice, output_r_TREADY_int_regslice, ip_output_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((input_r_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or (regslice_both_ip_output_U_apdone_blk = ap_const_logic_1) or (regslice_both_output_r_V_data_V_U_apdone_blk = ap_const_logic_1) or ((ip_output_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op136_write_state4 = ap_const_boolean_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ls_writeRemainder_load_reg_950_pp0_iter2_reg = ap_const_lv1_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op137_write_state4 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((ip_output_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op123_write_state3 = ap_const_boolean_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op128_write_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_enable_reg_pp0_iter3, ls_writeRemainder_load_reg_950_pp0_iter2_reg, ap_predicate_op10_read_state1, ap_predicate_op123_write_state3, ap_predicate_op128_write_state3, ap_block_state3_io, ap_predicate_op136_write_state4, ap_predicate_op137_write_state4, regslice_both_output_r_V_data_V_U_apdone_blk, regslice_both_ip_output_U_apdone_blk, ap_block_state4_io, input_r_TVALID_int_regslice, output_r_TREADY_int_regslice, ip_output_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((input_r_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or (regslice_both_ip_output_U_apdone_blk = ap_const_logic_1) or (regslice_both_output_r_V_data_V_U_apdone_blk = ap_const_logic_1) or ((ip_output_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op136_write_state4 = ap_const_boolean_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ls_writeRemainder_load_reg_950_pp0_iter2_reg = ap_const_lv1_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op137_write_state4 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((ip_output_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op123_write_state3 = ap_const_boolean_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op128_write_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op10_read_state1, input_r_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((input_r_TVALID_int_regslice = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_predicate_op123_write_state3, ap_predicate_op128_write_state3, output_r_TREADY_int_regslice, ip_output_TREADY_int_regslice)
    begin
                ap_block_state3_io <= (((ip_output_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op123_write_state3 = ap_const_boolean_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op128_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_predicate_op123_write_state3, ap_predicate_op128_write_state3, output_r_TREADY_int_regslice, ip_output_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((ip_output_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op123_write_state3 = ap_const_boolean_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op128_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state4_io_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter2_reg, ap_predicate_op136_write_state4, ap_predicate_op137_write_state4, output_r_TREADY_int_regslice, ip_output_TREADY_int_regslice)
    begin
                ap_block_state4_io <= (((ip_output_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op136_write_state4 = ap_const_boolean_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ls_writeRemainder_load_reg_950_pp0_iter2_reg = ap_const_lv1_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op137_write_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter2_reg, ap_predicate_op136_write_state4, ap_predicate_op137_write_state4, regslice_both_output_r_V_data_V_U_apdone_blk, regslice_both_ip_output_U_apdone_blk, output_r_TREADY_int_regslice, ip_output_TREADY_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((regslice_both_ip_output_U_apdone_blk = ap_const_logic_1) or (regslice_both_output_r_V_data_V_U_apdone_blk = ap_const_logic_1) or ((ip_output_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op136_write_state4 = ap_const_boolean_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ls_writeRemainder_load_reg_950_pp0_iter2_reg = ap_const_lv1_1)) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op137_write_state4 = ap_const_boolean_1)));
    end process;


    ap_condition_154_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_154 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_255_assign_proc : process(ls_writeRemainder, tmp_1_nbreadreq_fu_204_p6, tmp_last_V_1_fu_350_p1)
    begin
                ap_condition_255 <= ((tmp_1_nbreadreq_fu_204_p6 = ap_const_lv1_1) and (ls_writeRemainder = ap_const_lv1_0) and (tmp_last_V_1_fu_350_p1 = ap_const_lv1_1));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_currWord_data_V_phi_fu_305_p4_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter1_reg, tmp_1_reg_954_pp0_iter1_reg, ls_firstWord_load_reg_971_pp0_iter1_reg, tmp_data_V_reg_958_pp0_iter1_reg, p_Result_12_fu_863_p5, ap_phi_reg_pp0_iter2_currWord_data_V_reg_302)
    begin
        if (((tmp_1_reg_954_pp0_iter1_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_0))) then
            if ((ls_firstWord_load_reg_971_pp0_iter1_reg = ap_const_lv1_0)) then 
                ap_phi_mux_currWord_data_V_phi_fu_305_p4 <= tmp_data_V_reg_958_pp0_iter1_reg;
            elsif ((ls_firstWord_load_reg_971_pp0_iter1_reg = ap_const_lv1_1)) then 
                ap_phi_mux_currWord_data_V_phi_fu_305_p4 <= p_Result_12_fu_863_p5;
            else 
                ap_phi_mux_currWord_data_V_phi_fu_305_p4 <= ap_phi_reg_pp0_iter2_currWord_data_V_reg_302;
            end if;
        else 
            ap_phi_mux_currWord_data_V_phi_fu_305_p4 <= ap_phi_reg_pp0_iter2_currWord_data_V_reg_302;
        end if; 
    end process;


    ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4_assign_proc : process(ls_writeRemainder, tmp_1_nbreadreq_fu_204_p6, ap_phi_reg_pp0_iter0_ls_firstWord_new_0_reg_267, tmp_last_V_1_fu_350_p1)
    begin
        if (((tmp_1_nbreadreq_fu_204_p6 = ap_const_lv1_1) and (ls_writeRemainder = ap_const_lv1_0))) then
            if ((tmp_last_V_1_fu_350_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4 <= ap_const_lv1_0;
            elsif ((tmp_last_V_1_fu_350_p1 = ap_const_lv1_1)) then 
                ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4 <= ap_phi_reg_pp0_iter0_ls_firstWord_new_0_reg_267;
            end if;
        else 
            ap_phi_mux_ls_firstWord_new_0_phi_fu_270_p4 <= ap_phi_reg_pp0_iter0_ls_firstWord_new_0_reg_267;
        end if; 
    end process;


    ap_phi_mux_sendWord_data_V_phi_fu_294_p4_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter1_reg, tmp_1_reg_954_pp0_iter1_reg, ls_firstWord_load_reg_971_pp0_iter1_reg, p_Result_13_fu_887_p5, ap_phi_reg_pp0_iter2_sendWord_data_V_reg_290, p_Result_15_fu_701_p3)
    begin
        if (((tmp_1_reg_954_pp0_iter1_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_0))) then
            if ((ls_firstWord_load_reg_971_pp0_iter1_reg = ap_const_lv1_0)) then 
                ap_phi_mux_sendWord_data_V_phi_fu_294_p4 <= p_Result_15_fu_701_p3;
            elsif ((ls_firstWord_load_reg_971_pp0_iter1_reg = ap_const_lv1_1)) then 
                ap_phi_mux_sendWord_data_V_phi_fu_294_p4 <= p_Result_13_fu_887_p5;
            else 
                ap_phi_mux_sendWord_data_V_phi_fu_294_p4 <= ap_phi_reg_pp0_iter2_sendWord_data_V_reg_290;
            end if;
        else 
            ap_phi_mux_sendWord_data_V_phi_fu_294_p4 <= ap_phi_reg_pp0_iter2_sendWord_data_V_reg_290;
        end if; 
    end process;


    ap_phi_mux_sendWord_keep_V_phi_fu_282_p4_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter1_reg, tmp_1_reg_954_pp0_iter1_reg, ls_firstWord_load_reg_971_pp0_iter1_reg, p_Result_14_fu_900_p3, ap_phi_reg_pp0_iter2_sendWord_keep_V_reg_278, p_Result_16_fu_710_p3)
    begin
        if (((tmp_1_reg_954_pp0_iter1_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_0))) then
            if ((ls_firstWord_load_reg_971_pp0_iter1_reg = ap_const_lv1_0)) then 
                ap_phi_mux_sendWord_keep_V_phi_fu_282_p4 <= p_Result_16_fu_710_p3;
            elsif ((ls_firstWord_load_reg_971_pp0_iter1_reg = ap_const_lv1_1)) then 
                ap_phi_mux_sendWord_keep_V_phi_fu_282_p4 <= p_Result_14_fu_900_p3;
            else 
                ap_phi_mux_sendWord_keep_V_phi_fu_282_p4 <= ap_phi_reg_pp0_iter2_sendWord_keep_V_reg_278;
            end if;
        else 
            ap_phi_mux_sendWord_keep_V_phi_fu_282_p4 <= ap_phi_reg_pp0_iter2_sendWord_keep_V_reg_278;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_ls_firstWord_new_0_reg_267 <= "X";
    ap_phi_reg_pp0_iter2_currWord_data_V_reg_302 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_sendWord_data_V_reg_290 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter2_sendWord_keep_V_reg_278 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op10_read_state1_assign_proc : process(ls_writeRemainder, tmp_1_nbreadreq_fu_204_p6)
    begin
                ap_predicate_op10_read_state1 <= ((tmp_1_nbreadreq_fu_204_p6 = ap_const_lv1_1) and (ls_writeRemainder = ap_const_lv1_0));
    end process;


    ap_predicate_op123_write_state3_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter1_reg, tmp_1_reg_954_pp0_iter1_reg, ls_firstWord_load_reg_971_pp0_iter1_reg)
    begin
                ap_predicate_op123_write_state3 <= ((ls_firstWord_load_reg_971_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_reg_954_pp0_iter1_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op128_write_state3_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter1_reg, tmp_1_reg_954_pp0_iter1_reg)
    begin
                ap_predicate_op128_write_state3 <= ((tmp_1_reg_954_pp0_iter1_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op136_write_state4_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter2_reg, tmp_1_reg_954_pp0_iter2_reg, ls_firstWord_load_reg_971_pp0_iter2_reg)
    begin
                ap_predicate_op136_write_state4 <= ((ls_firstWord_load_reg_971_pp0_iter2_reg = ap_const_lv1_1) and (tmp_1_reg_954_pp0_iter2_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op137_write_state4_assign_proc : process(ls_writeRemainder_load_reg_950_pp0_iter2_reg, tmp_1_reg_954_pp0_iter2_reg)
    begin
                ap_predicate_op137_write_state4 <= ((tmp_1_reg_954_pp0_iter2_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter2_reg = ap_const_lv1_0));
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cksum_V_1_fu_673_p2 <= std_logic_vector(unsigned(zext_ln886_7_fu_669_p1) + unsigned(zext_ln886_3_fu_654_p1));
    cksum_V_fu_456_p1 <= input_r_TDATA_int_regslice(16 - 1 downto 0);
    grp_fu_320_p4 <= prevWord_data_V(511 downto 400);

    input_r_TDATA_blk_n_assign_proc : process(ls_writeRemainder, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, tmp_1_nbreadreq_fu_204_p6, input_r_TVALID_int_regslice)
    begin
        if (((tmp_1_nbreadreq_fu_204_p6 = ap_const_lv1_1) and (ls_writeRemainder = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_r_TDATA_blk_n <= input_r_TVALID_int_regslice;
        else 
            input_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    input_r_TREADY <= regslice_both_input_r_V_data_V_U_ack_in;

    input_r_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_predicate_op10_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1))) then 
            input_r_TREADY_int_regslice <= ap_const_logic_1;
        else 
            input_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    ip_output_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_enable_reg_pp0_iter3, ls_writeRemainder_load_reg_950_pp0_iter2_reg, tmp_1_reg_954_pp0_iter1_reg, tmp_1_reg_954_pp0_iter2_reg, ls_firstWord_load_reg_971_pp0_iter1_reg, ls_firstWord_load_reg_971_pp0_iter2_reg, ip_output_TREADY_int_regslice)
    begin
        if ((((ls_firstWord_load_reg_971_pp0_iter2_reg = ap_const_lv1_1) and (tmp_1_reg_954_pp0_iter2_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ls_firstWord_load_reg_971_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_reg_954_pp0_iter1_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            ip_output_TDATA_blk_n <= ip_output_TREADY_int_regslice;
        else 
            ip_output_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ip_output_TDATA_int_regslice <= tmp_data_V_reg_958_pp0_iter1_reg(159 downto 128);
    ip_output_TVALID <= regslice_both_ip_output_U_vld_out;

    ip_output_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op123_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op123_write_state3 = ap_const_boolean_1))) then 
            ip_output_TVALID_int_regslice <= ap_const_logic_1;
        else 
            ip_output_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    ls_firstWord_load_load_fu_354_p1 <= ls_firstWord;
    ls_writeRemainder_load_load_fu_333_p1 <= ls_writeRemainder;

    output_r_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_enable_reg_pp0_iter3, ls_writeRemainder_load_reg_950_pp0_iter2_reg, tmp_1_reg_954_pp0_iter1_reg, tmp_1_reg_954_pp0_iter2_reg, output_r_TREADY_int_regslice)
    begin
        if ((((tmp_1_reg_954_pp0_iter2_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((tmp_1_reg_954_pp0_iter1_reg = ap_const_lv1_1) and (ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ls_writeRemainder_load_reg_950_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            output_r_TDATA_blk_n <= output_r_TREADY_int_regslice;
        else 
            output_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    output_r_TDATA_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_predicate_op128_write_state3, zext_ln391_fu_932_p1, ap_phi_mux_sendWord_data_V_phi_fu_294_p4, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_1)) then 
                output_r_TDATA_int_regslice <= zext_ln391_fu_932_p1;
            elsif ((ap_predicate_op128_write_state3 = ap_const_boolean_1)) then 
                output_r_TDATA_int_regslice <= ap_phi_mux_sendWord_data_V_phi_fu_294_p4;
            else 
                output_r_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_r_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_TKEEP_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_predicate_op128_write_state3, zext_ln391_1_fu_945_p1, ap_phi_mux_sendWord_keep_V_phi_fu_282_p4, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_1)) then 
                output_r_TKEEP_int_regslice <= zext_ln391_1_fu_945_p1;
            elsif ((ap_predicate_op128_write_state3 = ap_const_boolean_1)) then 
                output_r_TKEEP_int_regslice <= ap_phi_mux_sendWord_keep_V_phi_fu_282_p4;
            else 
                output_r_TKEEP_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_r_TKEEP_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_TLAST_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_predicate_op128_write_state3, sendWord_last_V_reg_981_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_1)) then 
                output_r_TLAST_int_regslice <= ap_const_lv1_1;
            elsif ((ap_predicate_op128_write_state3 = ap_const_boolean_1)) then 
                output_r_TLAST_int_regslice <= sendWord_last_V_reg_981_pp0_iter1_reg;
            else 
                output_r_TLAST_int_regslice <= "X";
            end if;
        else 
            output_r_TLAST_int_regslice <= "X";
        end if; 
    end process;

    output_r_TVALID <= regslice_both_output_r_V_data_V_U_vld_out;

    output_r_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ls_writeRemainder_load_reg_950_pp0_iter1_reg, ap_predicate_op128_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ls_writeRemainder_load_reg_950_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op128_write_state3 = ap_const_boolean_1)))) then 
            output_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            output_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_10_fu_827_p5 <= (p_Result_9_fu_816_p5(511 downto 96) & trunc_ln674_2_reg_1025_pp0_iter1_reg & p_Result_9_fu_816_p5(87 downto 0));
    p_Result_11_fu_838_p5 <= (p_Result_10_fu_827_p5(511 downto 85) & tmp_11_reg_1030_pp0_iter1_reg & p_Result_10_fu_827_p5(79 downto 0));
    p_Result_12_fu_863_p5 <= (tmp_data_V_reg_958_pp0_iter1_reg(511 downto 96) & xor_ln414_fu_857_p2 & tmp_data_V_reg_958_pp0_iter1_reg(79 downto 0));
    p_Result_13_fu_887_p5 <= (tmp_21_fu_879_p3 & p_Result_11_fu_838_p5(95 downto 0));
    p_Result_14_fu_900_p3 <= (trunc_ln674_reg_975_pp0_iter1_reg & ap_const_lv14_3FFF);
    p_Result_15_fu_701_p3 <= (trunc_ln674_5_fu_698_p1 & grp_fu_320_p4);
    p_Result_16_fu_710_p3 <= (trunc_ln674_reg_975_pp0_iter1_reg & reg_329_pp0_iter1_reg);
    p_Result_1_fu_937_p3 <= (ap_const_lv1_0 & reg_329_pp0_iter1_reg);
    p_Result_2_fu_736_p8 <= ((((((tmp_8_fu_718_p4 & tmp_10_reg_1020_pp0_iter1_reg) & tmp_9_fu_727_p4) & tmp_4_reg_996_pp0_iter1_reg) & tmp_5_reg_1002_pp0_iter1_reg) & tmp_6_reg_1008_pp0_iter1_reg) & tmp_7_reg_1014_pp0_iter1_reg);
    p_Result_3_fu_749_p5 <= (ap_const_lv512_lc_1(511 downto 48) & p_Result_2_fu_736_p8);
    p_Result_4_fu_761_p5 <= (p_Result_3_fu_749_p5(511 downto 96) & trunc_ln674_1_reg_986_pp0_iter1_reg & p_Result_3_fu_749_p5(87 downto 0));
    p_Result_5_fu_772_p5 <= (p_Result_4_fu_761_p5(511 downto 88) & tmp_3_reg_991_pp0_iter1_reg & p_Result_4_fu_761_p5(79 downto 0));
    p_Result_6_fu_783_p5 <= (p_Result_5_fu_772_p5(511 downto 80) & tmp_4_reg_996_pp0_iter1_reg & p_Result_5_fu_772_p5(71 downto 0));
    p_Result_7_fu_794_p5 <= (p_Result_6_fu_783_p5(511 downto 72) & tmp_5_reg_1002_pp0_iter1_reg & p_Result_6_fu_783_p5(63 downto 0));
    p_Result_8_fu_805_p5 <= (p_Result_7_fu_794_p5(511 downto 64) & tmp_6_reg_1008_pp0_iter1_reg & p_Result_7_fu_794_p5(55 downto 0));
    p_Result_9_fu_816_p5 <= (p_Result_8_fu_805_p5(511 downto 56) & tmp_7_reg_1014_pp0_iter1_reg & p_Result_8_fu_805_p5(47 downto 0));
    p_Result_s_fu_924_p3 <= (ap_const_lv1_0 & grp_fu_320_p4);
    sendWord_last_V_fu_372_p2 <= "1" when (tmp_2_fu_362_p4 = ap_const_lv14_0) else "0";
    tmp_12_fu_464_p4 <= input_r_TDATA_int_regslice(31 downto 16);
    tmp_13_fu_478_p4 <= input_r_TDATA_int_regslice(47 downto 32);
    tmp_15_fu_492_p4 <= input_r_TDATA_int_regslice(63 downto 48);
    tmp_16_fu_506_p4 <= input_r_TDATA_int_regslice(79 downto 64);
    tmp_17_fu_520_p4 <= input_r_TDATA_int_regslice(111 downto 96);
    tmp_18_fu_534_p4 <= input_r_TDATA_int_regslice(127 downto 112);
    tmp_19_fu_548_p4 <= input_r_TDATA_int_regslice(143 downto 128);
    tmp_1_nbreadreq_fu_204_p6 <= (0=>(input_r_TVALID_int_regslice), others=>'-');
    tmp_20_fu_562_p4 <= input_r_TDATA_int_regslice(159 downto 144);
    tmp_21_fu_879_p3 <= (trunc_ln674_4_fu_875_p1 & ap_const_lv16_8);
    tmp_2_fu_362_p4 <= input_r_TKEEP_int_regslice(63 downto 50);
    tmp_8_fu_718_p4 <= tmp_data_V_reg_958_pp0_iter1_reg(159 downto 152);
    tmp_9_fu_727_p4 <= tmp_data_V_reg_958_pp0_iter1_reg(148 downto 144);
    tmp_last_V_1_fu_350_p1 <= input_r_TLAST_int_regslice;
    trunc_ln357_fu_679_p1 <= cksum_V_1_fu_673_p2(16 - 1 downto 0);
    trunc_ln674_1_fu_378_p1 <= mac_subnet(8 - 1 downto 0);
    trunc_ln674_2_fu_442_p1 <= id_src(8 - 1 downto 0);
    trunc_ln674_4_fu_875_p1 <= p_Result_12_fu_863_p5(400 - 1 downto 0);
    trunc_ln674_5_fu_698_p1 <= tmp_data_V_reg_958_pp0_iter1_reg(400 - 1 downto 0);
    trunc_ln674_fu_358_p1 <= input_r_TKEEP_int_regslice(50 - 1 downto 0);
    xor_ln414_fu_857_p2 <= (ap_const_lv16_FFFF xor add_ln414_fu_852_p2);
    xor_ln947_fu_630_p2 <= (sendWord_last_V_fu_372_p2 xor ap_const_lv1_1);
    zext_ln357_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_1055),16));
    zext_ln391_1_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_937_p3),64));
    zext_ln391_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_924_p3),512));
    zext_ln674_1_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_478_p4),17));
    zext_ln674_2_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_492_p4),18));
    zext_ln674_3_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_506_p4),17));
    zext_ln674_4_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_520_p4),17));
    zext_ln674_5_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_534_p4),17));
    zext_ln674_6_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_548_p4),17));
    zext_ln674_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_464_p4),17));
    zext_ln886_1_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_fu_576_p2),18));
    zext_ln886_2_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_1_fu_586_p2),18));
    zext_ln886_3_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_2_reg_1035),20));
    zext_ln886_4_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_3_reg_1040),19));
    zext_ln886_5_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_4_fu_608_p2),18));
    zext_ln886_6_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_5_reg_1045),19));
    zext_ln886_7_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_6_fu_663_p2),20));
    zext_ln886_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_562_p4),17));
    zext_ln92_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cksum_V_fu_456_p1),17));
end behav;
