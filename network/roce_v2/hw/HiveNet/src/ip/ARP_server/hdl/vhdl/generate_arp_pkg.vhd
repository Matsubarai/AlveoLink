-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity generate_arp_pkg is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arpReplyMetaFifo_V_s_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    arpReplyMetaFifo_V_s_empty_n : IN STD_LOGIC;
    arpReplyMetaFifo_V_s_read : OUT STD_LOGIC;
    arpReplyMetaFifo_V_s_1_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    arpReplyMetaFifo_V_s_1_empty_n : IN STD_LOGIC;
    arpReplyMetaFifo_V_s_1_read : OUT STD_LOGIC;
    arpReplyMetaFifo_V_s_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    arpReplyMetaFifo_V_s_2_empty_n : IN STD_LOGIC;
    arpReplyMetaFifo_V_s_2_read : OUT STD_LOGIC;
    arpRequestMetaFifo_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    arpRequestMetaFifo_V_empty_n : IN STD_LOGIC;
    arpRequestMetaFifo_V_read : OUT STD_LOGIC;
    m_axis_TREADY : IN STD_LOGIC;
    m_axis_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axis_TVALID : OUT STD_LOGIC;
    m_axis_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    myMacAddress_V : IN STD_LOGIC_VECTOR (47 downto 0);
    myIpAddress_V : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of generate_arp_pkg is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_3FFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000111111111111111111111111111111111111111111";
    constant ap_const_lv48_FFFFFFFFFFFF : STD_LOGIC_VECTOR (47 downto 0) := "111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op9 : STD_LOGIC;
    signal tmp_nbreadreq_fu_98_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_reg_290 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_nbreadreq_fu_120_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op15_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal tmp_2_reg_309 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_290_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op31_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal regslice_both_dataOut_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal tmp_2_reg_309_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_290_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op40_write_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal header_header_V_1 : STD_LOGIC_VECTOR (335 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000110000000000000100000000001000000000000011000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal m_axis_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal arpReplyMetaFifo_V_s_blk_n : STD_LOGIC;
    signal arpReplyMetaFifo_V_s_1_blk_n : STD_LOGIC;
    signal arpReplyMetaFifo_V_s_2_blk_n : STD_LOGIC;
    signal arpRequestMetaFifo_V_blk_n : STD_LOGIC;
    signal tmp_srcMacAddr_V_reg_294 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_senderHwAddr_V_reg_299 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_senderProtoAddr_s_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_5_fu_209_p5 : STD_LOGIC_VECTOR (335 downto 0);
    signal p_Result_s_fu_253_p5 : STD_LOGIC_VECTOR (335 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_ret_V_reg_149 : STD_LOGIC_VECTOR (335 downto 0);
    signal ap_phi_reg_pp0_iter1_ret_V_reg_149 : STD_LOGIC_VECTOR (335 downto 0);
    signal ap_phi_reg_pp0_iter2_ret_V_reg_149 : STD_LOGIC_VECTOR (335 downto 0);
    signal ap_sig_allocacmp_p_Val2_6 : STD_LOGIC_VECTOR (335 downto 0);
    signal ap_sig_allocacmp_p_Val2_s : STD_LOGIC_VECTOR (335 downto 0);
    signal grp_load_fu_158_p1 : STD_LOGIC_VECTOR (335 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Result_10_fu_174_p5 : STD_LOGIC_VECTOR (335 downto 0);
    signal p_Result_11_fu_186_p5 : STD_LOGIC_VECTOR (335 downto 0);
    signal tmp_3_fu_197_p6 : STD_LOGIC_VECTOR (175 downto 0);
    signal p_Result_8_fu_221_p5 : STD_LOGIC_VECTOR (335 downto 0);
    signal p_Result_9_fu_232_p5 : STD_LOGIC_VECTOR (335 downto 0);
    signal tmp_1_fu_243_p6 : STD_LOGIC_VECTOR (175 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal m_axis_TDATA_int : STD_LOGIC_VECTOR (511 downto 0);
    signal m_axis_TVALID_int : STD_LOGIC;
    signal m_axis_TREADY_int : STD_LOGIC;
    signal regslice_both_dataOut_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataOut_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dataOut_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dataOut_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataOut_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dataOut_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dataOut_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_condition_183 : BOOLEAN;
    signal ap_condition_146 : BOOLEAN;

    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_dataOut_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => m_axis_TDATA_int,
        vld_in => m_axis_TVALID_int,
        ack_in => m_axis_TREADY_int,
        data_out => m_axis_TDATA,
        vld_out => regslice_both_dataOut_V_data_V_U_vld_out,
        ack_out => m_axis_TREADY,
        apdone_blk => regslice_both_dataOut_V_data_V_U_apdone_blk);

    regslice_both_dataOut_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => ap_const_lv64_3FFFFFFFFFF,
        vld_in => m_axis_TVALID_int,
        ack_in => regslice_both_dataOut_V_keep_V_U_ack_in_dummy,
        data_out => m_axis_TKEEP,
        vld_out => regslice_both_dataOut_V_keep_V_U_vld_out,
        ack_out => m_axis_TREADY,
        apdone_blk => regslice_both_dataOut_V_keep_V_U_apdone_blk);

    regslice_both_dataOut_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => ap_const_lv1_1,
        vld_in => m_axis_TVALID_int,
        ack_in => regslice_both_dataOut_V_last_V_U_ack_in_dummy,
        data_out => m_axis_TLAST,
        vld_out => regslice_both_dataOut_V_last_V_U_vld_out,
        ack_out => m_axis_TREADY,
        apdone_blk => regslice_both_dataOut_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_ret_V_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_183)) then
                if ((tmp_reg_290 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter2_ret_V_reg_149 <= p_Result_s_fu_253_p5;
                elsif (((tmp_reg_290 = ap_const_lv1_0) and (tmp_2_nbreadreq_fu_120_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_ret_V_reg_149 <= p_Result_5_fu_209_p5;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_ret_V_reg_149 <= ap_phi_reg_pp0_iter1_ret_V_reg_149;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_ret_V_reg_149 <= ap_phi_reg_pp0_iter0_ret_V_reg_149;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and ((tmp_reg_290_pp0_iter1_reg = ap_const_lv1_1) or (tmp_2_reg_309 = ap_const_lv1_1)))) then
                header_header_V_1 <= ap_phi_reg_pp0_iter2_ret_V_reg_149;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_290 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_2_reg_309 <= tmp_2_nbreadreq_fu_120_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                tmp_2_reg_309_pp0_iter2_reg <= tmp_2_reg_309;
                tmp_reg_290_pp0_iter2_reg <= tmp_reg_290_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_290 <= tmp_nbreadreq_fu_98_p5;
                tmp_reg_290_pp0_iter1_reg <= tmp_reg_290;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_senderHwAddr_V_reg_299 <= arpReplyMetaFifo_V_s_1_dout;
                tmp_senderProtoAddr_s_reg_304 <= arpReplyMetaFifo_V_s_2_dout;
                tmp_srcMacAddr_V_reg_294 <= arpReplyMetaFifo_V_s_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, io_acc_block_signal_op9, tmp_nbreadreq_fu_98_p5, arpRequestMetaFifo_V_empty_n, ap_predicate_op15_read_state2, regslice_both_dataOut_V_data_V_U_apdone_blk)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((regslice_both_dataOut_V_data_V_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((arpRequestMetaFifo_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op15_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (io_acc_block_signal_op9 = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, io_acc_block_signal_op9, tmp_nbreadreq_fu_98_p5, arpRequestMetaFifo_V_empty_n, ap_predicate_op15_read_state2, ap_block_state3_io, regslice_both_dataOut_V_data_V_U_apdone_blk, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((arpRequestMetaFifo_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op15_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (io_acc_block_signal_op9 = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((regslice_both_dataOut_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state4_io))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, io_acc_block_signal_op9, tmp_nbreadreq_fu_98_p5, arpRequestMetaFifo_V_empty_n, ap_predicate_op15_read_state2, ap_block_state3_io, regslice_both_dataOut_V_data_V_U_apdone_blk, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((arpRequestMetaFifo_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op15_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (io_acc_block_signal_op9 = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((regslice_both_dataOut_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state4_io))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, io_acc_block_signal_op9, tmp_nbreadreq_fu_98_p5)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (io_acc_block_signal_op9 = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(arpRequestMetaFifo_V_empty_n, ap_predicate_op15_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((arpRequestMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op15_read_state2 = ap_const_boolean_1));
    end process;


    ap_block_state3_io_assign_proc : process(ap_predicate_op31_write_state3, m_axis_TREADY_int)
    begin
                ap_block_state3_io <= ((m_axis_TREADY_int = ap_const_logic_0) and (ap_predicate_op31_write_state3 = ap_const_boolean_1));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(ap_predicate_op40_write_state4, m_axis_TREADY_int)
    begin
                ap_block_state4_io <= ((m_axis_TREADY_int = ap_const_logic_0) and (ap_predicate_op40_write_state4 = ap_const_boolean_1));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(regslice_both_dataOut_V_data_V_U_apdone_blk)
    begin
                ap_block_state4_pp0_stage0_iter3 <= (regslice_both_dataOut_V_data_V_U_apdone_blk = ap_const_logic_1);
    end process;


    ap_condition_146_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_146 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_183_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_183 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_ret_V_reg_149 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op15_read_state2_assign_proc : process(tmp_reg_290, tmp_2_nbreadreq_fu_120_p3)
    begin
                ap_predicate_op15_read_state2 <= ((tmp_reg_290 = ap_const_lv1_0) and (tmp_2_nbreadreq_fu_120_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op31_write_state3_assign_proc : process(tmp_2_reg_309, tmp_reg_290_pp0_iter1_reg)
    begin
                ap_predicate_op31_write_state3 <= ((tmp_reg_290_pp0_iter1_reg = ap_const_lv1_1) or (tmp_2_reg_309 = ap_const_lv1_1));
    end process;


    ap_predicate_op40_write_state4_assign_proc : process(tmp_2_reg_309_pp0_iter2_reg, tmp_reg_290_pp0_iter2_reg)
    begin
                ap_predicate_op40_write_state4 <= ((tmp_reg_290_pp0_iter2_reg = ap_const_lv1_1) or (tmp_2_reg_309_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_p_Val2_6_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_2_reg_309, tmp_reg_290_pp0_iter1_reg, header_header_V_1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter2_ret_V_reg_149)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and ((tmp_reg_290_pp0_iter1_reg = ap_const_lv1_1) or (tmp_2_reg_309 = ap_const_lv1_1)))) then 
            ap_sig_allocacmp_p_Val2_6 <= ap_phi_reg_pp0_iter2_ret_V_reg_149;
        else 
            ap_sig_allocacmp_p_Val2_6 <= header_header_V_1;
        end if; 
    end process;


    ap_sig_allocacmp_p_Val2_s_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_2_reg_309, tmp_reg_290_pp0_iter1_reg, header_header_V_1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter2_ret_V_reg_149)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and ((tmp_reg_290_pp0_iter1_reg = ap_const_lv1_1) or (tmp_2_reg_309 = ap_const_lv1_1)))) then 
            ap_sig_allocacmp_p_Val2_s <= ap_phi_reg_pp0_iter2_ret_V_reg_149;
        else 
            ap_sig_allocacmp_p_Val2_s <= header_header_V_1;
        end if; 
    end process;


    arpReplyMetaFifo_V_s_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, arpReplyMetaFifo_V_s_1_empty_n, tmp_nbreadreq_fu_98_p5, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpReplyMetaFifo_V_s_1_blk_n <= arpReplyMetaFifo_V_s_1_empty_n;
        else 
            arpReplyMetaFifo_V_s_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arpReplyMetaFifo_V_s_1_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_98_p5, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            arpReplyMetaFifo_V_s_1_read <= ap_const_logic_1;
        else 
            arpReplyMetaFifo_V_s_1_read <= ap_const_logic_0;
        end if; 
    end process;


    arpReplyMetaFifo_V_s_2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, arpReplyMetaFifo_V_s_2_empty_n, tmp_nbreadreq_fu_98_p5, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpReplyMetaFifo_V_s_2_blk_n <= arpReplyMetaFifo_V_s_2_empty_n;
        else 
            arpReplyMetaFifo_V_s_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arpReplyMetaFifo_V_s_2_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_98_p5, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            arpReplyMetaFifo_V_s_2_read <= ap_const_logic_1;
        else 
            arpReplyMetaFifo_V_s_2_read <= ap_const_logic_0;
        end if; 
    end process;


    arpReplyMetaFifo_V_s_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, arpReplyMetaFifo_V_s_empty_n, tmp_nbreadreq_fu_98_p5, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpReplyMetaFifo_V_s_blk_n <= arpReplyMetaFifo_V_s_empty_n;
        else 
            arpReplyMetaFifo_V_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arpReplyMetaFifo_V_s_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_98_p5, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_98_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            arpReplyMetaFifo_V_s_read <= ap_const_logic_1;
        else 
            arpReplyMetaFifo_V_s_read <= ap_const_logic_0;
        end if; 
    end process;


    arpRequestMetaFifo_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, arpRequestMetaFifo_V_empty_n, ap_predicate_op15_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op15_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpRequestMetaFifo_V_blk_n <= arpRequestMetaFifo_V_empty_n;
        else 
            arpRequestMetaFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arpRequestMetaFifo_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op15_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op15_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            arpRequestMetaFifo_V_read <= ap_const_logic_1;
        else 
            arpRequestMetaFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_load_fu_158_p1_assign_proc : process(tmp_reg_290, tmp_2_nbreadreq_fu_120_p3, ap_sig_allocacmp_p_Val2_6, ap_sig_allocacmp_p_Val2_s, ap_condition_146)
    begin
        if ((ap_const_boolean_1 = ap_condition_146)) then
            if ((tmp_reg_290 = ap_const_lv1_1)) then 
                grp_load_fu_158_p1 <= ap_sig_allocacmp_p_Val2_s;
            elsif (((tmp_reg_290 = ap_const_lv1_0) and (tmp_2_nbreadreq_fu_120_p3 = ap_const_lv1_1))) then 
                grp_load_fu_158_p1 <= ap_sig_allocacmp_p_Val2_6;
            else 
                grp_load_fu_158_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_load_fu_158_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    io_acc_block_signal_op9 <= (arpReplyMetaFifo_V_s_empty_n and arpReplyMetaFifo_V_s_2_empty_n and arpReplyMetaFifo_V_s_1_empty_n);

    m_axis_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_predicate_op31_write_state3, ap_predicate_op40_write_state4, ap_block_pp0_stage0, m_axis_TREADY_int)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op31_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op40_write_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            m_axis_TDATA_blk_n <= m_axis_TREADY_int;
        else 
            m_axis_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter2_ret_V_reg_149),512));
    m_axis_TVALID <= regslice_both_dataOut_V_data_V_U_vld_out;

    m_axis_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op31_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op31_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axis_TVALID_int <= ap_const_logic_1;
        else 
            m_axis_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_10_fu_174_p5 <= (grp_load_fu_158_p1(335 downto 48) & ap_const_lv48_FFFFFFFFFFFF);
    p_Result_11_fu_186_p5 <= (p_Result_10_fu_174_p5(335 downto 96) & myMacAddress_V & p_Result_10_fu_174_p5(47 downto 0));
    p_Result_5_fu_209_p5 <= (tmp_3_fu_197_p6 & p_Result_11_fu_186_p5(159 downto 0));
    p_Result_8_fu_221_p5 <= (grp_load_fu_158_p1(335 downto 48) & tmp_srcMacAddr_V_reg_294);
    p_Result_9_fu_232_p5 <= (p_Result_8_fu_221_p5(335 downto 96) & myMacAddress_V & p_Result_8_fu_221_p5(47 downto 0));
    p_Result_s_fu_253_p5 <= (tmp_1_fu_243_p6 & p_Result_9_fu_232_p5(159 downto 0));
    tmp_1_fu_243_p6 <= ((((tmp_senderProtoAddr_s_reg_304 & tmp_senderHwAddr_V_reg_299) & myIpAddress_V) & myMacAddress_V) & ap_const_lv16_200);
    tmp_2_nbreadreq_fu_120_p3 <= (0=>(arpRequestMetaFifo_V_empty_n), others=>'-');
    tmp_3_fu_197_p6 <= ((((arpRequestMetaFifo_V_dout & ap_const_lv48_0) & myIpAddress_V) & myMacAddress_V) & ap_const_lv16_100);
    tmp_nbreadreq_fu_98_p5 <= (0=>(arpReplyMetaFifo_V_s_empty_n and arpReplyMetaFifo_V_s_2_empty_n and arpReplyMetaFifo_V_s_1_empty_n), others=>'-');
end behav;
