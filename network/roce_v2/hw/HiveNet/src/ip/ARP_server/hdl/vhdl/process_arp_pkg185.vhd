-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity process_arp_pkg185 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_axis_TVALID : IN STD_LOGIC;
    arpTableInsertFifo_V_din : OUT STD_LOGIC_VECTOR (12 downto 0);
    arpTableInsertFifo_V_full_n : IN STD_LOGIC;
    arpTableInsertFifo_V_write : OUT STD_LOGIC;
    arpReplyMetaFifo_V_s_din : OUT STD_LOGIC_VECTOR (47 downto 0);
    arpReplyMetaFifo_V_s_full_n : IN STD_LOGIC;
    arpReplyMetaFifo_V_s_write : OUT STD_LOGIC;
    arpReplyMetaFifo_V_s_1_din : OUT STD_LOGIC_VECTOR (47 downto 0);
    arpReplyMetaFifo_V_s_1_full_n : IN STD_LOGIC;
    arpReplyMetaFifo_V_s_1_write : OUT STD_LOGIC;
    arpReplyMetaFifo_V_s_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    arpReplyMetaFifo_V_s_2_full_n : IN STD_LOGIC;
    arpReplyMetaFifo_V_s_2_write : OUT STD_LOGIC;
    s_axis_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    s_axis_TREADY : OUT STD_LOGIC;
    s_axis_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    myIpAddress_V : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of process_arp_pkg185 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv25_14F : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000101001111";
    constant ap_const_lv335_lc_2 : STD_LOGIC_VECTOR (334 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv336_lc_3 : STD_LOGIC_VECTOR (335 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv336_lc_4 : STD_LOGIC_VECTOR (335 downto 0) := "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv336_lc_5 : STD_LOGIC_VECTOR (335 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111000";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_F4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110100";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv16_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_128_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal tmp_reg_470 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_470_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_474 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_474_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op70_write_state3 : BOOLEAN;
    signal io_acc_block_signal_op72 : STD_LOGIC;
    signal icmp_ln879_reg_512 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op72_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal header_ready : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal header_idx : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal header_header_V : STD_LOGIC_VECTOR (335 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000110000000000000100000000001000000000000011000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal s_axis_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal arpTableInsertFifo_V_blk_n : STD_LOGIC;
    signal arpReplyMetaFifo_V_s_blk_n : STD_LOGIC;
    signal arpReplyMetaFifo_V_s_1_blk_n : STD_LOGIC;
    signal arpReplyMetaFifo_V_s_2_blk_n : STD_LOGIC;
    signal tmp_last_V_fu_219_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal header_ready_load_load_fu_223_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal header_ready_load_reg_478 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln67_fu_343_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_fu_359_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_reg_493 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln883_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_i_i_i_reg_502 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_reg_507 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln879_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_srcMacAddr_V_reg_520 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_senderHwAddr_V_reg_525 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_phi_ln73_reg_170 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln73_reg_170 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_write_flag_1_i_i_i_reg_179 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_write_flag_1_i_i_i_reg_179 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_header_ready_1_new_0_phi_fu_196_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_header_ready_1_new_0_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_header_ready_1_new_0_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_header_idx_new_0_i_i_phi_fu_207_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_header_idx_new_0_i_i_reg_203 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_203 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_header_ready_load : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_header_idx_load : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_331_p2 : STD_LOGIC_VECTOR (335 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal Lo_assign_fu_231_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln414_fu_253_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal st4_fu_257_p3 : STD_LOGIC_VECTOR (335 downto 0);
    signal tmp_V_1_fu_239_p1 : STD_LOGIC_VECTOR (335 downto 0);
    signal select_ln414_fu_265_p3 : STD_LOGIC_VECTOR (335 downto 0);
    signal tmp_2_fu_273_p4 : STD_LOGIC_VECTOR (335 downto 0);
    signal select_ln414_2_fu_291_p3 : STD_LOGIC_VECTOR (335 downto 0);
    signal select_ln414_3_fu_299_p3 : STD_LOGIC_VECTOR (335 downto 0);
    signal and_ln414_fu_307_p2 : STD_LOGIC_VECTOR (335 downto 0);
    signal xor_ln414_fu_313_p2 : STD_LOGIC_VECTOR (335 downto 0);
    signal select_ln414_1_fu_283_p3 : STD_LOGIC_VECTOR (335 downto 0);
    signal and_ln414_1_fu_319_p2 : STD_LOGIC_VECTOR (335 downto 0);
    signal and_ln414_2_fu_325_p2 : STD_LOGIC_VECTOR (335 downto 0);
    signal p_Result_i28_i_i_fu_395_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_i30_i_i_fu_410_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_101 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_101)) then
                if (((tmp_last_V_fu_219_p1 = ap_const_lv1_1) and (tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_203 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_203 <= ap_phi_reg_pp0_iter0_header_idx_new_0_i_i_reg_203;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_header_ready_1_new_0_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_101)) then
                if (((tmp_last_V_fu_219_p1 = ap_const_lv1_1) and (tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_header_ready_1_new_0_reg_192 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_header_ready_1_new_0_reg_192 <= ap_phi_reg_pp0_iter0_header_ready_1_new_0_reg_192;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_phi_ln73_reg_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_101)) then
                if (((header_ready_load_load_fu_223_p1 = ap_const_lv1_0) and (tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_phi_ln73_reg_170 <= add_ln67_fu_343_p2;
                elsif (((header_ready_load_load_fu_223_p1 = ap_const_lv1_1) and (tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_phi_ln73_reg_170 <= ap_sig_allocacmp_header_idx_load;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_phi_ln73_reg_170 <= ap_phi_reg_pp0_iter0_phi_ln73_reg_170;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_write_flag_1_i_i_i_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_101)) then
                if (((header_ready_load_load_fu_223_p1 = ap_const_lv1_0) and (tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_write_flag_1_i_i_i_reg_179 <= ap_const_lv1_1;
                elsif (((header_ready_load_load_fu_223_p1 = ap_const_lv1_1) and (tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_write_flag_1_i_i_i_reg_179 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_write_flag_1_i_i_i_reg_179 <= ap_phi_reg_pp0_iter0_write_flag_1_i_i_i_reg_179;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (header_ready_load_load_fu_223_p1 = ap_const_lv1_0) and (tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                header_header_V <= p_Result_s_fu_331_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_470 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                header_idx <= ap_phi_mux_header_idx_new_0_i_i_phi_fu_207_p4;
                header_ready <= ap_phi_mux_header_ready_1_new_0_phi_fu_196_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                header_ready_load_reg_478 <= ap_sig_allocacmp_header_ready_load;
                tmp_last_V_reg_474 <= s_axis_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_last_V_reg_474 = ap_const_lv1_1) and (tmp_reg_470 = ap_const_lv1_1) and (icmp_ln879_fu_405_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_1_reg_516 <= icmp_ln879_1_fu_420_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_last_V_reg_474 = ap_const_lv1_1) and (tmp_reg_470 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_reg_512 <= icmp_ln879_fu_405_p2;
                icmp_ln883_reg_498 <= icmp_ln883_fu_369_p2;
                p_Val2_3_reg_493 <= header_header_V(255 downto 224);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln883_fu_369_p2 = ap_const_lv1_0) and (tmp_last_V_reg_474 = ap_const_lv1_1) and (tmp_reg_470 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Result_2_i_i_i_reg_502 <= header_header_V(255 downto 248);
                tmp_1_reg_507 <= header_header_V(244 downto 240);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_last_V_reg_474_pp0_iter1_reg <= tmp_last_V_reg_474;
                tmp_reg_470 <= tmp_nbreadreq_fu_128_p5;
                tmp_reg_470_pp0_iter1_reg <= tmp_reg_470;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_last_V_reg_474 = ap_const_lv1_1) and (tmp_reg_470 = ap_const_lv1_1) and (icmp_ln879_1_fu_420_p2 = ap_const_lv1_1) and (icmp_ln879_fu_405_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_senderHwAddr_V_reg_525 <= header_header_V(223 downto 176);
                tmp_srcMacAddr_V_reg_520 <= header_header_V(95 downto 48);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Lo_assign_fu_231_p3 <= (ap_sig_allocacmp_header_idx_load & ap_const_lv9_0);
    add_ln67_fu_343_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ap_sig_allocacmp_header_idx_load));
    and_ln414_1_fu_319_p2 <= (xor_ln414_fu_313_p2 and header_header_V);
    and_ln414_2_fu_325_p2 <= (select_ln414_1_fu_283_p3 and and_ln414_fu_307_p2);
    and_ln414_fu_307_p2 <= (select_ln414_3_fu_299_p3 and select_ln414_2_fu_291_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, s_axis_TVALID, tmp_nbreadreq_fu_128_p5, arpTableInsertFifo_V_full_n, ap_predicate_op70_write_state3, io_acc_block_signal_op72, ap_predicate_op72_write_state3)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((io_acc_block_signal_op72 = ap_const_logic_0) and (ap_predicate_op72_write_state3 = ap_const_boolean_1)) or ((arpTableInsertFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state3 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1) and (s_axis_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, s_axis_TVALID, tmp_nbreadreq_fu_128_p5, arpTableInsertFifo_V_full_n, ap_predicate_op70_write_state3, io_acc_block_signal_op72, ap_predicate_op72_write_state3)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((io_acc_block_signal_op72 = ap_const_logic_0) and (ap_predicate_op72_write_state3 = ap_const_boolean_1)) or ((arpTableInsertFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state3 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1) and (s_axis_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, s_axis_TVALID, tmp_nbreadreq_fu_128_p5, arpTableInsertFifo_V_full_n, ap_predicate_op70_write_state3, io_acc_block_signal_op72, ap_predicate_op72_write_state3)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((io_acc_block_signal_op72 = ap_const_logic_0) and (ap_predicate_op72_write_state3 = ap_const_boolean_1)) or ((arpTableInsertFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state3 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1) and (s_axis_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, s_axis_TVALID, tmp_nbreadreq_fu_128_p5)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1) and (s_axis_TVALID = ap_const_logic_0)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter2_assign_proc : process(arpTableInsertFifo_V_full_n, ap_predicate_op70_write_state3, io_acc_block_signal_op72, ap_predicate_op72_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((io_acc_block_signal_op72 = ap_const_logic_0) and (ap_predicate_op72_write_state3 = ap_const_boolean_1)) or ((arpTableInsertFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state3 = ap_const_boolean_1)));
    end process;


    ap_condition_101_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_101 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_header_idx_new_0_i_i_phi_fu_207_p4_assign_proc : process(tmp_reg_470, tmp_last_V_reg_474, ap_phi_reg_pp0_iter1_phi_ln73_reg_170, ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_203)
    begin
        if (((tmp_last_V_reg_474 = ap_const_lv1_0) and (tmp_reg_470 = ap_const_lv1_1))) then 
            ap_phi_mux_header_idx_new_0_i_i_phi_fu_207_p4 <= ap_phi_reg_pp0_iter1_phi_ln73_reg_170;
        else 
            ap_phi_mux_header_idx_new_0_i_i_phi_fu_207_p4 <= ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_203;
        end if; 
    end process;


    ap_phi_mux_header_ready_1_new_0_phi_fu_196_p4_assign_proc : process(tmp_reg_470, tmp_last_V_reg_474, ap_phi_reg_pp0_iter1_header_ready_1_new_0_reg_192, or_ln73_fu_349_p2)
    begin
        if (((tmp_last_V_reg_474 = ap_const_lv1_0) and (tmp_reg_470 = ap_const_lv1_1))) then 
            ap_phi_mux_header_ready_1_new_0_phi_fu_196_p4 <= or_ln73_fu_349_p2;
        else 
            ap_phi_mux_header_ready_1_new_0_phi_fu_196_p4 <= ap_phi_reg_pp0_iter1_header_ready_1_new_0_reg_192;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_header_idx_new_0_i_i_reg_203 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_header_ready_1_new_0_reg_192 <= "X";
    ap_phi_reg_pp0_iter0_phi_ln73_reg_170 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_write_flag_1_i_i_i_reg_179 <= "X";

    ap_predicate_op70_write_state3_assign_proc : process(tmp_reg_470_pp0_iter1_reg, tmp_last_V_reg_474_pp0_iter1_reg, icmp_ln883_reg_498)
    begin
                ap_predicate_op70_write_state3 <= ((icmp_ln883_reg_498 = ap_const_lv1_0) and (tmp_last_V_reg_474_pp0_iter1_reg = ap_const_lv1_1) and (tmp_reg_470_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op72_write_state3_assign_proc : process(tmp_reg_470_pp0_iter1_reg, tmp_last_V_reg_474_pp0_iter1_reg, icmp_ln879_reg_512, icmp_ln879_1_reg_516)
    begin
                ap_predicate_op72_write_state3 <= ((icmp_ln879_1_reg_516 = ap_const_lv1_1) and (icmp_ln879_reg_512 = ap_const_lv1_1) and (tmp_last_V_reg_474_pp0_iter1_reg = ap_const_lv1_1) and (tmp_reg_470_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_header_idx_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_470, header_idx, ap_block_pp0_stage0, ap_phi_mux_header_idx_new_0_i_i_phi_fu_207_p4)
    begin
        if (((tmp_reg_470 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_header_idx_load <= ap_phi_mux_header_idx_new_0_i_i_phi_fu_207_p4;
        else 
            ap_sig_allocacmp_header_idx_load <= header_idx;
        end if; 
    end process;


    ap_sig_allocacmp_header_ready_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_470, header_ready, ap_block_pp0_stage0, ap_phi_mux_header_ready_1_new_0_phi_fu_196_p4)
    begin
        if (((tmp_reg_470 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_header_ready_load <= ap_phi_mux_header_ready_1_new_0_phi_fu_196_p4;
        else 
            ap_sig_allocacmp_header_ready_load <= header_ready;
        end if; 
    end process;


    arpReplyMetaFifo_V_s_1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, arpReplyMetaFifo_V_s_1_full_n, ap_predicate_op72_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op72_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpReplyMetaFifo_V_s_1_blk_n <= arpReplyMetaFifo_V_s_1_full_n;
        else 
            arpReplyMetaFifo_V_s_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    arpReplyMetaFifo_V_s_1_din <= tmp_senderHwAddr_V_reg_525;

    arpReplyMetaFifo_V_s_1_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op72_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op72_write_state3 = ap_const_boolean_1))) then 
            arpReplyMetaFifo_V_s_1_write <= ap_const_logic_1;
        else 
            arpReplyMetaFifo_V_s_1_write <= ap_const_logic_0;
        end if; 
    end process;


    arpReplyMetaFifo_V_s_2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, arpReplyMetaFifo_V_s_2_full_n, ap_predicate_op72_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op72_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpReplyMetaFifo_V_s_2_blk_n <= arpReplyMetaFifo_V_s_2_full_n;
        else 
            arpReplyMetaFifo_V_s_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    arpReplyMetaFifo_V_s_2_din <= p_Val2_3_reg_493;

    arpReplyMetaFifo_V_s_2_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op72_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op72_write_state3 = ap_const_boolean_1))) then 
            arpReplyMetaFifo_V_s_2_write <= ap_const_logic_1;
        else 
            arpReplyMetaFifo_V_s_2_write <= ap_const_logic_0;
        end if; 
    end process;


    arpReplyMetaFifo_V_s_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, arpReplyMetaFifo_V_s_full_n, ap_predicate_op72_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op72_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpReplyMetaFifo_V_s_blk_n <= arpReplyMetaFifo_V_s_full_n;
        else 
            arpReplyMetaFifo_V_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    arpReplyMetaFifo_V_s_din <= tmp_srcMacAddr_V_reg_520;

    arpReplyMetaFifo_V_s_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op72_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op72_write_state3 = ap_const_boolean_1))) then 
            arpReplyMetaFifo_V_s_write <= ap_const_logic_1;
        else 
            arpReplyMetaFifo_V_s_write <= ap_const_logic_0;
        end if; 
    end process;


    arpTableInsertFifo_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, arpTableInsertFifo_V_full_n, ap_predicate_op70_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op70_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpTableInsertFifo_V_blk_n <= arpTableInsertFifo_V_full_n;
        else 
            arpTableInsertFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    arpTableInsertFifo_V_din <= (tmp_1_reg_507 & p_Result_2_i_i_i_reg_502);

    arpTableInsertFifo_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op70_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op70_write_state3 = ap_const_boolean_1))) then 
            arpTableInsertFifo_V_write <= ap_const_logic_1;
        else 
            arpTableInsertFifo_V_write <= ap_const_logic_0;
        end if; 
    end process;

    header_ready_load_load_fu_223_p1 <= ap_sig_allocacmp_header_ready_load;
    icmp_ln414_fu_247_p2 <= "1" when (unsigned(Lo_assign_fu_231_p3) > unsigned(ap_const_lv25_14F)) else "0";
    icmp_ln879_1_fu_420_p2 <= "1" when (p_Result_i30_i_i_fu_410_p4 = ap_const_lv16_100) else "0";
    icmp_ln879_fu_405_p2 <= "1" when (p_Result_i28_i_i_fu_395_p4 = myIpAddress_V) else "0";
    icmp_ln883_fu_369_p2 <= "1" when (p_Val2_3_fu_359_p4 = ap_const_lv32_0) else "0";
    io_acc_block_signal_op72 <= (arpReplyMetaFifo_V_s_full_n and arpReplyMetaFifo_V_s_2_full_n and arpReplyMetaFifo_V_s_1_full_n);
    or_ln73_fu_349_p2 <= (header_ready_load_reg_478 or ap_phi_reg_pp0_iter1_write_flag_1_i_i_i_reg_179);
    p_Result_i28_i_i_fu_395_p4 <= header_header_V(335 downto 304);
    p_Result_i30_i_i_fu_410_p4 <= header_header_V(175 downto 160);
    p_Result_s_fu_331_p2 <= (and_ln414_2_fu_325_p2 or and_ln414_1_fu_319_p2);
    p_Val2_3_fu_359_p4 <= header_header_V(255 downto 224);

    s_axis_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, s_axis_TVALID, tmp_nbreadreq_fu_128_p5, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            s_axis_TDATA_blk_n <= s_axis_TVALID;
        else 
            s_axis_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    s_axis_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_128_p5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_128_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_axis_TREADY <= ap_const_logic_1;
        else 
            s_axis_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    select_ln414_1_fu_283_p3 <= 
        tmp_2_fu_273_p4 when (icmp_ln414_fu_247_p2(0) = '1') else 
        tmp_V_1_fu_239_p1;
    select_ln414_2_fu_291_p3 <= 
        ap_const_lv336_lc_3 when (icmp_ln414_fu_247_p2(0) = '1') else 
        ap_const_lv336_lc_4;
    select_ln414_3_fu_299_p3 <= 
        ap_const_lv336_lc_5 when (icmp_ln414_fu_247_p2(0) = '1') else 
        ap_const_lv336_lc_4;
    select_ln414_fu_265_p3 <= 
        st4_fu_257_p3 when (icmp_ln414_fu_247_p2(0) = '1') else 
        tmp_V_1_fu_239_p1;
    st4_fu_257_p3 <= (trunc_ln414_fu_253_p1 & ap_const_lv335_lc_2);
    
    tmp_2_fu_273_p4_proc : process(select_ln414_fu_265_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(336+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(336+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(336 - 1 downto 0);
    variable tmp_2_fu_273_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(336 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(336 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(336 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(9 - 1 downto 0) := ap_const_lv32_14F(9 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(9 - 1 downto 0) := ap_const_lv32_0(9 - 1 downto 0);
        v0_cpy := select_ln414_fu_265_p3;
        if (vlo_cpy(9 - 1 downto 0) > vhi_cpy(9 - 1 downto 0)) then
            vhi_cpy(9-1 downto 0) := std_logic_vector(336-1-unsigned(ap_const_lv32_0(9-1 downto 0)));
            vlo_cpy(9-1 downto 0) := std_logic_vector(336-1-unsigned(ap_const_lv32_14F(9-1 downto 0)));
            for tmp_2_fu_273_p4_i in 0 to 336-1 loop
                v0_cpy(tmp_2_fu_273_p4_i) := select_ln414_fu_265_p3(336-1-tmp_2_fu_273_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(9-1 downto 0)))));

        section := (others=>'0');
        section(9-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(9-1 downto 0)) - unsigned(vlo_cpy(9-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(336-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_2_fu_273_p4 <= resvalue(336-1 downto 0);
    end process;

    tmp_V_1_fu_239_p1 <= s_axis_TDATA(336 - 1 downto 0);
    tmp_last_V_fu_219_p1 <= s_axis_TLAST;
    tmp_nbreadreq_fu_128_p5 <= (0=>(s_axis_TVALID), others=>'-');
    trunc_ln414_fu_253_p1 <= s_axis_TDATA(1 - 1 downto 0);
    xor_ln414_fu_313_p2 <= (ap_const_lv336_lc_4 xor and_ln414_fu_307_p2);
end behav;
