// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generate_arp_pkg (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        arpReplyMetaFifo_V_s_dout,
        arpReplyMetaFifo_V_s_empty_n,
        arpReplyMetaFifo_V_s_read,
        arpReplyMetaFifo_V_s_1_dout,
        arpReplyMetaFifo_V_s_1_empty_n,
        arpReplyMetaFifo_V_s_1_read,
        arpReplyMetaFifo_V_s_2_dout,
        arpReplyMetaFifo_V_s_2_empty_n,
        arpReplyMetaFifo_V_s_2_read,
        arpRequestMetaFifo_V_dout,
        arpRequestMetaFifo_V_empty_n,
        arpRequestMetaFifo_V_read,
        m_axis_TREADY,
        m_axis_TDATA,
        m_axis_TVALID,
        m_axis_TKEEP,
        m_axis_TLAST,
        myMacAddress_V,
        myIpAddress_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [47:0] arpReplyMetaFifo_V_s_dout;
input   arpReplyMetaFifo_V_s_empty_n;
output   arpReplyMetaFifo_V_s_read;
input  [47:0] arpReplyMetaFifo_V_s_1_dout;
input   arpReplyMetaFifo_V_s_1_empty_n;
output   arpReplyMetaFifo_V_s_1_read;
input  [31:0] arpReplyMetaFifo_V_s_2_dout;
input   arpReplyMetaFifo_V_s_2_empty_n;
output   arpReplyMetaFifo_V_s_2_read;
input  [31:0] arpRequestMetaFifo_V_dout;
input   arpRequestMetaFifo_V_empty_n;
output   arpRequestMetaFifo_V_read;
input   m_axis_TREADY;
output  [511:0] m_axis_TDATA;
output   m_axis_TVALID;
output  [63:0] m_axis_TKEEP;
output  [0:0] m_axis_TLAST;
input  [47:0] myMacAddress_V;
input  [31:0] myIpAddress_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg arpReplyMetaFifo_V_s_read;
reg arpReplyMetaFifo_V_s_1_read;
reg arpReplyMetaFifo_V_s_2_read;
reg arpRequestMetaFifo_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op9;
wire   [0:0] tmp_nbreadreq_fu_98_p5;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] tmp_reg_290;
wire   [0:0] tmp_2_nbreadreq_fu_120_p3;
reg    ap_predicate_op15_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] tmp_2_reg_309;
reg   [0:0] tmp_reg_290_pp0_iter1_reg;
reg    ap_predicate_op31_write_state3;
reg    ap_block_state3_io;
wire    regslice_both_dataOut_V_data_V_U_apdone_blk;
reg    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] tmp_2_reg_309_pp0_iter2_reg;
reg   [0:0] tmp_reg_290_pp0_iter2_reg;
reg    ap_predicate_op40_write_state4;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
reg   [335:0] header_header_V_1;
reg    m_axis_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    arpReplyMetaFifo_V_s_blk_n;
reg    arpReplyMetaFifo_V_s_1_blk_n;
reg    arpReplyMetaFifo_V_s_2_blk_n;
reg    arpRequestMetaFifo_V_blk_n;
reg   [47:0] tmp_srcMacAddr_V_reg_294;
reg   [47:0] tmp_senderHwAddr_V_reg_299;
reg   [31:0] tmp_senderProtoAddr_s_reg_304;
wire   [335:0] p_Result_5_fu_209_p5;
wire   [335:0] p_Result_s_fu_253_p5;
reg    ap_block_pp0_stage0_subdone;
wire   [335:0] ap_phi_reg_pp0_iter0_ret_V_reg_149;
reg   [335:0] ap_phi_reg_pp0_iter1_ret_V_reg_149;
reg   [335:0] ap_phi_reg_pp0_iter2_ret_V_reg_149;
reg   [335:0] ap_sig_allocacmp_p_Val2_6;
reg   [335:0] ap_sig_allocacmp_p_Val2_s;
reg   [335:0] grp_load_fu_158_p1;
reg    ap_block_pp0_stage0_01001;
wire   [335:0] p_Result_10_fu_174_p5;
wire   [335:0] p_Result_11_fu_186_p5;
wire   [175:0] tmp_3_fu_197_p6;
wire   [335:0] p_Result_8_fu_221_p5;
wire   [335:0] p_Result_9_fu_232_p5;
wire   [175:0] tmp_1_fu_243_p6;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [511:0] m_axis_TDATA_int;
reg    m_axis_TVALID_int;
wire    m_axis_TREADY_int;
wire    regslice_both_dataOut_V_data_V_U_vld_out;
wire    regslice_both_dataOut_V_keep_V_U_apdone_blk;
wire    regslice_both_dataOut_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_keep_V_U_vld_out;
wire    regslice_both_dataOut_V_last_V_U_apdone_blk;
wire    regslice_both_dataOut_V_last_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_last_V_U_vld_out;
reg    ap_condition_183;
reg    ap_condition_146;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 header_header_V_1 = 336'd22969770278074827527357335424865723297445183488;
end

regslice_both #(
    .DataWidth( 512 ))
regslice_both_dataOut_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_TDATA_int),
    .vld_in(m_axis_TVALID_int),
    .ack_in(m_axis_TREADY_int),
    .data_out(m_axis_TDATA),
    .vld_out(regslice_both_dataOut_V_data_V_U_vld_out),
    .ack_out(m_axis_TREADY),
    .apdone_blk(regslice_both_dataOut_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataOut_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(64'd4398046511103),
    .vld_in(m_axis_TVALID_int),
    .ack_in(regslice_both_dataOut_V_keep_V_U_ack_in_dummy),
    .data_out(m_axis_TKEEP),
    .vld_out(regslice_both_dataOut_V_keep_V_U_vld_out),
    .ack_out(m_axis_TREADY),
    .apdone_blk(regslice_both_dataOut_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataOut_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(1'd1),
    .vld_in(m_axis_TVALID_int),
    .ack_in(regslice_both_dataOut_V_last_V_U_ack_in_dummy),
    .data_out(m_axis_TLAST),
    .vld_out(regslice_both_dataOut_V_last_V_U_vld_out),
    .ack_out(m_axis_TREADY),
    .apdone_blk(regslice_both_dataOut_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_183)) begin
        if ((tmp_reg_290 == 1'd1)) begin
            ap_phi_reg_pp0_iter2_ret_V_reg_149 <= p_Result_s_fu_253_p5;
        end else if (((tmp_reg_290 == 1'd0) & (tmp_2_nbreadreq_fu_120_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter2_ret_V_reg_149 <= p_Result_5_fu_209_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_ret_V_reg_149 <= ap_phi_reg_pp0_iter1_ret_V_reg_149;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_ret_V_reg_149 <= ap_phi_reg_pp0_iter0_ret_V_reg_149;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & ((tmp_reg_290_pp0_iter1_reg == 1'd1) | (tmp_2_reg_309 == 1'd1)))) begin
        header_header_V_1 <= ap_phi_reg_pp0_iter2_ret_V_reg_149;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_290 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_2_reg_309 <= tmp_2_nbreadreq_fu_120_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_2_reg_309_pp0_iter2_reg <= tmp_2_reg_309;
        tmp_reg_290_pp0_iter2_reg <= tmp_reg_290_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_290 <= tmp_nbreadreq_fu_98_p5;
        tmp_reg_290_pp0_iter1_reg <= tmp_reg_290;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_98_p5 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_senderHwAddr_V_reg_299 <= arpReplyMetaFifo_V_s_1_dout;
        tmp_senderProtoAddr_s_reg_304 <= arpReplyMetaFifo_V_s_2_dout;
        tmp_srcMacAddr_V_reg_294 <= arpReplyMetaFifo_V_s_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & ((tmp_reg_290_pp0_iter1_reg == 1'd1) | (tmp_2_reg_309 == 1'd1)))) begin
        ap_sig_allocacmp_p_Val2_6 = ap_phi_reg_pp0_iter2_ret_V_reg_149;
    end else begin
        ap_sig_allocacmp_p_Val2_6 = header_header_V_1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & ((tmp_reg_290_pp0_iter1_reg == 1'd1) | (tmp_2_reg_309 == 1'd1)))) begin
        ap_sig_allocacmp_p_Val2_s = ap_phi_reg_pp0_iter2_ret_V_reg_149;
    end else begin
        ap_sig_allocacmp_p_Val2_s = header_header_V_1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_98_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        arpReplyMetaFifo_V_s_1_blk_n = arpReplyMetaFifo_V_s_1_empty_n;
    end else begin
        arpReplyMetaFifo_V_s_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_98_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpReplyMetaFifo_V_s_1_read = 1'b1;
    end else begin
        arpReplyMetaFifo_V_s_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_98_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        arpReplyMetaFifo_V_s_2_blk_n = arpReplyMetaFifo_V_s_2_empty_n;
    end else begin
        arpReplyMetaFifo_V_s_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_98_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpReplyMetaFifo_V_s_2_read = 1'b1;
    end else begin
        arpReplyMetaFifo_V_s_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_98_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        arpReplyMetaFifo_V_s_blk_n = arpReplyMetaFifo_V_s_empty_n;
    end else begin
        arpReplyMetaFifo_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_98_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpReplyMetaFifo_V_s_read = 1'b1;
    end else begin
        arpReplyMetaFifo_V_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op15_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        arpRequestMetaFifo_V_blk_n = arpRequestMetaFifo_V_empty_n;
    end else begin
        arpRequestMetaFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op15_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpRequestMetaFifo_V_read = 1'b1;
    end else begin
        arpRequestMetaFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_146)) begin
        if ((tmp_reg_290 == 1'd1)) begin
            grp_load_fu_158_p1 = ap_sig_allocacmp_p_Val2_s;
        end else if (((tmp_reg_290 == 1'd0) & (tmp_2_nbreadreq_fu_120_p3 == 1'd1))) begin
            grp_load_fu_158_p1 = ap_sig_allocacmp_p_Val2_6;
        end else begin
            grp_load_fu_158_p1 = 'bx;
        end
    end else begin
        grp_load_fu_158_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op31_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op40_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        m_axis_TDATA_blk_n = m_axis_TREADY_int;
    end else begin
        m_axis_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op31_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axis_TVALID_int = 1'b1;
    end else begin
        m_axis_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((arpRequestMetaFifo_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op15_read_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_98_p5 == 1'd1) & (io_acc_block_signal_op9 == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((arpRequestMetaFifo_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op15_read_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_98_p5 == 1'd1) & (io_acc_block_signal_op9 == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((arpRequestMetaFifo_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op15_read_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_98_p5 == 1'd1) & (io_acc_block_signal_op9 == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_98_p5 == 1'd1) & (io_acc_block_signal_op9 == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((arpRequestMetaFifo_V_empty_n == 1'b0) & (ap_predicate_op15_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_io = ((m_axis_TREADY_int == 1'b0) & (ap_predicate_op31_write_state3 == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axis_TREADY_int == 1'b0) & (ap_predicate_op40_write_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_condition_146 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_183 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_ret_V_reg_149 = 'bx;

always @ (*) begin
    ap_predicate_op15_read_state2 = ((tmp_reg_290 == 1'd0) & (tmp_2_nbreadreq_fu_120_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op31_write_state3 = ((tmp_reg_290_pp0_iter1_reg == 1'd1) | (tmp_2_reg_309 == 1'd1));
end

always @ (*) begin
    ap_predicate_op40_write_state4 = ((tmp_reg_290_pp0_iter2_reg == 1'd1) | (tmp_2_reg_309_pp0_iter2_reg == 1'd1));
end

assign io_acc_block_signal_op9 = (arpReplyMetaFifo_V_s_empty_n & arpReplyMetaFifo_V_s_2_empty_n & arpReplyMetaFifo_V_s_1_empty_n);

assign m_axis_TDATA_int = ap_phi_reg_pp0_iter2_ret_V_reg_149;

assign m_axis_TVALID = regslice_both_dataOut_V_data_V_U_vld_out;

assign p_Result_10_fu_174_p5 = {{grp_load_fu_158_p1[335:48]}, {48'd281474976710655}};

assign p_Result_11_fu_186_p5 = {{p_Result_10_fu_174_p5[335:96]}, {myMacAddress_V}, {p_Result_10_fu_174_p5[47:0]}};

assign p_Result_5_fu_209_p5 = {{tmp_3_fu_197_p6}, {p_Result_11_fu_186_p5[159:0]}};

assign p_Result_8_fu_221_p5 = {{grp_load_fu_158_p1[335:48]}, {tmp_srcMacAddr_V_reg_294}};

assign p_Result_9_fu_232_p5 = {{p_Result_8_fu_221_p5[335:96]}, {myMacAddress_V}, {p_Result_8_fu_221_p5[47:0]}};

assign p_Result_s_fu_253_p5 = {{tmp_1_fu_243_p6}, {p_Result_9_fu_232_p5[159:0]}};

assign tmp_1_fu_243_p6 = {{{{{tmp_senderProtoAddr_s_reg_304}, {tmp_senderHwAddr_V_reg_299}}, {myIpAddress_V}}, {myMacAddress_V}}, {16'd512}};

assign tmp_2_nbreadreq_fu_120_p3 = arpRequestMetaFifo_V_empty_n;

assign tmp_3_fu_197_p6 = {{{{{arpRequestMetaFifo_V_dout}, {48'd0}}, {myIpAddress_V}}, {myMacAddress_V}}, {16'd256}};

assign tmp_nbreadreq_fu_98_p5 = (arpReplyMetaFifo_V_s_empty_n & arpReplyMetaFifo_V_s_2_empty_n & arpReplyMetaFifo_V_s_1_empty_n);

endmodule //generate_arp_pkg
