// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rx_rdma_hdr_rx_rdma_hdr,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.872004,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=11746,HLS_SYN_LUT=71769,HLS_VERSION=2020_2}" *)

module rx_rdma_hdr (
        rx_i_TDATA,
        rx_i_TKEEP,
        rx_i_TSTRB,
        rx_i_TLAST,
        rx_i_TDEST,
        rx_req_o_V_TDATA,
        rx_req_payload_o_TDATA,
        rx_req_payload_o_TKEEP,
        rx_req_payload_o_TSTRB,
        rx_req_payload_o_TLAST,
        rx_req_payload_o_TDEST,
        tx_resp_o_V_TDATA,
        tx_resp_payload_o_TDATA,
        tx_resp_payload_o_TKEEP,
        tx_resp_payload_o_TSTRB,
        tx_resp_payload_o_TLAST,
        tx_resp_payload_o_TDEST,
        ecn_data_out,
        ecn_ack_out_address0,
        ecn_ack_out_ce0,
        ecn_ack_out_d0,
        ecn_ack_out_q0,
        ecn_ack_out_we0,
        drop_reason,
        rx_last,
        state_get_hdr,
        state_cut_payload,
        state_req_resp_switch,
        ap_clk,
        ap_rst_n,
        drop_reason_ap_vld,
        rx_last_ap_vld,
        state_get_hdr_ap_vld,
        rx_i_TVALID,
        rx_i_TREADY,
        state_cut_payload_ap_vld,
        rx_req_o_V_TVALID,
        rx_req_o_V_TREADY,
        tx_resp_o_V_TVALID,
        tx_resp_o_V_TREADY,
        state_req_resp_switch_ap_vld,
        rx_req_payload_o_TVALID,
        rx_req_payload_o_TREADY,
        tx_resp_payload_o_TVALID,
        tx_resp_payload_o_TREADY
);


input  [511:0] rx_i_TDATA;
input  [63:0] rx_i_TKEEP;
input  [63:0] rx_i_TSTRB;
input  [0:0] rx_i_TLAST;
input  [0:0] rx_i_TDEST;
output  [351:0] rx_req_o_V_TDATA;
output  [511:0] rx_req_payload_o_TDATA;
output  [63:0] rx_req_payload_o_TKEEP;
output  [63:0] rx_req_payload_o_TSTRB;
output  [0:0] rx_req_payload_o_TLAST;
output  [0:0] rx_req_payload_o_TDEST;
output  [255:0] tx_resp_o_V_TDATA;
output  [511:0] tx_resp_payload_o_TDATA;
output  [63:0] tx_resp_payload_o_TKEEP;
output  [63:0] tx_resp_payload_o_TSTRB;
output  [0:0] tx_resp_payload_o_TLAST;
output  [0:0] tx_resp_payload_o_TDEST;
output  [0:0] ecn_data_out;
output  [12:0] ecn_ack_out_address0;
output   ecn_ack_out_ce0;
output  [7:0] ecn_ack_out_d0;
input  [7:0] ecn_ack_out_q0;
output   ecn_ack_out_we0;
output  [31:0] drop_reason;
output  [0:0] rx_last;
output  [31:0] state_get_hdr;
output  [31:0] state_cut_payload;
output  [31:0] state_req_resp_switch;
input   ap_clk;
input   ap_rst_n;
output   drop_reason_ap_vld;
output   rx_last_ap_vld;
output   state_get_hdr_ap_vld;
input   rx_i_TVALID;
output   rx_i_TREADY;
output   state_cut_payload_ap_vld;
output   rx_req_o_V_TVALID;
input   rx_req_o_V_TREADY;
output   tx_resp_o_V_TVALID;
input   tx_resp_o_V_TREADY;
output   state_req_resp_switch_ap_vld;
output   rx_req_payload_o_TVALID;
input   rx_req_payload_o_TREADY;
output   tx_resp_payload_o_TVALID;
input   tx_resp_payload_o_TREADY;

 reg    ap_rst_n_inv;
wire    get_hdr_U0_ap_start;
wire    get_hdr_U0_ap_done;
wire    get_hdr_U0_ap_continue;
wire    get_hdr_U0_ap_idle;
wire    get_hdr_U0_ap_ready;
wire   [1023:0] get_hdr_U0_rx_internal_din;
wire    get_hdr_U0_rx_internal_write;
wire   [415:0] get_hdr_U0_rx_headers_internal_din;
wire    get_hdr_U0_rx_headers_internal_write;
wire   [31:0] get_hdr_U0_payload_params_internal_din;
wire    get_hdr_U0_payload_params_internal_write;
wire   [31:0] get_hdr_U0_drop_reason;
wire    get_hdr_U0_drop_reason_ap_vld;
wire   [0:0] get_hdr_U0_rx_last;
wire    get_hdr_U0_rx_last_ap_vld;
wire   [31:0] get_hdr_U0_state_get_hdr;
wire    get_hdr_U0_state_get_hdr_ap_vld;
wire   [0:0] get_hdr_U0_ecn_data_out;
wire    get_hdr_U0_ecn_data_out_ap_vld;
wire   [12:0] get_hdr_U0_ecn_ack_out_address0;
wire    get_hdr_U0_ecn_ack_out_ce0;
wire    get_hdr_U0_ecn_ack_out_we0;
wire   [7:0] get_hdr_U0_ecn_ack_out_d0;
wire    get_hdr_U0_rx_i_TREADY;
wire    ap_sync_continue;
wire    cut_payload_512_U0_ap_start;
wire    cut_payload_512_U0_ap_done;
wire    cut_payload_512_U0_ap_continue;
wire    cut_payload_512_U0_ap_idle;
wire    cut_payload_512_U0_ap_ready;
wire    cut_payload_512_U0_payload_params_internal_read;
wire    cut_payload_512_U0_rx_internal_read;
wire   [1023:0] cut_payload_512_U0_rx_payload_din;
wire    cut_payload_512_U0_rx_payload_write;
wire   [31:0] cut_payload_512_U0_state_cut_payload;
wire    cut_payload_512_U0_state_cut_payload_ap_vld;
wire    req_resp_switch_U0_ap_start;
wire    req_resp_switch_U0_ap_done;
wire    req_resp_switch_U0_ap_continue;
wire    req_resp_switch_U0_ap_idle;
wire    req_resp_switch_U0_ap_ready;
wire    req_resp_switch_U0_rx_headers_internal_read;
wire    req_resp_switch_U0_rx_payload_read;
wire   [351:0] req_resp_switch_U0_rx_req_o_V_TDATA;
wire    req_resp_switch_U0_rx_req_o_V_TVALID;
wire   [255:0] req_resp_switch_U0_tx_resp_o_V_TDATA;
wire    req_resp_switch_U0_tx_resp_o_V_TVALID;
wire   [31:0] req_resp_switch_U0_state_req_resp_switch;
wire    req_resp_switch_U0_state_req_resp_switch_ap_vld;
wire   [511:0] req_resp_switch_U0_rx_req_payload_o_TDATA;
wire    req_resp_switch_U0_rx_req_payload_o_TVALID;
wire   [63:0] req_resp_switch_U0_rx_req_payload_o_TKEEP;
wire   [63:0] req_resp_switch_U0_rx_req_payload_o_TSTRB;
wire   [0:0] req_resp_switch_U0_rx_req_payload_o_TLAST;
wire   [0:0] req_resp_switch_U0_rx_req_payload_o_TDEST;
wire   [511:0] req_resp_switch_U0_tx_resp_payload_o_TDATA;
wire    req_resp_switch_U0_tx_resp_payload_o_TVALID;
wire   [63:0] req_resp_switch_U0_tx_resp_payload_o_TKEEP;
wire   [63:0] req_resp_switch_U0_tx_resp_payload_o_TSTRB;
wire   [0:0] req_resp_switch_U0_tx_resp_payload_o_TLAST;
wire   [0:0] req_resp_switch_U0_tx_resp_payload_o_TDEST;
wire    rx_headers_internal_full_n;
wire   [415:0] rx_headers_internal_dout;
wire    rx_headers_internal_empty_n;
wire    payload_params_internal_full_n;
wire   [31:0] payload_params_internal_dout;
wire    payload_params_internal_empty_n;
wire    rx_internal_full_n;
wire   [1023:0] rx_internal_dout;
wire    rx_internal_empty_n;
wire    rx_payload_full_n;
wire   [1023:0] rx_payload_dout;
wire    rx_payload_empty_n;

rx_rdma_hdr_get_hdr get_hdr_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(get_hdr_U0_ap_start),
    .ap_done(get_hdr_U0_ap_done),
    .ap_continue(get_hdr_U0_ap_continue),
    .ap_idle(get_hdr_U0_ap_idle),
    .ap_ready(get_hdr_U0_ap_ready),
    .rx_i_TVALID(rx_i_TVALID),
    .rx_internal_din(get_hdr_U0_rx_internal_din),
    .rx_internal_full_n(rx_internal_full_n),
    .rx_internal_write(get_hdr_U0_rx_internal_write),
    .rx_headers_internal_din(get_hdr_U0_rx_headers_internal_din),
    .rx_headers_internal_full_n(rx_headers_internal_full_n),
    .rx_headers_internal_write(get_hdr_U0_rx_headers_internal_write),
    .payload_params_internal_din(get_hdr_U0_payload_params_internal_din),
    .payload_params_internal_full_n(payload_params_internal_full_n),
    .payload_params_internal_write(get_hdr_U0_payload_params_internal_write),
    .drop_reason(get_hdr_U0_drop_reason),
    .drop_reason_ap_vld(get_hdr_U0_drop_reason_ap_vld),
    .rx_last(get_hdr_U0_rx_last),
    .rx_last_ap_vld(get_hdr_U0_rx_last_ap_vld),
    .state_get_hdr(get_hdr_U0_state_get_hdr),
    .state_get_hdr_ap_vld(get_hdr_U0_state_get_hdr_ap_vld),
    .ecn_data_out(get_hdr_U0_ecn_data_out),
    .ecn_data_out_ap_vld(get_hdr_U0_ecn_data_out_ap_vld),
    .ecn_ack_out_address0(get_hdr_U0_ecn_ack_out_address0),
    .ecn_ack_out_ce0(get_hdr_U0_ecn_ack_out_ce0),
    .ecn_ack_out_we0(get_hdr_U0_ecn_ack_out_we0),
    .ecn_ack_out_d0(get_hdr_U0_ecn_ack_out_d0),
    .rx_i_TDATA(rx_i_TDATA),
    .rx_i_TREADY(get_hdr_U0_rx_i_TREADY),
    .rx_i_TKEEP(rx_i_TKEEP),
    .rx_i_TSTRB(rx_i_TSTRB),
    .rx_i_TLAST(rx_i_TLAST),
    .rx_i_TDEST(rx_i_TDEST)
);

rx_rdma_hdr_cut_payload_512_s cut_payload_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(cut_payload_512_U0_ap_start),
    .ap_done(cut_payload_512_U0_ap_done),
    .ap_continue(cut_payload_512_U0_ap_continue),
    .ap_idle(cut_payload_512_U0_ap_idle),
    .ap_ready(cut_payload_512_U0_ap_ready),
    .payload_params_internal_dout(payload_params_internal_dout),
    .payload_params_internal_empty_n(payload_params_internal_empty_n),
    .payload_params_internal_read(cut_payload_512_U0_payload_params_internal_read),
    .rx_internal_dout(rx_internal_dout),
    .rx_internal_empty_n(rx_internal_empty_n),
    .rx_internal_read(cut_payload_512_U0_rx_internal_read),
    .rx_payload_din(cut_payload_512_U0_rx_payload_din),
    .rx_payload_full_n(rx_payload_full_n),
    .rx_payload_write(cut_payload_512_U0_rx_payload_write),
    .state_cut_payload(cut_payload_512_U0_state_cut_payload),
    .state_cut_payload_ap_vld(cut_payload_512_U0_state_cut_payload_ap_vld)
);

rx_rdma_hdr_req_resp_switch req_resp_switch_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(req_resp_switch_U0_ap_start),
    .ap_done(req_resp_switch_U0_ap_done),
    .ap_continue(req_resp_switch_U0_ap_continue),
    .ap_idle(req_resp_switch_U0_ap_idle),
    .ap_ready(req_resp_switch_U0_ap_ready),
    .rx_headers_internal_dout(rx_headers_internal_dout),
    .rx_headers_internal_empty_n(rx_headers_internal_empty_n),
    .rx_headers_internal_read(req_resp_switch_U0_rx_headers_internal_read),
    .rx_payload_dout(rx_payload_dout),
    .rx_payload_empty_n(rx_payload_empty_n),
    .rx_payload_read(req_resp_switch_U0_rx_payload_read),
    .rx_req_o_V_TREADY(rx_req_o_V_TREADY),
    .tx_resp_o_V_TREADY(tx_resp_o_V_TREADY),
    .rx_req_payload_o_TREADY(rx_req_payload_o_TREADY),
    .tx_resp_payload_o_TREADY(tx_resp_payload_o_TREADY),
    .rx_req_o_V_TDATA(req_resp_switch_U0_rx_req_o_V_TDATA),
    .rx_req_o_V_TVALID(req_resp_switch_U0_rx_req_o_V_TVALID),
    .tx_resp_o_V_TDATA(req_resp_switch_U0_tx_resp_o_V_TDATA),
    .tx_resp_o_V_TVALID(req_resp_switch_U0_tx_resp_o_V_TVALID),
    .state_req_resp_switch(req_resp_switch_U0_state_req_resp_switch),
    .state_req_resp_switch_ap_vld(req_resp_switch_U0_state_req_resp_switch_ap_vld),
    .rx_req_payload_o_TDATA(req_resp_switch_U0_rx_req_payload_o_TDATA),
    .rx_req_payload_o_TVALID(req_resp_switch_U0_rx_req_payload_o_TVALID),
    .rx_req_payload_o_TKEEP(req_resp_switch_U0_rx_req_payload_o_TKEEP),
    .rx_req_payload_o_TSTRB(req_resp_switch_U0_rx_req_payload_o_TSTRB),
    .rx_req_payload_o_TLAST(req_resp_switch_U0_rx_req_payload_o_TLAST),
    .rx_req_payload_o_TDEST(req_resp_switch_U0_rx_req_payload_o_TDEST),
    .tx_resp_payload_o_TDATA(req_resp_switch_U0_tx_resp_payload_o_TDATA),
    .tx_resp_payload_o_TVALID(req_resp_switch_U0_tx_resp_payload_o_TVALID),
    .tx_resp_payload_o_TKEEP(req_resp_switch_U0_tx_resp_payload_o_TKEEP),
    .tx_resp_payload_o_TSTRB(req_resp_switch_U0_tx_resp_payload_o_TSTRB),
    .tx_resp_payload_o_TLAST(req_resp_switch_U0_tx_resp_payload_o_TLAST),
    .tx_resp_payload_o_TDEST(req_resp_switch_U0_tx_resp_payload_o_TDEST)
);

rx_rdma_hdr_fifo_w416_d2_S rx_headers_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_hdr_U0_rx_headers_internal_din),
    .if_full_n(rx_headers_internal_full_n),
    .if_write(get_hdr_U0_rx_headers_internal_write),
    .if_dout(rx_headers_internal_dout),
    .if_empty_n(rx_headers_internal_empty_n),
    .if_read(req_resp_switch_U0_rx_headers_internal_read)
);

rx_rdma_hdr_fifo_w32_d2_S payload_params_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_hdr_U0_payload_params_internal_din),
    .if_full_n(payload_params_internal_full_n),
    .if_write(get_hdr_U0_payload_params_internal_write),
    .if_dout(payload_params_internal_dout),
    .if_empty_n(payload_params_internal_empty_n),
    .if_read(cut_payload_512_U0_payload_params_internal_read)
);

rx_rdma_hdr_fifo_w1024_d2_S rx_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_hdr_U0_rx_internal_din),
    .if_full_n(rx_internal_full_n),
    .if_write(get_hdr_U0_rx_internal_write),
    .if_dout(rx_internal_dout),
    .if_empty_n(rx_internal_empty_n),
    .if_read(cut_payload_512_U0_rx_internal_read)
);

rx_rdma_hdr_fifo_w1024_d2_S rx_payload_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(cut_payload_512_U0_rx_payload_din),
    .if_full_n(rx_payload_full_n),
    .if_write(cut_payload_512_U0_rx_payload_write),
    .if_dout(rx_payload_dout),
    .if_empty_n(rx_payload_empty_n),
    .if_read(req_resp_switch_U0_rx_payload_read)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign cut_payload_512_U0_ap_continue = 1'b1;

assign cut_payload_512_U0_ap_start = 1'b1;

assign drop_reason = get_hdr_U0_drop_reason;

assign drop_reason_ap_vld = get_hdr_U0_drop_reason_ap_vld;

assign ecn_ack_out_address0 = get_hdr_U0_ecn_ack_out_address0;

assign ecn_ack_out_ce0 = get_hdr_U0_ecn_ack_out_ce0;

assign ecn_ack_out_d0 = get_hdr_U0_ecn_ack_out_d0;

assign ecn_ack_out_we0 = get_hdr_U0_ecn_ack_out_we0;

assign ecn_data_out = get_hdr_U0_ecn_data_out;

assign get_hdr_U0_ap_continue = 1'b1;

assign get_hdr_U0_ap_start = 1'b1;

assign req_resp_switch_U0_ap_continue = 1'b1;

assign req_resp_switch_U0_ap_start = 1'b1;

assign rx_i_TREADY = get_hdr_U0_rx_i_TREADY;

assign rx_last = get_hdr_U0_rx_last;

assign rx_last_ap_vld = get_hdr_U0_rx_last_ap_vld;

assign rx_req_o_V_TDATA = req_resp_switch_U0_rx_req_o_V_TDATA;

assign rx_req_o_V_TVALID = req_resp_switch_U0_rx_req_o_V_TVALID;

assign rx_req_payload_o_TDATA = req_resp_switch_U0_rx_req_payload_o_TDATA;

assign rx_req_payload_o_TDEST = req_resp_switch_U0_rx_req_payload_o_TDEST;

assign rx_req_payload_o_TKEEP = req_resp_switch_U0_rx_req_payload_o_TKEEP;

assign rx_req_payload_o_TLAST = req_resp_switch_U0_rx_req_payload_o_TLAST;

assign rx_req_payload_o_TSTRB = req_resp_switch_U0_rx_req_payload_o_TSTRB;

assign rx_req_payload_o_TVALID = req_resp_switch_U0_rx_req_payload_o_TVALID;

assign state_cut_payload = cut_payload_512_U0_state_cut_payload;

assign state_cut_payload_ap_vld = cut_payload_512_U0_state_cut_payload_ap_vld;

assign state_get_hdr = get_hdr_U0_state_get_hdr;

assign state_get_hdr_ap_vld = get_hdr_U0_state_get_hdr_ap_vld;

assign state_req_resp_switch = req_resp_switch_U0_state_req_resp_switch;

assign state_req_resp_switch_ap_vld = req_resp_switch_U0_state_req_resp_switch_ap_vld;

assign tx_resp_o_V_TDATA = req_resp_switch_U0_tx_resp_o_V_TDATA;

assign tx_resp_o_V_TVALID = req_resp_switch_U0_tx_resp_o_V_TVALID;

assign tx_resp_payload_o_TDATA = req_resp_switch_U0_tx_resp_payload_o_TDATA;

assign tx_resp_payload_o_TDEST = req_resp_switch_U0_tx_resp_payload_o_TDEST;

assign tx_resp_payload_o_TKEEP = req_resp_switch_U0_tx_resp_payload_o_TKEEP;

assign tx_resp_payload_o_TLAST = req_resp_switch_U0_tx_resp_payload_o_TLAST;

assign tx_resp_payload_o_TSTRB = req_resp_switch_U0_tx_resp_payload_o_TSTRB;

assign tx_resp_payload_o_TVALID = req_resp_switch_U0_tx_resp_payload_o_TVALID;


// synthesis translate_off
`include "rx_rdma_hdr_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //rx_rdma_hdr

